@inproceedings{0d91db780fed40d580d4ea4b9e261b7b,
  title = {Simulating More than 1 Billion {{SPH}} Particles Using {{GPU}} Hardware Acceleration},
  booktitle = {Simulating More than 1 Billion {{SPH}} Particles Using {{GPU}} Hardware Acceleration},
  author = {Crespo, {\relax AJC} and Rogers, Benedict D. and Dominguez, {\relax JM} and {Gomez-Gesteira}, M},
  year = {2013},
  month = nov,
  pages = {249--254},
  url = {http://https://wiki.manchester.ac.uk/spheric/index.php/Events_and_Activities},
  abstract = {The different SPH codes developed within the SPHERIC community are reaching a sophisticated state of maturity in terms of improved formulations and validated calibrations for specific applications. However, one of the main drawbacks of the SPH method is},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd}
}

@misc{2024,
  title = {Broadmark Github Benchmarking Software.},
  year = {2024},
  month = jan,
  url = {https://github.com/ppgia-unifor/Broadmark},
  urldate = {2024-01-27},
  abstract = {A framework for the development, testing and evaluation of broad phase collision detection algorithms},
  copyright = {GPL-3.0},
  howpublished = {PPGIA - UNIFOR},
  keywords = {reviewed}
}

@article{adami2012,
  title = {A Generalized Wall Boundary Condition for Smoothed Particle Hydrodynamics},
  author = {Adami, S. and Hu, X.Y. and Adams, N.A.},
  year = {2012},
  month = aug,
  journal = {Journal of Computational Physics},
  volume = {231},
  number = {21},
  pages = {7057--7075},
  issn = {00219991},
  doi = {10.1016/j.jcp.2012.05.005},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S002199911200229X},
  urldate = {2024-01-16},
  abstract = {In this paper we present a new formulation of the boundary condition at static and moving solid walls in SPH simulations. Our general approach is both applicable to two and three dimensions and is very simple compared to previous wall boundary formulations. Based on a local force balance between wall and fluid particles we apply a pressure boundary condition on the solid particles to prevent wall penetration. This method can handle sharp corners and complex geometries as is demonstrated with several examples. A validation shows that we recover hydrostatic equilibrium conditions in a static tank, and a comparison of the classical dam break simulation with state-of-the-art results in literature shows good agreement. We simulate various problems such as the flow around a cylinder and the backward facing step at Re = 100 to demonstrate the general applicability of this new method.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\3CLJ9223\Adami et al. - 2012 - A generalized wall boundary condition for smoothed.pdf}
}

@techreport{adams2006,
  title = {Particle {{Splatting}}: {{Interactive Rendering}} of {{Particle-Based Simulation Data}}},
  author = {Adams, Bart and Lenaerts, Toon and Dutre, Philip and Cw, Report},
  year = {2006},
  institution = {Department of Computer Science, K.U.Leuve},
  url = {https://www.cs.kuleuven.be/publicaties/rapporten/cw/CW453.pdf},
  abstract = {Particle-based simulation methods are gaining popularity for creating animations of physical phenomena such as fluids and melting solids. Extracting and visualizing an explicit surface corresponding to the volume of particles is however a difficult and time-consuming task, especially with increasing particle set sizes. In this paper, we present a novel interactive rendering algorithm for rasterizing a surface which conforms to the particle cloud. We show how projection and blending of overlapping spheres assigned to the particles yields smooth surfaces and discuss how this algorithm can be implemented on the GPU.},
  langid = {english},
  keywords = {done,MATRIX},
  file = {J:\sandboxR9\Thesis\zotero\storage\TIHEBT3S\Adams et al. - 2006 - Particle Splatting Interactive Rendering of Parti.pdf}
}

@article{akman1989,
  title = {Geometric Computing and Uniform Grid Technique},
  author = {Akman, V. and Franklin, W.R. and Kankanhalli, M. and Narayanaswami, C.},
  year = {1989},
  month = sep,
  journal = {Computer-Aided Design},
  volume = {21},
  number = {7},
  pages = {410--420},
  issn = {00104485},
  doi = {10.1016/0010-448590125-5},
  url = {https://linkinghub.elsevier.com/retrieve/pii/0010448589901255},
  urldate = {2024-02-22},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\CWHX2IPS\Akman et al. - 1989 - Geometric computing and uniform grid technique.pdf}
}

@article{alder1957,
  title = {Phase {{Transition}} for a {{Hard Sphere System}}},
  author = {Alder, B. J. and Wainwright, T. E.},
  year = {1957},
  month = nov,
  journal = {The Journal of Chemical Physics},
  volume = {27},
  number = {5},
  pages = {1208--1209},
  issn = {0021-9606, 1089-7690},
  doi = {10.1063/1.1743957},
  url = {https://pubs.aip.org/jcp/article/27/5/1208/204728/Phase-Transition-for-a-Hard-Sphere-System},
  urldate = {2024-01-27},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\2PN5DNHY\Alder and Wainwright - 1957 - Phase Transition for a Hard Sphere System.pdf}
}

@article{alderStudiesMolecularDynamics1959a,
  title = {Studies in {{Molecular Dynamics}}. {{I}}. {{General Method}}},
  author = {Alder, B. J. and Wainwright, T. E.},
  year = {1959},
  month = aug,
  journal = {The Journal of Chemical Physics},
  volume = {31},
  number = {2},
  pages = {459--466},
  issn = {0021-9606, 1089-7690},
  doi = {10.1063/1.1730376},
  url = {https://pubs.aip.org/jcp/article/31/2/459/1031509/Studies-in-Molecular-Dynamics-I-General-Method},
  urldate = {2024-01-27},
  abstract = {A method is outlined by which it is possible to calculate exactly the behavior of several hundred interacting classical particles. The study of this many-body problem is carried out by an electronic computer which solves numerically the simultaneous equations of motion. The limitations of this numerical scheme are enumerated and the important steps in making the program efficient on the computers are indicated. The applicability of this method to the solution of many problems in both equilibrium and nonequilibrium statistical mechanics is discussed.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\4XIJ7LFD\Alder and Wainwright - 1959 - Studies in Molecular Dynamics. I. General Method.pdf}
}

@book{allen2017,
  title = {Computer Simulation of Liquids},
  author = {Allen, M. P. and Tildesley, D. J.},
  year = {2017},
  edition = {Second edition},
  publisher = {Oxford University Press},
  address = {Oxford, United Kingdom},
  url = {https://academic.oup.com/book/27866?login=false},
  isbn = {978-0-19-880319-5 978-0-19-880320-1},
  langid = {english},
  lccn = {QC145.2 .A43 2017},
  keywords = {Data processing,Liquids,Mathematical models,Molecular dynamics,Monte Carlo method},
  file = {J:\sandboxR9\Thesis\zotero\storage\EIKE96X3\Allen and Tildesley - 2017 - Computer simulation of liquids.pdf}
}

@article{alobaid2015,
  title = {A Particle-Grid Method for {{Euler-Lagrange}} Approach},
  author = {Alobaid, Falah},
  year = {2015},
  month = dec,
  journal = {Powder Technology},
  volume = {286},
  pages = {342--360},
  issn = {00325910},
  url = {https://www.sciencedirect.com/science/article/abs/pii/S003259101530019X},
  urldate = {2024-01-09},
  abstract = {In Euler--Lagrange approach, the physical values of fluid and solid phases are computed in a common grid, namely fluid grid. The refinement of the fluid grid resolution beyond the particle scale leads to inconsistency with the basis of using extended Navier--Stokes equations for gas--solid flow (Anderson et al., 1967). In this study, an additional particle--grid is applied, in which the physical values of solid phase are computed. To investigate the influence of the particle--grid application on the simulation accuracy, the numerical results obtained by Euler--Lagrange approach combined with a deterministic collision model (known also as Discrete Element Method (DEM)) are validated with measurements obtained from a lab-scale spouted fluidized bed. The results confirm that the particle--grid method allows the variation of the fluid grid resolution independent of the particle size and consequently improves the calculation accuracy. In the second part of this work, the simulation results obtained from the extended Euler--Lagrange/DEM model are compared with the simulation results obtained from the Euler--Lagrange approach combined with a stochastic collision model. Two different fluidization mass flow rates are considered to analyse the ability of the used simulation approaches to predict the hydrodynamic behaviour of the gas spouted fluidized bed. The results show that both techniques can reproduce the right fluidization regimes including the bubble size and the bed expansion. Deviations from the experimental data in the jet zone and during the final stage of the bubble formation are, however, observed. The reasons of these discrepancies in predicting the dynamic behaviour of the bed, the advantages and limitations of the two approaches are demonstrated.},
  langid = {english},
  keywords = {CFDComputational Fluid Dynamics,CIPConstrained Interpolation Profile,DCMDeterministic Collision Model,HCDHas particle collison Detection,PCLPenetrating Collision,PICParticle in Cell,reviewed,STOStochastic,TSTime Step},
  file = {J:\sandboxR9\Thesis\zotero\storage\HU2S53WZ\Alobaid - 2015 - A particle–grid method for Euler–Lagrange approach.pdf}
}

@article{anderson2008,
  title = {General Purpose Molecular Dynamics Simulations Fully Implemented on Graphics Processing Units},
  author = {Anderson, Joshua A. and Lorenz, Chris D. and Travesset, A.},
  year = {2008},
  month = may,
  journal = {Journal of Computational Physics},
  volume = {227},
  number = {10},
  pages = {5342--5359},
  issn = {00219991},
  doi = {10.1016/j.jcp.2008.01.047},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0021999108000818},
  urldate = {2024-01-10},
  abstract = {Graphics processing units (GPUs), originally developed for rendering real-time effects in computer games, now provide unprecedented computational power for scientific applications. In this paper, we develop a general purpose molecular dynamics code that runs entirely on a single GPU. It is shown that our GPU implementation provides a performance equivalent to that of fast 30 processor core distributed memory cluster. Our results show that GPUs already provide an inexpensive alternative to such clusters and discuss implications for the future.},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\QHLA5WMJ\Anderson et al. - 2008 - General purpose molecular dynamics simulations ful.pdf}
}

@misc{andoni2018,
  title = {Approximate {{Nearest Neighbor Search}} in {{High Dimensions}}},
  author = {Andoni, Alexandr and Indyk, Piotr and Razenshteyn, Ilya},
  year = {2018},
  month = jun,
  number = {arXiv:1806.09823},
  eprint = {1806.09823},
  primaryclass = {cs, stat},
  publisher = {arXiv},
  url = {http://arxiv.org/abs/1806.09823},
  urldate = {2024-01-27},
  abstract = {The nearest neighbor problem is defined as follows: Given a set P of n points in some metric space (X, D), build a data structure that, given any point q, returns a point in P that is closest to q (its ``nearest neighbor'' in P ). The data structure stores additional information about the set P , which is then used to find the nearest neighbor without computing all distances between q and P . The problem has a wide range of applications in machine learning, computer vision, databases and other fields.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Computational Geometry,Computer Science - Data Structures and Algorithms,Computer Science - Databases,Statistics - Machine Learning},
  file = {J:\sandboxR9\Thesis\zotero\storage\TVFVV6ML\Andoni et al. - 2018 - Approximate Nearest Neighbor Search in High Dimens.pdf}
}

@book{arczewski2011a,
  title = {Multibody {{Dynamics}}: {{Computational Methods}} and {{Applications}}},
  shorttitle = {Multibody {{Dynamics}}},
  editor = {Arczewski, Krzysztof and Blajer, Wojciech and Fraczek, Janusz and Wojtyra, Marek},
  year = {2011},
  series = {Computational {{Methods}} in {{Applied Sciences}}},
  volume = {23},
  publisher = {Springer Netherlands},
  address = {Dordrecht},
  doi = {10.1007/978-90-481-9971-6},
  url = {https://link.springer.com/10.1007/978-90-481-9971-6},
  urldate = {2024-02-16},
  isbn = {978-90-481-9970-9 978-90-481-9971-6},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\D52ZYMZK\Arczewski et al. - 2011 - Multibody Dynamics Computational Methods and Appl.pdf}
}

@article{avril2012,
  title = {Fast {{Collision Culling}} in {{Large-Scale Environments Using GPU Mapping Function}}},
  author = {Avril, Quentin and Gouranton, Val{\'e}rie and Arnaldi, Bruno},
  year = {2012},
  journal = {ACM Eurographics Parallel Graphics and Visualization},
  url = {https://hal.science/hal-00710519},
  abstract = {This paper presents a novel and efficient GPU-based parallel algorithm to cull non-colliding object pairs in very large-scale dynamic simulations. It allows to cull objects in less than 25ms with more than 100K objects. It is designed for many-core GPU and fully exploits multi-threaded capabilities and data-parallelism. In order to take advantage of the high number of cores, a new mapping function is defined that enables GPU threads to determine the objects pair to compute without any global memory access. These new optimized GPU kernel functions use the thread indexes and turn them into a unique pair of objects to test. A square root approximation technique is used based on Newton's estimation, enabling the threads to only perform a few atomic operations. A first characterization of the approximation errors is presented, enabling the fixing of incorrect computations. The I/O GPU streams are optimized using binary masks. The implementation and evaluation is made on largescale dynamic rigid body simulations. The increase in speed is highlighted over other recently proposed CPU and GPU-based techniques. The comparison shows that our system is, in most cases, faster than previous approaches.},
  langid = {english},
  keywords = {BPHBroad phase process,done,ISMImage Space Methods,KDOP K-Dop,MATRIX,NPH Narrow Phase Process,OBB Oriented Bounding Box,REFSRefs reviewd,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\NT6UIE33\Avril et al. - Fast Collision Culling in Large-Scale Environments.pdf}
}

@article{baciu1999,
  title = {{{RECODE}}: An Image-Based Collision Detection Algorithm},
  shorttitle = {{{RECODE}}},
  author = {Baciu, George and Wong, Wingo Sai-Keung and Sun, Hanqiu},
  year = {1999},
  month = oct,
  journal = {The Journal of Visualization and Computer Animation},
  volume = {10},
  number = {4},
  pages = {181--192},
  issn = {1049-8907, 1099-1778},
  doi = {10.1109/PCCGA.1998.732079},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/(SICI)1099-1778(199910/12)10:4<181::AID-VIS211>3.0.CO;2-Q},
  urldate = {2024-01-10},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\XUEIZR9C\Baciu et al. - 1999 - RECODE an image-based collision detection algorit.pdf}
}

@article{baciu2003,
  title = {Image-Based Techniques in a Hybrid Collision Detector},
  author = {Baciu, G. and Wong, W.S.K.},
  year = {2003},
  month = apr,
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {9},
  number = {2},
  pages = {254--271},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2003.1196011},
  url = {http://ieeexplore.ieee.org/document/1196011/},
  urldate = {2024-01-10},
  abstract = {Most collision detection methods developed so far are based on geometrical object-space interference tests. While this remains the basic mode of investigation for geometric algorithms, the requirements for interactive rates and complex geometry predominate in commercial applications. In this article, we propose a new mode of collision detection based on an image-space approach. This approach breaks the object-space collision detection bottleneck by distributing the computational load onto the hardware graphics pipeline. The image-space approach, in conjuction with efficient bounding-box strategies in the object-space, has the potential to handle complex object interactions at interactive rates.},
  langid = {english},
  keywords = {O,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\5TD9X5EV\Baciu and Wong - 2003 - Image-based techniques in a hybrid collision detec.pdf}
}

@book{bader2014,
  title = {Parallel Computing: Accelerating Computational Science and Engineering ({{CSE}})},
  shorttitle = {Parallel Computing},
  editor = {Bader, Michael and Bode, Arndt and Bungartz, H.-J. and Gerndt, Michael and Joubert, G. R. and Peters, F. J.},
  year = {2014},
  series = {Advances in Parallel Computing},
  number = {v. 25},
  publisher = {IOS Press},
  address = {Amsterdam},
  url = {https://dl.acm.org/doi/book/10.5555/2655417},
  isbn = {978-1-61499-380-3},
  langid = {english},
  lccn = {QA76.58 .P3794 2013},
  keywords = {Conference proceedings,Congresses,Parallel processing (Electronic computers)},
  annotation = {OCLC: ocn875521458},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\3MIED2CH\Bader et al. - 2014 - Parallel computing accelerating computational sci.pdf}
}

@inproceedings{bakkum2010,
  title = {Accelerating {{SQL}} Database Operations on a {{GPU}} with {{CUDA}}},
  booktitle = {Proceedings of the 3rd {{Workshop}} on {{General-Purpose Computation}} on {{Graphics Processing Units}}},
  author = {Bakkum, Peter and Skadron, Kevin},
  year = {2010},
  month = mar,
  pages = {94--103},
  publisher = {ACM},
  address = {Pittsburgh Pennsylvania USA},
  doi = {10.1145/1735688.1735706},
  url = {https://dl.acm.org/doi/10.1145/1735688.1735706},
  urldate = {2024-01-09},
  abstract = {Prior work has shown dramatic acceleration for various database operations on GPUs, but only using primitives that are not part of conventional database languages such as SQL. This paper implements a subset of the SQLite command processor directly on the GPU. This dramatically reduces the effort required to achieve GPU acceleration by avoiding the need for database programmers to use new programming languages such as CUDA or modify their programs to use non-SQL libraries.},
  isbn = {978-1-60558-935-0},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\JGFFLJ37\Bakkum and Skadron - 2010 - Accelerating SQL database operations on a GPU with.pdf}
}

@article{balachandar2010,
  title = {Turbulent {{Dispersed Multiphase Flow}}},
  author = {Balachandar, S. and Eaton, John K.},
  year = {2010},
  month = jan,
  journal = {Annual Review of Fluid Mechanics},
  volume = {42},
  number = {1},
  pages = {111--133},
  issn = {0066-4189, 1545-4479},
  doi = {10.1146/annurev.fluid.010908.165243},
  url = {https://www.annualreviews.org/doi/10.1146/annurev.fluid.010908.165243},
  urldate = {2024-03-02},
  abstract = {Turbulent dispersed multiphase flows are common in many engineering and environmental applications. The stochastic nature of both the carrier-phase turbulence and the dispersed-phase distribution makes the problem of turbulent dispersed multiphase flow far more complex than its single-phase counterpart. In this article we first review the current state-of-the-art experimental and computational techniques for turbulent dispersed multiphase flows, their strengths and limitations, and opportunities for the future. The review then focuses on three important aspects of turbulent dispersed multiphase flows: the preferential concentration of particles, droplets, and bubbles; the effect of turbulence on the coupling between the dispersed and carrier phases; and modulation of carrier-phase turbulence due to the presence of particles and bubbles.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZWTU2IDT\Balachandar and Eaton - 2010 - Turbulent Dispersed Multiphase Flow.pdf}
}

@inproceedings{baraff1990,
  title = {Curved Surfaces and Coherence for Non-Penetrating Rigid Body Simulation},
  booktitle = {Proceedings of the 17th Annual Conference on {{Computer}} Graphics and Interactive Techniques},
  author = {Baraff, David},
  year = {1990},
  month = sep,
  pages = {19--28},
  publisher = {ACM},
  address = {Dallas TX USA},
  doi = {10.1145/97879.97881},
  url = {https://dl.acm.org/doi/10.1145/97879.97881},
  urldate = {2024-01-09},
  abstract = {A formulation for the contact forces between curved surfaces in resting (non-colliding) contact is presented. In contrast to previous formulations, constraints on the allowable tangential movement between contacting surfaces are not required. Surfaces are restricted to be twice-differentiable surfaces without boundary. Only finitely many contact points between surfaces are allowed; however, the surfaces need not be convex. The formulation yields the contact forces between curved surfaces and polyhedra as well. Algorithms for performing collision detection during simulation on bodies composed of both polyhedra and strictly convex curved surfaces are also presented. The collision detection algorithms exploit the geometric coherence between successive time steps of the simulation to achieve efficient running times.},
  isbn = {978-0-89791-344-7},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\YCWF2XNF\Baraff - 1990 - Curved surfaces and coherence for non-penetrating .pdf}
}

@article{barbicV,
  title = {Subspace {{Self-Collision Culling}}},
  author = {Barbic{\textasciicaron}, Jernej and James, Doug L},
  abstract = {We show how to greatly accelerate self-collision detection (SCD) for reduced deformable models. Given a triangle mesh and a set of deformation modes, our method precomputes Subspace SelfCollision Culling (SSCC) certificates which, if satisfied, prove the absence of self-collisions for large parts of the model. At runtime, bounding volume hierarchies augmented with our certificates can aggressively cull overlap tests and reduce hierarchy updates. Our method supports both discrete and continuous SCD, can handle complex geometry, and makes no assumptions about geometric smoothness or normal bounds. It is particularly effective for simulations with modest subspace deformations, where it can often verify the absence of self-collisions in constant time. Our certificates enable low amortized costs, in time and across many objects in multibody dynamics simulations. Finally, SSCC is effective enough to support self-collision tests at audio rates, which we demonstrate by producing the first sound simulations of clattering objects.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\UJ7GMYU8\Barbicˇ and James - Subspace Self-Collision Culling.pdf}
}

@inproceedings{barbieri2013,
  title = {Fast {{Uniform Grid Construction}} on {{GPGPUs Using Atomic Operations}}},
  booktitle = {Volume 25: {{Parallel Computing}}: {{Accelerating Computational Science}} and {{Engineering}} ({{CSE}})},
  author = {Barbieri, Davide and Cardellini, Valeria and Filippone, Salvatore},
  year = {2013},
  doi = {10.3233/978-1-61499-381-0-295},
  abstract = {Domain decomposition based on spatial locality is a classical dataparallel problem whose solution may improve by orders of magnitude when implemented on a GPU. Among the data structures involved in domain decomposition, uniform grids are widely used to speed up simulations in a number of fields, including computational physics and graphics. In this work, we present two commonly used approaches to generate uniform grids on GPUs and propose a new single-pass method that has several advantages over the previous ones. We also present some performance results of our CUDA implementation of a broad-phase collision detection algorithm for particles simulation, comparing the different methods. In some tests our method achieves a speedup of 2 compared to the fastest known method supporting a fixed maximum number of elements per cell, and a speedup of 7 compared with the fastest method without such a constraint.},
  langid = {english},
  keywords = {done},
  file = {J:\sandboxR9\Thesis\zotero\storage\CMLX2RYI\Barbieri et al. - Fast Uniform Grid Construction on GPGPUs Using Ato.pdf}
}

@article{barnes1986,
  title = {A Hierarchical {{O}}({{N}} Log {{N}}) Force-Calculation Algorithm},
  author = {Barnes, Josh and Hut, Piet},
  year = {1986},
  month = dec,
  journal = {Nature},
  volume = {324},
  number = {6096},
  pages = {446--449},
  issn = {0028-0836, 1476-4687},
  doi = {10.1038/324446a0},
  url = {https://www.nature.com/articles/324446a0},
  urldate = {2024-02-23},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\EUHZDP4Z\Barnes and Hut - 1986 - A hierarchical O(N log N) force-calculation algori.pdf}
}

@article{barnes2018,
  title = {{{SPMHD}} Simulations of Structure Formation},
  author = {Barnes, David J and On, Alvina Y L and Wu, Kinwah and Kawata, Daisuke},
  year = {2018},
  month = may,
  journal = {Monthly Notices of the Royal Astronomical Society},
  volume = {476},
  number = {3},
  pages = {2890--2904},
  issn = {0035-8711, 1365-2966},
  doi = {10.1093/mnras/sty400},
  url = {https://academic.oup.com/mnras/article/476/3/2890/4862485},
  urldate = {2024-01-09},
  abstract = {The intracluster medium of galaxy clusters is permeated by {$\mu$}G magnetic fields. Observations with current and future facilities have the potential to illuminate the role of these magnetic fields play in the astrophysical processes of galaxy clusters. To obtain a greater understanding of how the initial seed fields evolve to the magnetic fields in the intracluster medium requires magnetohydrodynamic simulations. We critically assess the current smoothed particle magnetohydrodynamic (SPMHD) schemes, especially highlighting the impact of a hyperbolic divergence cleaning scheme and artificial resistivity switch on the magnetic field evolution in cosmological simulations of the formation of a galaxy cluster using the N-body/SPMHD code GCMHD++. The impact and performance of the cleaning scheme and two different schemes for the artificial resistivity switch is demonstrated via idealized test cases and cosmological simulations. We demonstrate that the hyperbolic divergence cleaning scheme is effective at suppressing the growth of the numerical divergence error of the magnetic field and should be applied to any SPMHD simulation. Although the artificial resistivity is important in the strong field regime, it can suppress the growth of the magnetic field in the weak field regime, such as galaxy clusters. With sufficient resolution, simulations with divergence cleaning can reproduce observed magnetic fields. We conclude that the cleaning scheme alone is sufficient for galaxy cluster simulations, but our results indicate that the SPMHD scheme must be carefully chosen depending on the regime of the magnetic field.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\6EP5YKHN\Barnes et al. - 2018 - SPMHD simulations of structure formation.pdf}
}

@article{basu,
  title = {{{CMP Directory Coherence}}: {{One Granularity Does Not Fit All}}},
  author = {Basu, Arkaprava and Beckmann, Bradford M and Hill, Mark D and Reinhardt, Steven K},
  abstract = {To support legacy software, large CMPs often provide cache coherence via an on-chip directory rather than snooping. In those designs, a key challenge is maximizing the effectiveness of precious on-chip directory state. Most current directory protocols miss an opportunity by organizing all state in per-block records.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\KXNH6RLK\Basu et al. - CMP Directory Coherence One Granularity Does Not .pdf}
}

@article{bell2024MST,
  title = {A {{SURVEY OF GPU-ACCELERATED PARTICLE COLLISION DETECTION}}},
  author = {Bell, Jack},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\R4P2JIKT\Bell - A SURVEY OF GPU-ACCELERATED PARTICLE COLLISION DET.pdf}
}

@article{belleman2008,
  title = {High Performance Direct Gravitational {{N-body}} Simulations on Graphics Processing Units {{II}}: {{An}} Implementation in {{CUDA}}},
  shorttitle = {High Performance Direct Gravitational {{N-body}} Simulations on Graphics Processing Units {{II}}},
  author = {Belleman, Robert G. and B{\'e}dorf, Jeroen and Portegies Zwart, Simon F.},
  year = {2008},
  month = feb,
  journal = {New Astronomy},
  volume = {13},
  number = {2},
  pages = {103--112},
  issn = {13841076},
  doi = {10.1016/j.newast.2007.07.004},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S1384107607000760},
  urldate = {2024-01-10},
  abstract = {We present the results of gravitational direct N-body simulations using the graphics processing unit (GPU) on a commercial NVIDIA GeForce 8800GTX designed for gaming computers. The force evaluation of the N-body problem is implemented in ``Compute Unified Device Architecture'' (CUDA) using the GPU to speedup the calculations. We tested the implementation on three different N-body codes: two direct N-body integration codes, using the 4th order predictor--corrector Hermite integrator with block time-steps, and one Barnes-Hut treecode, which uses a 2nd order leapfrog integration scheme. The integration of the equations of motions for all codes is performed on the host CPU.},
  langid = {english},
  keywords = {CUDA CUDA,PWPairwise (Niave) NN Search,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\4I5CVH3J\Belleman et al. - 2008 - High performance direct gravitational N-body simul.pdf}
}

@inproceedings{benitez2005,
  title = {Collision {{Detection Using Sphere-Tree Construction}}},
  booktitle = {15th {{International Conference}} on {{Electronics}}, {{Communications}} and {{Computers}} ({{CONIELECOMP}}'05)},
  author = {Benitez, A. and Del Carmen Ramirez, M. and Vallejo, D.},
  year = {2005},
  pages = {286--291},
  publisher = {IEEE},
  address = {Puebla, Mexico},
  doi = {10.1109/CONIEL.2005.29},
  url = {http://ieeexplore.ieee.org/document/1488575/},
  urldate = {2024-01-10},
  abstract = {Fast and accurate collision detection between general geometric models is a fundamental problem in modeling, robotics, manufacturing and computer-simulated environments. Most of the earlier algorithm are either restricted to a class of geometric models, say convex polytopes, or are not fast enough for practical applications. We present an new algorithm for collision detection between general polygonal models. The algorithm makes use of hierarchical representations along with frame to frame coherence to rapidly detect collisions. It has been implemented as part of motion planning package. In practice, it can accurately detect the contacts between large geometries composed of thousands of polygons at interactive rates.},
  isbn = {978-0-7695-2283-8},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\DQZ6SC3F\Benitez et al. - 2005 - Collision Detection Using Sphere-Tree Construction.pdf}
}

@book{bergen2010,
  title = {Game {{Physics Pearls}}},
  author = {{Gino van den Bergen {and} Dirk Gregorius}},
  langid = {english},
  keywords = {SURVSurvey},
  file = {J:\sandboxR9\Thesis\zotero\storage\NSG4R93C\Game Physics Pearls.pdf}
}

@misc{bonanni2021,
  title = {Shock {{Parameterization}} for the {{Compressible Euler Equations}} Using {{Deep Learning}}},
  author = {Bonanni, Matthew and Bornhoft, Brett and Lasemi, Ali},
  year = {2021},
  address = {Stanford University},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\UUJ33T7X\Bonanni et al. - Shock Parameterization for the Compressible Euler .pdf}
}

@article{borro2004,
  title = {Approximation of {{Optimal Voxel Size}} for {{Collision Detection}} in {{Maintainability Simulations}} within {{Massive Virtual Environments}}},
  author = {Borro, D. and Garc{\'i}a-Alonso, A. and Matey, L.},
  year = {2004},
  month = mar,
  journal = {Computer Graphics Forum},
  volume = {23},
  number = {1},
  pages = {13--23},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2004.00002.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2004.00002.x},
  urldate = {2024-01-09},
  abstract = {This paper describes a Collision Method for massive virtual environments composed of millions of triangles. It has been applied in the aeronautics industry for maintainability simulations using virtual aircraft engine mock-ups. The method performs well and has a good interactive frame rate even when it is used for computing force feedback with haptic devices. Space sorting problems chiefly related to voxel techniques, such as memory requirements and optimal voxel size, have been solved. We use advanced memory structures and hashing techniques. To find the optimal voxel size, several analytical solutions have been proposed and compared. These solutions are based on the performance cost function of the algorithm used. Experiments have been undertaken to verify these analytical solutions.},
  langid = {english},
  keywords = {voxel},
  file = {J:\sandboxR9\Thesis\zotero\storage\DQPZUW2W\Borro et al. - 2004 - Approximation of Optimal Voxel Size for Collision .pdf}
}

@article{brodtkorb2013,
  title = {Graphics Processing Unit ({{GPU}}) Programming Strategies and Trends in {{GPU}} Computing},
  author = {Brodtkorb, Andr{\'e} R. and Hagen, Trond R. and S{\ae}tra, Martin L.},
  year = {2013},
  month = jan,
  journal = {Journal of Parallel and Distributed Computing},
  volume = {73},
  number = {1},
  pages = {4--13},
  issn = {07437315},
  doi = {10.1016/j.jpdc.2012.04.003},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0743731512000998},
  urldate = {2024-01-11},
  abstract = {Over the last decade, there has been a growing interest in the use of graphics processing units (GPUs) for non-graphics applications. From early academic proof-of-concept papers around the year 2000, the use of GPUs has now matured to a point where there are countless industrial applications. Together with the expanding use of GPUs, we have also seen a tremendous development in the programming languages and tools, and getting started programming GPUs has never been easier. However, whilst getting started with GPU programming can be simple, being able to fully utilize GPU hardware is an art that can take months or years to master. The aim of this article is to simplify this process, by giving an overview of current GPU programming strategies, profile-driven development, and an outlook to future trends.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\EAHSBR6I\Brodtkorb et al. - 2013 - Graphics processing unit (GPU) programming strateg.pdf}
}

@article{buck2004,
  title = {Chapter 32. {{Taking}} the {{Plunge}} into {{GPU Computing}}},
  author = {Buck, Ian},
  year = {2004},
  journal = {GPU GEMS},
  url = {https://developer.nvidia.com/gpugems/gpugems2/part-iv-general-purpose-computation-gpus-primer/chapter-32-taking-plunge-gpu},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\KK75EJNY\Buck - Chapter 32. Taking the Plunge into GPU Computing.pdf}
}

@article{bui2021,
  title = {Smoothed Particle Hydrodynamics ({{SPH}}) and Its Applications in Geomechanics: {{From}} Solid Fracture to Granular Behaviour and Multiphase Flows in Porous Media},
  shorttitle = {Smoothed Particle Hydrodynamics ({{SPH}}) and Its Applications in Geomechanics},
  author = {Bui, Ha H. and Nguyen, Giang D.},
  year = {2021},
  month = oct,
  journal = {Computers and Geotechnics},
  volume = {138},
  pages = {104315},
  issn = {0266352X},
  doi = {10.1016/j.compgeo.2021.104315},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0266352X2100313X},
  urldate = {2024-02-29},
  abstract = {We present the fundamental concepts of SPH with particular emphasis on its state-of-the-art applications in geomechanics and geotechnical engineering. In the first part of the paper, we focus on establishing fundamental SPH equations and discussing how they are used to solve partial differential equations (PDEs) in geomechanics. Through this process, we expect to provide readers with a better understanding of SPH formulations to avoid misuse or misinterpretation of its capacity and limitation. Discussions on several outstanding issues and rec\- ommendations for further developments are also be presented. Of particular interest through this revisit of the key SPH concepts is a new and robust SPH approximation formulation for the Laplacian, which involves the second-order derivatives of a field quantity. This new formulation is proven to outperform existing SPH for\- mulations and achieve high accuracy. The second part of the paper focuses on demonstrating the applications of SPH in the fields of geomechanics and geotechnical engineering through various examples, ranging from the most fundamental to more complex applications involving multi-phase flows. We hope that this paper will become a useful resource to provide readers with a better understanding of SPH and its potential in solving complex problems in geomechanics and geotechnical engineering.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\56MKH6CL\Bui and Nguyen - 2021 - Smoothed particle hydrodynamics (SPH) and its appl.pdf}
}

@article{capannini,
  title = {Output {{Sensitive Collision Detection}} for {{Unisize Boxes}}},
  author = {Capannini, Gabriele and Larsson, Thomas},
  abstract = {We show how a recent collision detection method, which is based on the familiar sweep and prune concept, can gain improved performance for the special class of simulations that only involves axis-aligned bounding boxes of the same size. The proposed modifications lead to a worst-case optimal output-sensitive algorithm in 2D. Furthermore, the experimental result shows that our method gives generous speedups in practice and that dynamic scenes with one million objects can be processed at interactive rates even on a laptop.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZLYEX5LZ\Capannini and Larsson - Output Sensitive Collision Detection for Unisize B.pdf}
}

@inproceedings{capannini2016,
  title = {Efficient Collision Culling by a Succinct Bi-Dimensional Sweep and {{Prune}} Algorithm},
  booktitle = {Proceedings of the 32nd {{Spring Conference}} on {{Computer Graphics}}},
  author = {Capannini, Gabriele and Larsson, Thomas},
  year = {2016},
  month = apr,
  pages = {25--32},
  publisher = {ACM},
  address = {Slomenice Slovakia},
  doi = {10.1145/2948628.2948640},
  url = {https://dl.acm.org/doi/10.1145/2948628.2948640},
  urldate = {2024-01-27},
  abstract = {We present an improved variant of the broad phase collisiondetection algorithm called Sweep and Prune (SaP) for large datasets in three-dimensional environments. Unlike previous solutions, our algorithm performs a stepwise sweep over a primary and a secondary axis, which makes it inherently bi-dimensional. As a result, it gracefully handles even challenging high-density scenarios, and it is much less sensitive to the interval clustering problem, where the number of false positives grows superlinearly along the axes, which is a characterizing problem for traditional SaP methods that by dimensional reduction essentially are one-dimensional approaches. Furthermore, our algorithm gains additional performance by the use of a succinct data structure, which allows the objects to be represented and accessed in a cache-friendly way. Experimental results confirm that our algorithm maintains attractive query times in simulations with hundreds of thousands of bodies, even in stress-test scenarios.},
  isbn = {978-1-4503-4436-4},
  langid = {english},
  keywords = {AABB Axis Alinded Bounding Box,reviewed,SAPSweep and Prune},
  file = {J:\sandboxR9\Thesis\zotero\storage\DA9F476J\Capannini and Larsson - 2016 - Efficient collision culling by a succinct bi-dimen.pdf}
}

@article{Capannini2018,
  title = {Adaptive {{Collision Culling}} for {{Massive Simulations}} by a {{Parallel}} and {{Context-Aware Sweep}} and {{Prune Algorithm}}},
  author = {Capannini, Gabriele and Larsson, Thomas},
  year = {2018},
  month = jul,
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {24},
  number = {7},
  pages = {2064--2077},
  issn = {1077-2626, 1941-0506, 2160-9306},
  doi = {10.1109/TVCG.2017.2709313},
  url = {https://ieeexplore.ieee.org/document/7935404/},
  urldate = {2024-01-27},
  abstract = {We present an improved parallel Sweep and Prune algorithm that solves the dynamic box intersection problem in three dimensions. It scales up to very large datasets, which makes it suitable for broad phase collision detection in complex moving body simulations. Our algorithm gracefully handles high-density scenarios, including challenging clustering behavior, by using a double-axis sweeping approach and a cache-friendly succinct data structure. The algorithm is realized by three parallel stages for sorting, candidate generation, and object pairing. By the use of temporal coherence, our sorting stage runs with close to optimal load balancing. Furthermore, our approach is characterized by a work-division strategy that relies on adaptive partitioning, which leads to almost ideal scalability. In addition, for scenarios that involves intense clustering along several axes simultaneously, we propose an enhancement that increases the context-awareness of the algorithm. By exploiting information gathered along three orthogonal axes, an efficient choice of what range query to perform can be made per object during run-time. Experimental results show high performance for up to millions of objects on modern multi-core CPUs.},
  langid = {english},
  keywords = {HCDHas particle collison Detection},
  file = {J:\sandboxR9\Thesis\zotero\storage\G6SSEH35\Capannini and Larsson - 2018 - Adaptive Collision Culling for Massive Simulations.pdf}
}

@article{carnahan1969,
  title = {Equation of {{State}} for {{Nonattracting Rigid Spheres}}},
  author = {Carnahan, Norman F. and Starling, Kenneth E.},
  year = {1969},
  month = jul,
  journal = {The Journal of Chemical Physics},
  volume = {51},
  number = {2},
  pages = {635--636},
  issn = {0021-9606, 1089-7690},
  doi = {10.1063/1.1672048},
  url = {https://pubs.aip.org/jcp/article/51/2/635/456845/Equation-of-State-for-Nonattracting-Rigid-Spheres},
  urldate = {2024-01-27},
  abstract = {A new equation of state for rigid spheres has been developed from an analysis of the reduced virial series. Comparisons with existing equations show that the new formula possesses superior ability to describe rigid-sphere behavior.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\IHTIEYMJ\Carnahan and Starling - 1969 - Equation of State for Nonattracting Rigid Spheres.pdf}
}

@article{chen2018,
  title = {Parallel Multilayer Particle Collision Detection Method Based on Performance Estimation},
  author = {Chen, Shubo and He, Kejing and You, Lingcong and Lin, Funan},
  year = {2018},
  month = jun,
  journal = {Cluster Computing},
  volume = {21},
  number = {2},
  pages = {1301--1309},
  issn = {1386-7857, 1573-7543},
  doi = {10.1007/s10586-017-1141-8},
  url = {http://link.springer.com/10.1007/s10586-017-1141-8},
  urldate = {2024-01-11},
  abstract = {Particle collision detection is important for diverse simulating systems that involve spatial interactions between particles. Traditional parallelization strategy, which equally partitions the domain, can lead to skewed load distributions if the particles are not uniformly distributed. Moreover, the communication cost is relatively high when it comes to multilayer collision detection method. To solve this problem and to improve the parallel efficiency, this paper proposes an estimation-based domain decomposition method (ED-method) and an estimation-based multilayer method (EM-method) for homogeneous processors. Based on the performance estimation, the tasks are reassigned when it is necessary to balance the workload among different homogeneous processes. In the experiments, we compare these methods under different simulation conditions. Compared with the traditional method, the proposed method achieves better load balancing by taking advantage of features of the multilayer collision detection, and the results prove the excellence of the proposed method.},
  langid = {english},
  keywords = {done,EDMestimation-based domainde composition method,EMMestimation-based multilayer method,HCDHas particle collison Detection,MATRIX,REFSRefs reviewd,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\QU93H25B\Chen et al. - 2018 - Parallel multilayer particle collision detection m.pdf}
}

@article{cleary1979,
  title = {Analysis of an {{Algorithm}} for {{Finding Nearest Neighbors}} in {{Euclidean Space}}},
  author = {Cleary, John Gerald},
  year = {1979},
  month = jun,
  journal = {ACM Transactions on Mathematical Software},
  volume = {5},
  number = {2},
  pages = {183--192},
  issn = {0098-3500, 1557-7295},
  doi = {10.1145/355826.355832},
  url = {https://dl.acm.org/doi/10.1145/355826.355832},
  urldate = {2024-02-06},
  abstract = {An analysis of Elias's algorithm for finding nearest nmghbors is made in n-dimensional Euclidean space. An expressmn for the executmn time is obtained when the data points being searched are grouped by arbitrary regular partitions. A lower bound corresponding to spherical partitions as obtained where the executmn tune increases exponentmlly with increasing dimensmn. The best known approach to th{\textasciitilde}s lower bound is the cubic partmon whmh lies within 10 percent for dimensions 2 and 3 but whmh rapidly diverges for higher dimensions. The number of data points examined during a search is shown to be independent of the total number of data points.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\S8JRJ5U7\Cleary - 1979 - Analysis of an Algorithm for Finding Nearest Neigh.pdf}
}

@inproceedings{cohen1995,
  title = {I-{{COLLIDE}}: An Interactive and Exact Collision Detection System for Large-Scale Environments},
  shorttitle = {I-{{COLLIDE}}},
  booktitle = {Proceedings of the 1995 Symposium on {{Interactive 3D}} Graphics  - {{SI3D}} '95},
  author = {Cohen, Jonathan D. and Lin, Ming C. and Manocha, Dinesh and Ponamgi, Madhav},
  year = {1995},
  pages = {189-ff.},
  publisher = {ACM Press},
  address = {Monterey, California, United States},
  doi = {10.1145/199404.199437},
  url = {http://portal.acm.org/citation.cfm?doid=199404.199437},
  urldate = {2024-01-10},
  abstract = {We present an exact and interactive collision detection system, I-COLLIDE, for large-scale environments. Such environments are characterized by the number of objects undergoing rigid motion and the complexity of the models. The algorithm does not assume the objects' motions can be expressed as a closed form function of time. The collision detection system is general and can be easily interfaced with a variety of applications. The algorithm uses a two-level approach based on pruning multipleobject pairs using bounding boxes and performing exact collision detection between selected pairs of polyhedral models. We demonstrate the performance of the system in walkthrough and simulation environments consisting of a large number of moving objects. In particular, the system takes less than l/20 of a second to determine all the collisions and contacts in an environment consisting of more than a 1000 moving polytopes, each consisting of more than 50 faces on an HP-9000/750.},
  isbn = {978-0-89791-736-0},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\PND5TQHU\Cohen et al. - 1995 - I-COLLIDE an interactive and exact collision dete.pdf}
}

@incollection{collet2013,
  title = {Why {{GPGPUs}} for {{Evolutionary Computation}}?},
  booktitle = {Massively {{Parallel Evolutionary Computation}} on {{GPGPUs}}},
  author = {Collet, Pierre},
  editor = {Tsutsui, Shigeyoshi and Collet, Pierre},
  year = {2013},
  pages = {3--14},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-37959-8_1},
  url = {https://link.springer.com/10.1007/978-3-642-37959-8_1},
  urldate = {2024-01-10},
  abstract = {In 2006, for the first time since they were invented, processors stopped running faster and faster, due to heat dissipation limits. In order to provide more powerful chips, manufacturers then started developing multi-core processors, a path that had already been taken by graphics cards manufacturers earlier on. In 2012, NVIDIA came out with GK110 processors boasting 2,880 single precision cores and 960 double precision cores, for a computing power of 6 TFlops in single precision and 1.7 TFlops in double precision. Supercomputers are currently made of millions of general purpose graphics processing unit cores which poses another problem: what kind of algorithms can exploit such a massive parallelism? This chapter explains why and how artificial evolution can exploit future massively parallel exaflop machines in a very efficient way to bring solutions to generic complex inverse problems.},
  isbn = {978-3-642-37958-1 978-3-642-37959-8},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\WWES53HV\Collet - 2013 - Why GPGPUs for Evolutionary Computation.pdf}
}

@techreport{collinsGraphicsProcessingUnit2009,
  title = {Graphics {{Processing Unit}} ({{GPU}}) {{Performance}} on an {{N-Body Problem}}:},
  shorttitle = {Graphics {{Processing Unit}} ({{GPU}}) {{Performance}} on an {{N-Body Problem}}},
  author = {Collins, Pat},
  year = {2009},
  month = aug,
  address = {Fort Belvoir, VA},
  institution = {Defense Technical Information Center},
  doi = {10.21236/ADA512706},
  url = {http://www.dtic.mil/docs/citations/ADA512706},
  urldate = {2024-01-11},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\Y5NNKK5B\Collins - 2009 - Graphics Processing Unit (GPU) Performance on an N.pdf}
}

@article{coming2005,
  title = {Kinetic {{Sweep}} and {{Prune}} for {{Collision Detection}}},
  author = {Coming, Daniel S. and Staadt, Oliver G.},
  year = {2005},
  publisher = {Unpublished},
  doi = {10.13140/2.1.3152.6082},
  url = {http://rgdoi.net/10.13140/2.1.3152.6082},
  urldate = {2024-01-27},
  abstract = {We propose an acceleration scheme for real-time many-body dynamic collision detection. We kinetize the sweep and prune method for many-body collision pruning, extending its application to dynamic collision detection via kinetic data structures. In doing so, we modify the method from sample-rate driven to event-driven, with no more events than the original method processed, also removing the per-frame overhead, allowing our method to scale well in terms of frame-rates. Unlike many schemes for many-body collision pruning, ours performs well in both sparse and dense environments, with few or many collisions.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\DT7SGLPU\Coming and Staadt - 2005 - Kinetic Sweep and Prune for Collision Detection.pdf}
}

@misc{coumans2015,
  title = {Bullet 2.83 {{Physics SDK Manual}}},
  author = {Coumans, Erwin},
  year = {2015},
  publisher = {Coumans},
  url = {https://github.com/bulletphysics/bullet3},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\97F7DW9J\Coumans - Bullet 2.83 Physics SDK Manual.pdf}
}

@article{cover1967,
  title = {Nearest Neighbor Pattern Classification},
  author = {Cover, T. and Hart, P.},
  year = {1967},
  month = jan,
  journal = {IEEE Transactions on Information Theory},
  volume = {13},
  number = {1},
  pages = {21--27},
  issn = {0018-9448, 1557-9654},
  doi = {10.1109/TIT.1967.1053964},
  url = {http://ieeexplore.ieee.org/document/1053964/},
  urldate = {2024-01-27},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\Z84DUYPR\Cover and Hart - 1967 - Nearest neighbor pattern classification.pdf}
}

@article{crespo2011,
  title = {Smoothed Particle Hydrodynamics on {{GPU}} Computing},
  author = {Crespo, A J C and Dominguez, J M and {Valdez-Balderas}, D and Rogers, B D and {Gomez-Gesteira}, M},
  year = {2011},
  journal = {II International Conference on Particle-based Methods},
  url = {https://upcommons.upc.edu/bitstream/handle/2117/189899/Particles_2011-86_Smoothed%20particle%20hydrodynamics.pdf},
  abstract = {Smoothed Particle Hydrodynamics (SPH) is a powerful technique used to simulate complex free-surface flows. However one of the main drawbacks of this method is the expensive computational runtime and the large number of particles needed when 3D simulations are performed. High Performance Computing (HPC) therefore becomes essential to accelerate these codes and perform simulations. In this study, parallelization using Graphics Processing Units (GPU) is applied to the SPHysics code (www.sphysics.org) dedicated to free-surface flows with SPH. Simulations involving several million particles on a single GPU exhibit speedups of up to two orders of magnitude over the same calculations using CPU codes, while parallelization using MPI for multi-GPU leads to further acceleration. This cheap technology allows studying real-life engineering problems at reasonable computational runtimes.},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\QD98QPAB\Crespo et al. - SMOOTHED PARTICLE HYDRODYNAMICS ON GPU COMPUTING.pdf}
}

@article{cundall1979,
  title = {A Discrete Numerical Model for Granular Assemblies},
  author = {Cundall, P. A. and Strack, O. D. L.},
  year = {1979},
  month = mar,
  journal = {G{\'e}otechnique},
  volume = {29},
  number = {1},
  pages = {47--65},
  issn = {0016-8505, 1751-7656},
  doi = {10.1680/geot.1979.29.1.47},
  url = {https://www.icevirtuallibrary.com/doi/10.1680/geot.1979.29.1.47},
  urldate = {2024-01-27},
  abstract = {The distinct element method is a numerical model capable of describing the mechanical behaviour of assemblies of discs and spheres. The method is based on the use of an explicit numerical scheme in which the interaction of the particles is monitored contact by contact and the motion of the particles modelled particle by particle. The main features of the distinct element method are described. The method is validated by comparing force vector plots obtained from the computer program BALL with the corresponding plots obtained from a photoelastic analysis. The photoelastic analysis used for the comparison is the one applied to an assembly of discs by De Josselin de Jong and Verruijt (1969). The force vector diagrams obtained numerically closely resemble those obtained photoelastically. It is concluded from this comparison that the distinct element method and the program BALL are valid tools for research into the behaviour of granular assemblies.             La m{\'e}thode des {\'e}l{\'e}ments distincts est un mod{\`e}le num{\'e}rique capable de d{\'e}crire le comportement m{\'e}canique de l'assemblage de disques et de sph{\`e}res. La m{\'e}thode est bas{\'e}e sur l'utilisation d'un syst{\`e}me num{\'e}rique explicite dans lequel l'interaction des particules est contr{\^o}l{\'e}e contact par contact et le mouvement des particules simul{\'e} particule par particule. Les caracteristiques principales de la m{\'e}thode des el{\'e}ments distints sont d{\'e}crites. La m{\'e}thode est valid{\'e}e en comparant les trac{\'e}s de vecteur de force obtenus par le programme sur ordicateur BALL avec les trac{\'e}s correspondants obtanus a l'aide d'une analyse photo-{\'e}lastique. L'analyse photo-{\'e}lastique utilis{\'e}e pour la comparaison est celle appliqu{\'e}e sur un assemblage de disques par De Josselin de Jong et Verruijt (1969). Les diagrammes de vecteur de force obtenus num{\'e}riquement sont tr{\`e}s voisins de ceux obtenus photo-{\'e}lastiquement. Cette comparaison permet de conclure que la methode des {\'e}l{\'e}ments distincts et le programme BALL sont des instruments valables pour la recherche du comportement des assemblages granulaires.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\AILS2N33\Cundall and Strack - 1979 - A discrete numerical model for granular assemblies.pdf}
}

@inproceedings{curtis2008,
  title = {Fast Collision Detection for Deformable Models Using Representative-Triangles},
  booktitle = {Proceedings of the 2008 Symposium on {{Interactive 3D}} Graphics and Games},
  author = {Curtis, Sean and Tamstorf, Rasmus and Manocha, Dinesh},
  year = {2008},
  month = feb,
  pages = {61--69},
  publisher = {ACM},
  address = {Redwood City California},
  doi = {10.1145/1342250.1342260},
  url = {https://dl.acm.org/doi/10.1145/1342250.1342260},
  urldate = {2024-01-09},
  abstract = {We present a new approach to accelerate collision detection for deformable models. Our formulation applies to all triangulated models and significantly reduces the number of elementary tests between features of the mesh, i.e., vertices, edges and faces. We introduce the notion of Representative-Triangles, standard geometric triangles augmented with mesh feature information and use this representation to achieve better collision query performance. The resulting approach can be combined with bounding volume hierarchies and works well for both inter-object and self-collision detection. We demonstrate the benefit of Representative-Triangles on continuous collision detection for cloth simulation and N-body collision scenarios. We observe up to a one-order of magnitude reduction in feature-pair tests and up to a 5X improvement in query time.},
  isbn = {978-1-59593-983-8},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\HCCNFARB\Curtis et al. - 2008 - Fast collision detection for deformable models usi.pdf}
}

@article{dalton2015,
  title = {Optimizing {{Sparse Matrix}}---{{Matrix Multiplication}} for the {{GPU}}},
  author = {Dalton, Steven and Olson, Luke and Bell, Nathan},
  year = {2015},
  month = oct,
  journal = {ACM Transactions on Mathematical Software},
  volume = {41},
  number = {4},
  pages = {1--20},
  issn = {0098-3500, 1557-7295},
  doi = {10.1145/2699470},
  url = {https://dl.acm.org/doi/10.1145/2699470},
  urldate = {2024-01-11},
  abstract = {Sparse matrix--matrix multiplication (SpGEMM) is a key operation in numerous areas from information to the physical sciences. Implementing SpGEMM efficiently on throughput-oriented processors, such as the graphics processing unit (GPU), requires the programmer to expose substantial fine-grained parallelism while conserving the limited off-chip memory bandwidth. Balancing these concerns, we decompose the SpGEMM operation into three highly parallel phases: expansion, sorting, and contraction, and introduce a set of complementary bandwidth-saving performance optimizations. Our implementation is fully general and our optimization strategy adaptively processes the SpGEMM workload row-wise to substantially improve performance by decreasing the work complexity and utilizing the memory hierarchy more effectively.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\9U5VXGEA\Dalton et al. - 2015 - Optimizing Sparse Matrix—Matrix Multiplication for.pdf}
}

@article{danliden,
  title = {Multi {{Sub-Pass}} \& {{Multi Render-Target Shading In Vulkan}}},
  author = {Danliden, Alexander and Cederrand, Steven},
  abstract = {Background. Games today are becoming more complex in computational and graphical areas. Companies today want to develop games with state of the art graphics while also having complicated and complex game logic. The vast majority of users rarely meet the computer requirements. This creates an issue which limits the target demographic that a company wants to meet. This thesis will focus on two different methods that achieves deferred shading in Vulkan and how the environment is affecting both methods as-well as the number of lights and attachments. Objectives. In Vulkan there are two ways of implementing deferred shading, one is the traditional way of doing it which is by conducting multiple render-targets. The second way is by utilizing a feature unique to Vulkan known as sub-passes. Our aim is to conduct experiments with these two ways of implementing deferred shading to determine which one is the most optimal for a given situation. These situations will vary depending on the number of visible objects and number of lights in the scene. Methods. The experiments are conducted by a rendering system that have been implemented by us. By implementing both suggested deviations of the rendering technique 'deferred shading' the data collected will suffer less from unexpected and unknown variables than it would if the implementations were taken from a separate source. The experiments that will be conducted intend to measure performance metrics in the form of average frames per second as well as average render frame time(in seconds). To measure the time performance metric, the system shall utilize Vulkan's support for gpu-timestamping[7]. To provide reliable measurements without any unwarranted errors each rendering deviation will utilize pre-recorded command buffers. Conclusions. This thesis has shown that using multiple sub-passes within a single render-target performs faster write operations to the attached render attachments. This result in less memory bandwidth which leads to a faster geometry pass. The performance gain from a faster geometry pass can be used somewhere else to enhance different aspects of the game or graphical application. Having less memory bandwidth would result in a longer battery life on mobile phones and laptops.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\LGSK9TQS\Danliden and Cederrand - Multi Sub-Pass & Multi Render-Target Shading In Vu.pdf}
}

@article{dehnen2011,
  title = {N-Body Simulations of Gravitational Dynamics},
  author = {Dehnen, W. and Read, J. I.},
  year = {2011},
  month = may,
  journal = {The European Physical Journal Plus},
  volume = {126},
  number = {5},
  pages = {55},
  issn = {2190-5444},
  doi = {10.1140/epjp/i2011-11055-3},
  url = {http://link.springer.com/10.1140/epjp/i2011-11055-3},
  urldate = {2024-02-01},
  abstract = {We describe the astrophysical and numerical basis of N -body simulations, both of collisional stellar systems (dense star clusters and galactic centres) and collisionless stellar dynamics (galaxies and large-scale structure). We explain and discuss the state-of-the-art algorithms used for these quite different regimes, attempt to give a fair critique, and point out possible directions of future improvement and development. We briefly touch upon the history of N -body simulations and their most important results.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\E4ML4P7H\Dehnen and Read - 2011 - N-body simulations of gravitational dynamics.pdf}
}

@article{dehnen2012,
  title = {Improving Convergence in Smoothed Particle Hydrodynamics Simulations without Pairing Instability: {{SPH}} without Pairing Instability},
  shorttitle = {Improving Convergence in Smoothed Particle Hydrodynamics Simulations without Pairing Instability},
  author = {Dehnen, Walter and Aly, Hossam},
  year = {2012},
  month = sep,
  journal = {Monthly Notices of the Royal Astronomical Society},
  volume = {425},
  number = {2},
  pages = {1068--1082},
  issn = {00358711},
  doi = {10.1111/j.1365-2966.2012.21439.x},
  url = {https://academic.oup.com/mnras/article-lookup/doi/10.1111/j.1365-2966.2012.21439.x},
  urldate = {2024-01-16},
  abstract = {The numerical convergence of smoothed particle hydrodynamics (SPH) can be severely restricted by random force errors induced by particle disorder, especially in shear flows, which are ubiquitous in astrophysics. The increase in the number NH of neighbours when switching to more extended smoothing kernels at fixed resolution (using an appropriate definition for the SPH resolution scale) is insufficient to combat these errors. Consequently, trading resolution for better convergence is necessary, but for traditional smoothing kernels this option is limited by the pairing (or clumping) instability. Therefore, we investigate the suitability of the Wendland functions as smoothing kernels and compare them with the traditional B-splines. Linear stability analysis in three dimensions and test simulations demonstrate that the Wendland kernels avoid the pairing instability for all NH, despite having vanishing derivative at the origin (disproving traditional ideas about the origin of this instability; instead, we uncover a relation with the kernel Fourier transform and give an explanation in terms of the SPH density estimator). The Wendland kernels are computationally more convenient than the higher order B-splines, allowing large NH and hence better numerical convergence (note that computational costs rise sublinear with NH). Our analysis also shows that at low NH the quartic spline kernel with NH {$\approx$} 60 obtains much better convergence than the standard cubic spline.},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\N2A8L7AM\Dehnen and Aly - 2012 - Improving convergence in smoothed particle hydrody.pdf}
}

@article{dominguez2011,
  title = {Neighbour Lists in Smoothed Particle Hydrodynamics},
  author = {Dom{\'i}nguez, J. M. and Crespo, A. J. C. and G{\'o}mez-Gesteira, M. and Marongiu, J. C.},
  year = {2011},
  month = dec,
  journal = {International Journal for Numerical Methods in Fluids},
  volume = {67},
  number = {12},
  pages = {2026--2042},
  issn = {0271-2091, 1097-0363},
  doi = {10.1002/fld.2481},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/fld.2481},
  urldate = {2024-02-16},
  abstract = {Since smoothed particle hydrodynamics (SPH) is based on interactions with the closer neighbouring particles, implementing the neighbour list is a key point in terms of the high performance of the code. The efficiency of the method depends directly on how to build and use the neighbour list. In the present work, the available searching algorithms for SPH codes are analyzed. Different gridding algorithms are evaluated, the gains in efficiency obtained from reordering of particles is investigated and the cell-linked list and Verlet list methods are studied to create the neighbour list. Furthermore, an innovative searching procedure based on a dynamic updating of the Verlet list is proposed. The efficiency of the algorithms is analyzed in terms of computational time and memory requirements. Copyright ᭧ 2010 John Wiley \& Sons, Ltd.},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\V388AMJH\Domínguez et al. - 2011 - Neighbour lists in smoothed particle hydrodynamics.pdf}
}

@article{dominguez2013,
  title = {New Multi-{{GPU}} Implementation for Smoothed Particle Hydrodynamics on Heterogeneous Clusters},
  author = {Dom{\'i}nguez, J.M. and Crespo, A.J.C. and {Valdez-Balderas}, D. and Rogers, B.D. and {G{\'o}mez-Gesteira}, M.},
  year = {2013},
  month = aug,
  journal = {Computer Physics Communications},
  volume = {184},
  number = {8},
  pages = {1848--1860},
  issn = {00104655},
  doi = {10.1016/j.cpc.2013.03.008},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465513001057},
  urldate = {2024-01-16},
  abstract = {A massively parallel SPH scheme using heterogeneous clusters of Central Processing Units (CPUs) and Graphics Processing Units (GPUs) has been developed. The new implementation originates from the single-GPU DualSPHysics code previously demonstrated to be powerful, stable and accurate. A combination of different parallel programming languages is combined to exploit not only one device (CPU or GPU) but also the combination of different machines. Communication among devices uses an improved Message Passing Interface (MPI) implementation which addresses some of the well-known drawbacks of MPI such as including a dynamic load balancing and overlapping data communications and computation tasks. The efficiency and scalability (strong and weak scaling) obtained with the new DualSPHysics code are analysed for different numbers of particles and different number of GPUs. Last, an application with more than 109 particles is presented to show the capability of the code to handle simulations that otherwise require large CPU clusters or supercomputers.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\6B2YA6JU\Domínguez et al. - 2013 - New multi-GPU implementation for smoothed particle.pdf}
}

@inproceedings{drone2007,
  title = {Real-Time Particle Systems on the {{GPU}} in Dynamic Environments},
  booktitle = {{{ACM SIGGRAPH}} 2007 Courses},
  author = {Drone, Shannon},
  year = {2007},
  month = aug,
  pages = {80--96},
  publisher = {ACM},
  address = {San Diego California},
  doi = {10.1145/1281500.1281670},
  url = {https://dl.acm.org/doi/10.1145/1281500.1281670},
  urldate = {2024-01-16},
  isbn = {978-1-4503-1823-5},
  langid = {english},
  keywords = {done,FRSForce Splatting for N2 Particle Interactions,HCDHas particle collison Detection,MATRIX,NPPSnon-parametric particle systems,PTB Particle to boundary,PTPIparticle-to-particle interactions,PTVCparticle versus scene,REFSRefs reviewd,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\N38PHLWX\Drone - 2007 - Real-time particle systems on the GPU in dynamic e.pdf}
}

@article{edelsbrunner2012,
  title = {Fast Software for Box Intersections},
  author = {Edelsbrunner, Herbert},
  year = {2012},
  month = jun,
  journal = {Wiadomo{\'s}ci Matematyczne},
  volume = {48},
  number = {2},
  pages = {47},
  issn = {2543-991X, 2080-5519},
  doi = {10.14708/wm.v48i2.316},
  url = {http://wydawnictwa.ptm.org.pl/index.php/wiadomosci-matematyczne/article/view/316},
  urldate = {2024-01-27},
  abstract = {We present fast implementations of a hybrid algorithm for reporting box and cube intersections. Our algorithm initially takes a divide-and-conquer approach and switches to simpler algorithms for low numbers of boxes. We use our implementations as engines to solve problems about geometric primitives. We look at two such problems in the category of quality analysis of surface triangulations.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\JDBICY3D\Edelsbrunner - 2012 - Herbert Edelsbrunner.pdf}
}

@inproceedings{ehmann2000,
  title = {Accelerated Proximity Queries between Convex Polyhedra by Multi-Level {{Voronoi}} Marching},
  booktitle = {Proceedings. 2000 {{IEEE}}/{{RSJ International Conference}} on {{Intelligent Robots}} and {{Systems}} ({{IROS}} 2000) ({{Cat}}. {{No}}.{{00CH37113}})},
  author = {Ehmann, S.A. and Lin, M.C.},
  year = {2000},
  volume = {3},
  pages = {2101--2106},
  publisher = {IEEE},
  address = {Takamatsu, Japan},
  doi = {10.1109/IROS.2000.895281},
  url = {http://ieeexplore.ieee.org/document/895281/},
  urldate = {2024-01-10},
  abstract = {We present an accelerated proximity query algorithm between moving convex polyhedra. The algorithm combines Voronoi-basedfeature tracking with a multi-levelofdetail representation, in order to adapt to the variation in levels of coherence and speed up the computation. It provides a progressive rejinement framework for collision detection and distance queries. We have implemented our algorithm and have observed signifcant performunce improvements in our experiments, especially on scenarios where the coherence is low.},
  isbn = {978-0-7803-6348-9},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\D5VGXQ65\Ehmann and Lin - 2000 - Accelerated proximity queries between convex polyh.pdf}
}

@article{ehmann2001,
  title = {Accurate and {{Fast Proximity Queries Between Polyhedra Using Convex Surface Decomposition}}},
  author = {Ehmann, Stephen A. and Lin, Ming C.},
  year = {2001},
  month = sep,
  journal = {Computer Graphics Forum},
  volume = {20},
  number = {3},
  pages = {500--511},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/1467-8659.00543},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/1467-8659.00543},
  urldate = {2024-01-10},
  abstract = {The need to perform fast and accurate proximity queries arises frequently in physically-based modeling, simulation, animation, real-time interaction within a virtual environment, and game dynamics. The set of proximity queries include intersection detection, tolerance verification, exact and approximate minimum distance computation, and (disjoint) contact determination. Specialized data structures and algorithms have often been designed to perform each type of query separately. We present a unified approach to perform any of these queries seamlessly for general, rigid polyhedral objects with boundary representations which are orientable 2-manifolds. The proposed method involves a hierarchical data structure built upon a surface decomposition of the models. Furthermore, the incremental query algorithm takes advantage of coherence between successive frames. It has been applied to complex benchmarks and compares very favorably with earlier algorithms and systems.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\AB7SID7S\Ehmann and Lin - 2001 - Accurate and Fast Proximity Queries Between Polyhe.pdf}
}

@article{engelke2019,
  title = {Autonomous {{Particles}} for {{Interactive Flow Visualization}}},
  author = {Engelke, Wito and Lawonn, Kai and Preim, Bernhard and Hotz, Ingrid},
  year = {2019},
  month = feb,
  journal = {Computer Graphics Forum},
  volume = {38},
  number = {1},
  pages = {248--259},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/cgf.13528},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/cgf.13528},
  urldate = {2024-01-10},
  abstract = {We present an interactive approach to analyse flow fields using a new type of particle system, which is composed of autonomous particles exploring the flow. While particles provide a very intuitive way to visualize flows, it is a challenge to capture the important features with such systems. Particles tend to cluster in regions of low velocity and regions of interest are often sparsely populated. To overcome these disadvantages, we propose an automatic adaption of the particle density with respect to local importance measures. These measures are user defined and the systems sensitivity to them can be adjusted interactively. Together with the particle history, these measures define a probability for particles to multiply or die, respectively. There is no communication between the particles and no neighbourhood information has to be maintained. Thus, the particles can be handled in parallel and support a real-time investigation of flow fields. To enhance the visualization, the particles' properties and selected field measures are also used to specify the systems rendering parameters, such as colour and size. We demonstrate the effectiveness of our approach on different simulated vector fields from technical and medical applications.},
  langid = {english},
  keywords = {APAutonomous Particle Definiton,done,GLYPGlyph,reviewed},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\UHEVCDT6\Engelke et al. - 2019 - Autonomous Particles for Interactive Flow Visualiz.pdf}
}

@incollection{erbes2013,
  title = {Parallel {{Collision Queries}} on the {{GPU}}},
  booktitle = {Facing the {{Multicore-Challenge III}}},
  author = {Erbes, Rainer and Mantel, Anja and Sch{\"o}mer, Elmar and Wolpert, Nicola},
  editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard and Keller, Rainer and Kramer, David and Weiss, Jan-Philipp},
  year = {2013},
  volume = {7686},
  pages = {84--95},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-35893-7_8},
  url = {http://link.springer.com/10.1007/978-3-642-35893-7_8},
  urldate = {2024-01-10},
  abstract = {We present parallel algorithms to accelerate collision tests of rigid body objects for a high number of independent transformations as they occur in sampling-based motion planning and path validation problems. We compare various GPU approaches with a different level of parallelism against each other and against a parallel CPU implementation. Our algorithms require no sophisticated load balancing schemes. They make no assumption on the distribution of the input transformations and require no pre-processing. Yet, we can perform up to 1 million collision tests per second with our best GPU implementation in our benchmarks. This is about 2.5X faster than our reference multi-core CPU implementation and more than 18X faster than current single-core implementations.},
  isbn = {978-3-642-35892-0 978-3-642-35893-7},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\LBF6RQ2C\Erbes et al. - 2013 - Parallel Collision Queries on the GPU.pdf}
}

@book{ericson2004,
  title = {Real-{{Time Collision Detection}}},
  author = {Ericson, Christer},
  year = {2004},
  month = dec,
  edition = {1},
  publisher = {CRC Press},
  doi = {10.1201/b14581},
  url = {https://www.taylorfrancis.com/books/9780080474144},
  urldate = {2024-01-09},
  isbn = {978-0-08-047414-4},
  langid = {english},
  keywords = {done,HCDHas particle collison Detection,reviewed,SURVSurvey},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\KE4HVE96\Ericson - 2004 - Real-Time Collision Detection.pdf}
}

@article{fan2012,
  title = {An Octree-Based Proxy for Collision Detection in Large-Scale Particle Systems},
  author = {Fan, WenShan and Wang, Bin and Paul, Jean-Claude and Sun, JiaGuang},
  year = {2012},
  journal = {Science China Information Sciences},
  volume = {56},
  number = {1},
  pages = {1--10},
  issn = {1674-733X, 1869-1919},
  doi = {10.1007/s11432-012-4616-5},
  url = {http://link.springer.com/10.1007/s11432-012-4616-5},
  urldate = {2024-01-11},
  abstract = {Particle systems are important building block for simulating vivid and detail-rich effects in virtual world. One of the most difficult aspects of particle systems has been detecting collisions between particles and mesh surface. Due to the huge computation, a variety of proxy-based approaches have been proposed recently to perform visually correct simulation. However, all either limit the complexity of the scene, fail to guarantee non-penetration, or are too slow for real-time use with many particles. In this paper, we propose a new octree-based proxy for colliding particles with meshes on the GPU. Our approach works by subdividing the scene mesh with an octree in which each leaf node associates with a representative normal corresponding to the normals of the triangles that intersect the node. We present a view-visible method, which is suitable for both closed and non-closed models, to label the empty leaf nodes adjacent to nonempty ones with appropriate back/front property, allowing particles to collide with both sides of the scene mesh. We show how collisions can be performed robustly on this proxy structure in place of the original mesh, and describe an extension that allows for fast traversal of the octree structure on the GPU. The experiments show that the proposed method is fast enough for real-time performance with millions of particles interacting with complex scenes.},
  langid = {english},
  keywords = {done,HCDHas particle collison Detection,MATRIX,OCT Oct Tree,REFSRefs reviewd,reviewed},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\JWCYHAJE\\An octree-based proxy for collision detection in.txt;J\:\\sandboxR9\\Thesis\\zotero\\storage\\VN9F59TU\\Fan et al. - 2013 - An octree-based proxy for collision detection in l.pdf}
}

@inproceedings{fatahalian2008,
  title = {{{GPUs}} a Closer Look},
  booktitle = {{{ACM SIGGRAPH}} 2008 Classes},
  author = {Fatahalian, Kayvon and Houston, Mike},
  year = {2008},
  month = aug,
  pages = {1--11},
  publisher = {ACM},
  address = {Los Angeles California},
  doi = {10.1145/1401132.1401147},
  url = {https://dl.acm.org/doi/10.1145/1401132.1401147},
  urldate = {2024-01-11},
  isbn = {978-1-4503-7845-1},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZAPUBN92\Fatahalian and Houston - 2008 - GPUs a closer look.pdf}
}

@article{Faure2008,
  title = {Image-Based Collision Detection and Response between Arbitrary Volume Objects},
  author = {Faure, Fran{\c c}ois and Barbier, S{\'e}bastien and Allard, J{\'e}r{\'e}mie and Falipou, Florent},
  abstract = {We present a new image-based method to process contacts between objects bounded by triangular surfaces. Unlike previous methods, it relies on image-based volume minimization, which eliminates complex geometrical computations and robustly handles deep intersections.},
  langid = {english},
  keywords = {reviewed,VMVolume Minimization},
  file = {J:\sandboxR9\Thesis\zotero\storage\V6L727QX\Faure et al. - Image-based collision detection and response betwe.pdf}
}

@article{figueiredo,
  title = {A {{Survey}} on {{Collision Detection Techniques}} for {{Virtual Environments}}},
  author = {Figueiredo, Mauro and Marcelino, Luis and Fernando, Terrence},
  abstract = {Collision detection is an important component of many applications in computer graphics applications. In particular, it is a critical question for virtual environments applications, where real time performance is required to provide the feeling of being immerse in a environment that looks and is interactive like a real one. In this paper, we look into current approaches for collision detection that can be used for real time interactive virtual environments where the trajectories of moving objects are not predefined. We also present a taxonomy for classifying different collision detection algorithms. In the end, using collision detection toolkits publicly available, we have performed a set of experiments in order to compare the performance between collision detection algorithms based on axis-aligned, discrete orientation polytopes and oriented bounding boxes.},
  langid = {english},
  keywords = {SURVSurvey,taxonomy},
  file = {J:\sandboxR9\Thesis\zotero\storage\IVKVAN6G\Figueiredo et al. - A Survey on Collision Detection Techniques for Vir.pdf}
}

@article{flandoli2019,
  title = {A Particle System Approach to Aggregation Phenomena},
  author = {Flandoli, Franco and Leocata, Marta},
  year = {2019},
  month = mar,
  journal = {Journal of Applied Probability},
  volume = {56},
  number = {01},
  eprint = {1901.11318},
  primaryclass = {math},
  pages = {282--306},
  issn = {0021-9002, 1475-6072},
  doi = {10.1017/jpr.2019.18},
  url = {http://arxiv.org/abs/1901.11318},
  urldate = {2024-01-27},
  abstract = {Inspired by a PDE-ODE system of aggregation developed in the biomathematical literature, an interacting particle system representing aggregation at the level of individuals is investigated. It is proved that the empirical density of the individual converges to solution of the PDE-ODE system.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Mathematics - Analysis of PDEs,Mathematics - Probability},
  file = {J:\sandboxR9\Thesis\zotero\storage\BYSQGB9P\Flandoli and Leocata - 2019 - A particle system approach to aggregation phenomen.pdf}
}

@misc{FlocksHerdsSchools,
  title = {Flocks, Herds and Schools: {{A}} Distributed Behavioral Model {\textbar} {{ACM SIGGRAPH Computer Graphics}}},
  url = {https://dl.acm.org/doi/10.1145/37402.37406},
  urldate = {2024-02-15}
}

@book{foster2020,
  title = {Parallel {{Computing}}: {{Technology Trends}}},
  shorttitle = {Parallel {{Computing}}},
  author = {Foster, I. and Joubert, G. R. and Ku{\v c}era, L.},
  year = {2020},
  publisher = {IOS Press, Incorporated},
  address = {Amsterdam, NETHERLANDS, THE},
  url = {http://ebookcentral.proquest.com/lib/ufl/detail.action?docID=6240692},
  urldate = {2024-01-11},
  isbn = {978-1-64368-071-2},
  keywords = {Parallel processing (Electronic computers)},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\6GL4RX83\\Parallel_Computing_Technology_Trends.pdf;J\:\\sandboxR9\\Thesis\\zotero\\storage\\FGNA8B6I\\reader.html}
}

@article{fraga2017,
  title = {An Algorithmic Implementation of Physical Reflective Boundary Conditions in Particle Methods: {{Collision}} Detection and Response},
  shorttitle = {An Algorithmic Implementation of Physical Reflective Boundary Conditions in Particle Methods},
  author = {Fraga Filho, Carlos Alberto Dutra},
  year = {2017},
  month = nov,
  journal = {Physics of Fluids},
  volume = {29},
  number = {11},
  pages = {113602},
  issn = {1070-6631, 1089-7666},
  doi = {10.1063/1.4997054},
  url = {https://pubs.aip.org/pof/article/29/11/113602/105579/An-algorithmic-implementation-of-physical},
  urldate = {2024-01-11},
  abstract = {The aim of this paper is to present a computational algorithmic implementation of physical reflective boundary conditions and applications, for use in particle methods. It is motivated by the lack of a straightforward study in the literature dedicated to the presentation of this reflective boundary condition, based on Newton's restitution law and the foundations of analytic geometry. Particular attention is given here to the procedures of collision detection and response. The importance of the consistency of input data and an appropriate temporal integration technique for use in the particle method is also discussed. Validation tests are performed, with the results of the algorithm verified using analytical results. Numerical simulations of static and dynamic problems are carried out. The analysis of the numerical results shows that the physical reflective boundary conditions are consistent and that the algorithm has been properly implemented.},
  langid = {english},
  keywords = {HCDHas particle collison Detection,MLS Meshless particle,reviewed},
  file = {J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\2A6MZXIY\\An algorithmic implementation of physical reflective boundary conditions in particle methodsCollision detection and response.txt;J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\2Q9FKNHR\\Fraga Filho - 2017 - An algorithmic implementation of physical reflecti.pdf}
}

@inproceedings{franklin2017,
  title = {Parallel Intersection Detection in Massive Sets of Cubes},
  booktitle = {Proceedings of the 6th {{ACM SIGSPATIAL Workshop}} on {{Analytics}} for {{Big Geospatial Data}}},
  author = {Franklin, W. Randolph and Magalh{\~a}es, Salles V. G.},
  year = {2017},
  month = nov,
  pages = {20--26},
  publisher = {ACM},
  address = {Redondo Beach CA USA},
  doi = {10.1145/3150919.3150921},
  url = {https://dl.acm.org/doi/10.1145/3150919.3150921},
  urldate = {2024-01-27},
  abstract = {We present P C , which nds the pairwise intersections in a set of millions of congruent cubes. This operation is required when computing boolean combinations of meshes or polyhedra in CAD/CAM and additive manufacturing, and in determining close points in a 3D set. P C is very compact because it is uses a uniform grid with a functional programming API. P C is very fast; even single threaded it usually beats CGAL's elapsed time, sometimes by a factor of 3. Also because it is FP, P C parallelizes very well. On an Nvidia GPU, processing 10M cubes to nd 6M intersections, it took 0.33 elapsed seconds, beating CGAL by a factor of 131. P C is independent of the speci c parallel architecture, whether shared memory multicore Intel Xeon using either OpenMP or TBB, or Nvidia GPUs with thousands of cores. We expect the principles used in P C to apply to other computational geometry problems. E ciently nding all bipartite intersections would be an easy extension.},
  isbn = {978-1-4503-5494-3},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd},
  file = {J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\5LFM6PFU\\FranklinPart2.pdf;J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\T7543PK3\\Franklin and Magalhães - 2017 - Parallel intersection detection in massive sets of.pdf;J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\Y8RCXHR8\\Geometric computing and uniformgrid technique.pdf}
}

@inproceedings{fujii2013,
  title = {Data {{Transfer Matters}} for {{GPU Computing}}},
  booktitle = {2013 {{International Conference}} on {{Parallel}} and {{Distributed Systems}}},
  author = {Fujii, Yusuke and Azumi, Takuya and Nishio, Nobuhiko and Kato, Shinpei and Edahiro, Masato},
  year = {2013},
  month = dec,
  pages = {275--282},
  publisher = {IEEE},
  address = {Seoul, Korea (South)},
  doi = {10.1109/ICPADS.2013.47},
  url = {http://ieeexplore.ieee.org/document/6808184/},
  urldate = {2024-01-10},
  abstract = {Graphics processing units (GPUs) embrace manycore compute devices where massively parallel compute threads are offloaded from CPUs. This heterogeneous nature of GPU computing raises non-trivial data transfer problems especially against latency-critical real-time systems. However even the basic characteristics of data transfers associated with GPU computing are not well studied in the literature. In this paper, we investigate and characterize currently-achievable data transfer methods of cutting-edge GPU technology. We implement these methods using open-source software to compare their performance and latency for real-world systems. Our experimental results show that the hardware-assisted direct memory access (DMA) and the I/O readand-write access methods are usually the most effective, while on-chip microcontrollers inside the GPU are useful in terms of reducing the data transfer latency for concurrent multiple data streams. We also disclose that CPU priorities can protect the performance of GPU data transfers.},
  isbn = {978-1-4799-2081-5},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\UGFDWDKW\Fujii et al. - 2013 - Data Transfer Matters for GPU Computing.pdf}
}

@article{gan2016,
  title = {A {{GPU-based DEM}} Approach for Modelling of Particulate Systems},
  author = {Gan, J.Q. and Zhou, Z.Y. and Yu, A.B.},
  year = {2016},
  month = nov,
  journal = {Powder Technology},
  volume = {301},
  pages = {1172--1182},
  issn = {00325910},
  doi = {10.1016/j.powtec.2016.07.072},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0032591016304648},
  urldate = {2024-01-16},
  abstract = {DEM has been well established as a powerful numerical technique to study the fundamentals of granular materials. It has limited application in dealing with practical particulate systems which often involve billions of particles. Graphical Processing Units (GPU) offers a solution to this problem. This paper explores GPU-based DEM development, and its performance is assessed under various conditions. For a packing case using 300,000 spheres, it is demonstrated that the speed up ratio (single GPU to single CPU) varies from 40 to 75, depending on the parallel algorithms used. The GPU-based DEM is then developed for other systems involving arbitrary wall geometries, moving wall boundaries, and non-spherical particles. Particle flow patterns in the top charging system of blast furnace, screw conveyor and rotating drums are studied. For ellipsoids in the rotating drums, when aspect ratio increases or decreases from 1.0, the dynamic angle of repose increases. Multiple GPUs with message passing interface (MPI) are also used. It is demonstrated that the speed using 32 GPUs can be 18 times faster than a single GPU. It can handle large granular systems with more than 10 million particles. Thus, the GPU-based DEM developed in this work makes the simulation of real industrial processes possible.},
  langid = {english},
  keywords = {CMCorrespondence map (CM) from a particle to cell,CUDA CUDA,DEM Discrete Element method,FRSA,GPUGPU Based,HCDHas particle collison Detection,HGRDHierarchical grids (HGrid),MATRIX,MPIMessage Passing Interface,NVIDPSNViDUA CUDE particle system,PCCPparallelizing for each contact candidate pair,PLYpolydisperse,PPparallelized by particles,REFSRefs reviewd,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\XXULQG9I\Gan et al. - 2016 - A GPU-based DEM approach for modelling of particul.pdf}
}

@inproceedings{gao2008,
  title = {Parallel Integration of Planetary Systems on {{GPUs}}},
  booktitle = {Proceedings of the 46th {{Annual Southeast Regional Conference}} on {{XX}}},
  author = {Gao, Jianwei and Ford, Eric and Peters, J{\"o}rg},
  year = {2008},
  month = mar,
  pages = {69--73},
  publisher = {ACM},
  address = {Auburn Alabama},
  doi = {10.1145/1593105.1593123},
  url = {https://dl.acm.org/doi/10.1145/1593105.1593123},
  urldate = {2024-01-10},
  abstract = {Direct numerical simulations of large numbers of planetary systems are key to the study extrasolar planetary systems. We investigate the potential of Graphics Processing Units (GPUs) to dramatically accelerate such calculations and enable new types of analyses. Here we report on a CUDA implementation of two different integrators, Verlet and BulirschStoer; that is, we are contrasting the relative efficiency of a low-memory-footprint, small-time-steps integrator with a more complex but highly stable integrator for best use of GPU resources.},
  isbn = {978-1-60558-105-7},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\EU2X3TUB\Gao et al. - 2008 - Parallel integration of planetary systems on GPUs.pdf}
}

@article{gao2018,
  title = {{{GPU}} Optimization of Material Point Methods},
  author = {Gao, Ming and Wang, Xinlei and Wu, Kui and Pradhana, Andre and Sifakis, Eftychios and Yuksel, Cem and Jiang, Chenfanfu},
  year = {2018},
  month = dec,
  journal = {ACM Transactions on Graphics},
  volume = {37},
  number = {6},
  pages = {1--12},
  issn = {0730-0301, 1557-7368},
  doi = {10.1145/3272127.3275044},
  url = {https://dl.acm.org/doi/10.1145/3272127.3275044},
  urldate = {2024-02-15},
  abstract = {The Material Point Method (MPM) has been shown to facilitate effective simulations of physically complex and topologically challenging materials, with a wealth of emerging applications in computational engineering and visual computing. Borne out of the extreme importance of regularity, MPM is given attractive parallelization opportunities on high-performance modern multiprocessors. Parallelization of MPM that fully leverages computing resources presents challenges that require exploring an extensive design-space for favorable data structures and algorithms. Unlike the conceptually simple CPU parallelization, where the coarse partition of tasks can be easily applied, it takes greater effort to reach the GPU hardware saturation due to its many-core SIMT architecture. In this paper we introduce methods for addressing the computational challenges of MPM and extending the capabilities of general simulation systems based on MPM, particularly concentrating on GPU optimization. In addition to our open-source high-performance framework, we also conduct performance analyses and benchmark experiments to compare against alternative design choices which may superficially appear to be reasonable, but can suffer from suboptimal performance in practice. Our explicit and fully implicit GPU MPM solvers are further equipped with a Moving Least Squares MPM heat solver and a novel sand constitutive model to enable fast simulations of a wide range of materials. We demonstrate that more than an order of magnitude performance improvement can be achieved with our GPU solvers. Practical high-resolution examples with up to ten million particles run in less than one minute per frame.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\F5P7SRZ5\Gao et al. - 2018 - GPU optimization of material point methods.pdf}
}

@article{garcia-alonso1994,
  title = {Solving the Collision Detection Problem},
  author = {{Garcia-Alonso}, A. and Serrano, N. and Flaquer, J.},
  year = {1994},
  month = may,
  journal = {IEEE Computer Graphics and Applications},
  volume = {14},
  number = {3},
  pages = {36--43},
  issn = {0272-1716},
  doi = {10.1109/38.279041},
  url = {http://ieeexplore.ieee.org/document/279041/},
  urldate = {2024-01-09},
  langid = {english},
  keywords = {voxel},
  file = {J:\sandboxR9\Thesis\zotero\storage\FMFHK3G2\Garcia-Alonso et al. - 1994 - Solving the collision detection problem.pdf}
}

@article{gavrilovaa,
  title = {Collision {{Detection Optimization}} in a {{Multi-particle System}}},
  author = {Gavrilova, Marina L and Rokne, Jon},
  abstract = {Collision detection optimization algorithms in an event-driven simulation of a multi-particle system is one of crucial tasks, determining efficiency of simulation. We employ dynamic computational geometry data structures as a tool for collision detection optimization. The data structures under consideration are the dynamic generalized Voronoi diagram, the regular spatial subdivision, the regular spatial tree and the set of segment trees. Methods are studies in a framework of a granular-type materials system. Guidelines for selecting the most appropriate collision detection optimization technique summarize the paper.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\4A8KTJTU\Gavrilova and Rokne - Collision Detection Optimization in a Multi-partic.pdf}
}

@article{gomez-gesteira2004,
  title = {Using a {{Three-Dimensional Smoothed Particle Hydrodynamics Method}} for {{Wave Impact}} on a {{Tall Structure}}},
  author = {{G{\'o}mez-Gesteira}, M. and Dalrymple, Robert A.},
  year = {2004},
  month = mar,
  journal = {Journal of Waterway, Port, Coastal, and Ocean Engineering},
  volume = {130},
  number = {2},
  pages = {63--69},
  issn = {0733-950X, 1943-5460},
  doi = {10.1061/0733-950X130:2},
  url = {https://ascelibrary.org/doi/10.1061/%28ASCE%290733-950X%282004%29130%3A2%2863%29},
  urldate = {2024-02-18},
  abstract = {The impact of a single wave generated by a dam break with a tall structure is modeled with a three-dimensional version of the smoothed particle hydrodynamics method. The method is used to analyze the propagation of a long wave and the force it exerts on a tall structure located in a region with vertical boundaries. Velocities and forces obtained from a numerical model are shown to be in good agreement with laboratory measurements. The effect of having a dry bed in front of the dam prior to the dam break versus a wet bed in the experiment is discussed.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZLD5FV3L\Gómez-Gesteira and Dalrymple - 2004 - Using a Three-Dimensional Smoothed Particle Hydrod.pdf}
}

@incollection{Goodman1997,
  title = {Collision and Proximity Queries},
  booktitle = {Handbook of Discrete and Computational Geometry},
  author = {Goodman, Jacob E.},
  editor = {O'Rourke, Joseph},
  year = {1997},
  pages = {787--808},
  publisher = {CRC Press, Inc.},
  address = {USA},
  url = {https://dl.acm.org/doi/book/10.5555/285869},
  isbn = {0-8493-8524-5}
}

@article{goos,
  title = {Lecture {{Notes}} in {{Computer Science}}},
  author = {Goos, Gerhard and Hartmanis, Juris and {van Leeuwen}, Jan and Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M and Mattern, Friedemann and Mitchell, John C and Naor, Moni and Nierstrasz, Oscar and Rangan, C Pandu and Steffen, Bernhard},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZCQKCIDL\Goos et al. - Lecture Notes in Computer Science.pdf}
}

@inproceedings{goswami,
  title = {Interactive {{SPH}} Simulation and Rendering on the {{GPU}}},
  booktitle = {Eurographics/ {{ACM SIGGRAPH Symposium}} on {{Computer Animation}} (2010)},
  author = {Goswami, Prashant and Schlegel, Philipp and Solenthaler, Barbara and Pajarola, Renato},
  year = {2010},
  url = {https://dl.acm.org/doi/10.5555/1921427.1921437},
  abstract = {In this paper we introduce a novel parallel and interactive SPH simulation and rendering method on the GPU using CUDA which allows for high quality visualization. The crucial particle neighborhood search is based on Z-indexing and parallel sorting which eliminates GPU memory overhead due to grid or hierarchical data structures. Furthermore, it overcomes limitations imposed by shading languages allowing it to be very flexible and approaching the practical limits of modern graphics hardware. For visualizing the SPH simulation we introduce a new rendering pipeline. In the first step, all surface particles are efficiently extracted from the SPH particle cloud exploiting the simulation data. Subsequently, a partial and therefore fast distance field volume is rasterized from the surface particles. In the last step, the distance field volume is directly rendered using state-of-the-art GPU raycasting. This rendering pipeline allows for high quality visualization at very high frame rates.},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\X59SNXNM\Goswami et al. - Interactive SPH simulation and rendering on the GP.pdf}
}

@article{govender2014,
  title = {Development of a Convex Polyhedral Discrete Element Simulation Framework for {{NVIDIA Kepler}} Based {{GPUs}}},
  author = {Govender, Nicolin and Wilke, Daniel N. and Kok, Schalk and Els, Rosanne},
  year = {2014},
  month = nov,
  journal = {Journal of Computational and Applied Mathematics},
  volume = {270},
  pages = {386--400},
  issn = {03770427},
  doi = {10.1016/j.cam.2013.12.032},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S037704271300705X},
  urldate = {2024-02-09},
  abstract = {Understanding the dynamical behavior of Granular Media (GM) is extremely important to many industrial processes. Thus simulating the dynamics of GM is critical in the design and optimization of such processes. However, the dynamics of GM is complex in nature and cannot be described by a closed form solution for more than a few particles. A popular and successful approach in simulating the underlying dynamics of GM is by using the Discrete Element Method (DEM). Computational viable simulations are typically restricted to a few particles with realistic complex interactions or a larger number of particles with simplified interactions. This paper introduces a novel DEM based particle simulation code (BLAZEDEM) that is capable of simulating millions of particles on a desktop computer utilizing a NVIDIA Kepler Graphical Processor Unit (GPU) via the CUDA programming model. The GPU framework of BLAZE-DEM is limited to applications that require large numbers of particles with simplified interactions such as hopper flow which exhibits task level parallelism that can be exploited on the GPU. BLAZE-DEM also performs real-time visualization with interactive capabilities. In this paper we discuss our GPU framework and validate our code by comparison between experimental and numerical hopper flow.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\MM22USHC\Govender et al. - 2014 - Development of a convex polyhedral discrete elemen.pdf}
}

@article{govender2015,
  title = {Collision Detection of Convex Polyhedra on the {{NVIDIA GPU}} Architecture for the Discrete Element Method},
  author = {Govender, Nicolin and Wilke, Daniel N. and Kok, Schalk},
  year = {2015},
  month = sep,
  journal = {Applied Mathematics and Computation},
  volume = {267},
  pages = {810--829},
  issn = {00963003},
  doi = {10.1016/j.amc.2014.10.013},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0096300314013794},
  urldate = {2024-01-26},
  abstract = {Convex polyhedra represent granular media well. This geometric representation may be critical in obtaining realistic simulations of many industrial processes using the discrete element method (DEM). However detecting collisions between the polyhedra and surfaces that make up the environment and the polyhedra themselves is computationally expensive. This paper demonstrates the significant computational benefits that the graphical processor unit (GPU) offers DEM. As we show, this requires careful consideration due to the architectural differences between CPU and GPU platforms. This paper describes the DEM algorithms and heuristics that are optimized for the parallel NVIDIA Kepler GPU architecture in detail. This includes a GPU optimized collision detection algorithm for convex polyhedra based on the separating plane (SP) method. In addition, we present heuristics optimized for the parallel NVIDIA Kepler GPU architecture. Our algorithms have minimalistic memory requirements, which enables us to store data in the limited but high bandwidth constant memory on the GPU. We systematically verify the DEM implementation, where after we demonstrate the computational scaling on two large-scale simulations. We are able achieve a new performance level in DEM by simulating 34 million polyhedra on a single NVIDIA K6000 GPU. We show that by using the GPU with algorithms tailored for the architecture, large scale industrial simulations are possible on a single graphics card.},
  langid = {english},
  keywords = {HCDHas particle collison Detection,MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\ESGJ2TCX\Govender et al. - 2015 - Collision detection of convex polyhedra on the NVI.pdf}
}

@article{govenderBlaze2016,
  title = {Blaze-{{DEMGPU}}: {{Modular}} High Performance {{DEM}} Framework for the {{GPU}} Architecture},
  shorttitle = {Blaze-{{DEMGPU}}},
  author = {Govender, Nicolin and Wilke, Daniel N. and Kok, Schalk},
  year = {2016},
  journal = {SoftwareX},
  volume = {5},
  pages = {62--66},
  issn = {23527110},
  doi = {10.1016/j.softx.2016.04.004},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S235271101630005X},
  urldate = {2024-01-16},
  abstract = {Blaze-DEMGPU is a modular GPU based discrete element method (DEM) framework that supports polyhedral shaped particles. The high level performance is attributed to the light weight and Single Instruction Multiple Data (SIMD) that the GPU architecture offers. Blaze-DEMGPU offers suitable algorithms to conduct DEM simulations on the GPU and these algorithms can be extended and modified. Since a large number of scientific simulations are particle based, many of the algorithms and strategies for GPU implementation present in Blaze-DEMGPU can be applied to other fields. Blaze-DEMGPU will make it easier for new researchers to use high performance GPU computing as well as stimulate wider GPU research efforts by the DEM community.},
  langid = {english},
  keywords = {BPHBroad phase process,BV Bounding Volume,GRID Grid,HCDHas particle collison Detection,NPH Narrow Phase Process,PSPPolyhedral shaped particles,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\PHHCTZQR\Govender et al. - 2016 - Blaze-DEMGPU Modular high performance DEM framewo.pdf}
}

@inproceedings{govindaraju2005,
  title = {Quick-{{CULLIDE}}: Fast Inter- and Intra-Object Collision Culling Using Graphics Hardware},
  shorttitle = {Quick-{{CULLIDE}}},
  booktitle = {{{IEEE Proceedings}}. {{VR}} 2005. {{Virtual Reality}}, 2005.},
  author = {Govindaraju, N.K. and {Ming C. Lin} and Manocha, D.},
  year = {2005},
  pages = {59--319},
  publisher = {IEEE},
  address = {Bonn, Germany},
  url = {https://ieeexplore.ieee.org/document/1492754},
  urldate = {2024-01-16},
  abstract = {We present a fast collision culling algorithm for performing interand intra-object collision detection among complex models using graphics hardware. Our algorithm is based on CULLIDE [8] and performs visibility queries on the GPUs to eliminate a subset of geometric primitives that are not in close proximity. We present an extension to CULLIDE to perform intra-object or selfcollisions between complex models. Furthermore, we describe a novel visibility-based classification scheme to compute potentiallycolliding and collision-free subsets of objects and primitives, which considerably improves the culling performance. We have implemented our algorithm on a PC with an NVIDIA GeForce FX 6800 Ultra graphics card and applied it to three complex simulations, each consisting of objects with tens of thousands of triangles. In practice, we are able to compute all the self-collisions for cloth simulation up to image-space precision at interactive rates.},
  isbn = {978-0-7803-8929-8},
  langid = {english},
  keywords = {CLLG Culling,DPTDepth Buffer,GPUGPU Based,PCSPotentially Colliding Set,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\6LX69JUM\Govindaraju et al. - 2005 - Quick-CULLIDE fast inter- and intra-object collis.pdf}
}

@article{Govindaraju2005A,
  title = {Interactive Collision Detection between Deformable Models Using Chromatic Decomposition},
  author = {Govindaraju, Naga K and Knott, David and Jain, Nitin and Kabul, Ilknur and Tamstorf, Rasmus},
  abstract = {We present a novel algorithm for accurately detecting all contacts, including self-collisions, between deformable models. We precompute a chromatic decomposition of a mesh into non-adjacent primitives using graph coloring algorithms. The chromatic decomposition enables us to check for collisions between non-adjacent primitives using a linear-time culling algorithm. As a result, we achieve higher culling efficiency and significantly reduce the number of false positives. We use our algorithm to check for collisions among complex deformable models consisting of tens of thousands of triangles for cloth modeling and medical simulation. Our algorithm accurately computes all contacts at interactive rates. We observed up to an order of magnitude speedup over prior methods.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\IPFEWKLT\Govindaraju et al. - Interactive collision detection between deformable.pdf}
}

@inproceedings{govindaraju2005b,
  title = {{{CULLIDE}}: Interactive Collision Detection between Complex Models in Large Environments Using Graphics Hardware},
  shorttitle = {{{CULLIDE}}},
  booktitle = {{{ACM SIGGRAPH}} 2005 {{Courses}} on   - {{SIGGRAPH}} '05},
  author = {Govindaraju, Naga K. and Redon, Stephane and Lin, Ming C. and Manocha, Dinesh},
  year = {2005},
  pages = {204},
  publisher = {ACM Press},
  address = {Los Angeles, California},
  url = {https://dl.acm.org/doi/10.1145/1198555.1198785},
  urldate = {2024-02-09},
  abstract = {We present a novel approach for fast collision detection between multiple deformable and breakable objects in a large environment using graphics hardware. Our algorithm takes into account low bandwidth to and from the graphics cards and computes a potentially colliding set (PCS) using visibility queries. It involves no precomputation and proceeds in multiple stages: PCS computation at an object level and PCS computation at sub-object level, followed by exact collision detection. We use a linear time two-pass rendering algorithm to compute each PCS efficiently. The overall approach makes no assumption about the input primitives or the object's motion and is directly applicable to all triangulated models. It has been implemented on a PC with NVIDIA GeForce FX 5800 Ultra graphics card and applied to different environments composed of a high number of moving objects with tens of thousands of triangles. It is able to compute all the overlapping primitives between different objects up to image-space resolution in a few milliseconds.},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\NHW39L9A\Govindaraju et al. - 2005 - CULLIDE interactive collision detection between c.pdf}
}

@phdthesis{govindaraju2005c,
  title = {Efficient  {{Visibility-Based}}  {{Algorithms}}  for  {{Interactive}}  {{Walkthrough}},  {{Shadow}}  {{Generation}},  and  {{Collision}}  {{Detection}}},
  shorttitle = {The Ultimate Display},
  author = {Govindaraju, Naga},
  year = {2005},
  month = aug,
  url = {http://ieeexplore.ieee.org/document/1492267/},
  urldate = {2024-02-08},
  school = {Chapel Hill},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\I942BM62\THESIS_Efficient Visibility-Based Algorithms for Interactive Walkthrough, Shadow Generatio.pdf}
}

@article{govindaraju2007,
  title = {Fast Continuous Collision Detection among Deformable Models Using Graphics Processors},
  author = {Govindaraju, Naga K. and Kabul, Ilknur and Lin, Ming C. and Manocha, Dinesh},
  year = {2007},
  month = jan,
  journal = {Computers \& Graphics},
  volume = {31},
  number = {1},
  pages = {5--14},
  issn = {00978493},
  doi = {10.1016/j.cag.2006.09.005},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S009784930600183X},
  urldate = {2024-01-10},
  abstract = {We present an interactive algorithm to perform continuous collision detection between general deformable models using graphics processors (GPUs). We model the motion of each object in the environment as a continuous path and check for collisions along the paths. Our algorithm precomputes the chromatic decomposition for each object and uses visibility queries on GPUs to quickly compute potentially colliding sets of primitives. We introduce a primitive classification technique to perform efficient continuous self-collision. We have implemented our algorithm on a 3.0 GHz Pentium IV PC with a NVIDIA 7800 GPU, and we highlight its performance on complex simulations composed of several thousands of triangles. In practice, our algorithm is able to detect all contacts, including self-collisions, at image-space precision in tens of milli-seconds.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\KBY4NKB9\Govindaraju et al. - 2007 - Fast continuous collision detection among deformab.pdf}
}

@misc{green2010,
  title = {Particle {{Simulation Using CUDA}}},
  author = {Green, Simon},
  year = {2010},
  month = may,
  address = {NVidia Developer},
  url = {https://developer.download.nvidia.cn/assets/cuda/files/particles.pdf},
  keywords = {MATRIX},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\JWBDFRCU\Green - 2010 - Particle Simulation using CUDA.pdf}
}

@article{greengard-1997,
  title = {A Fast Algorithm for Particle Simulations},
  author = {Greengard, Leslie and Rokhlin, Vladimir},
  year = {1997},
  month = aug,
  journal = {Journal of Computational Physics},
  volume = {135},
  number = {2},
  pages = {280--292},
  doi = {10.1006/jcph.1997.5706},
  url = {https://doi.org/10.1006/jcph.1997.5706},
  file = {J:\sandboxR9\Thesis\zotero\storage\R4LN475Y\Greengard and Rokhlin - A Fast Algorithm for Particle Simulations.pdf}
}

@article{gress2006,
  title = {{{GPU}}-based {{Collision Detection}} for {{Deformable Parameterized Surfaces}}},
  author = {Gre{\ss}, Alexander and Guthe, Michael and Klein, Reinhard},
  year = {2006},
  month = sep,
  journal = {Computer Graphics Forum},
  volume = {25},
  number = {3},
  pages = {497--506},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2006.00969.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2006.00969.x},
  urldate = {2024-01-10},
  abstract = {Based on the potential of current programmable GPUs, recently several approaches were developed that use the GPU to calculate deformations of surfaces like the folding of cloth or to convert higher level geometry to renderable primitives like NURBS or subdivision surfaces. These algorithms are realized as a per-frame operation and take advantage of the parallel processing power of the GPU. Unfortunately, an efficient accurate collision detection, that is necessary for the simulation itself or for the interaction with and editing of the objects, can currently not be integrated seamlessly into these GPU-based approaches without switching back to the CPU.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\J7KC7IQJ\Greß et al. - 2006 - GPU‐based Collision Detection for Deformable Param.pdf}
}

@inproceedings{guibas1999,
  title = {H-{{Walk}}: Hierarchical Distance Computation for Moving Convex Bodies},
  shorttitle = {H-{{Walk}}},
  booktitle = {Proceedings of the Fifteenth Annual Symposium on {{Computational}} Geometry},
  author = {Guibas, Leonidas J. and Hsu, David and Zhang, Li},
  year = {1999},
  month = jun,
  pages = {265--273},
  publisher = {ACM},
  address = {Miami Beach Florida USA},
  doi = {10.1145/304893.304979},
  url = {https://dl.acm.org/doi/10.1145/304893.304979},
  urldate = {2024-01-09},
  abstract = {This paper presents the Hierarchical Walk, or H-Walk algorithm, which maintains the distance between two moving convex bodies by exploiting both motion coherence and hierarchical representations. For convex polygons, we prove that H-Walk improves on the classic Lin-Canny and DobkinKirkpatrick algorithms. We have implemented H-Walk for moving convex polyhedra in three dimensions. Experimental results indicate that, unlike previous incremental distance computation algorithms, H-Walk adapts well to variable coherence in the motion.},
  isbn = {978-1-58113-068-3},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\93UER4DJ\Guibas et al. - 1999 - H-Walk hierarchical distance computation for movi.pdf}
}

@article{han2022,
  title = {Scalable Multiscale Modeling of Platelets with 100 Million Particles},
  author = {Han, Changnian and Zhang, Peng and Zhu, Yicong and Cong, Guojing and Kozloski, James R. and Yang, Chih Chieh and Zhang, Leili and Deng, Yuefan},
  year = {2022},
  month = dec,
  journal = {The Journal of Supercomputing},
  volume = {78},
  number = {18},
  pages = {19707--19724},
  issn = {0920-8542, 1573-0484},
  doi = {10.1007/s11227-022-04648-4},
  url = {https://link.springer.com/10.1007/s11227-022-04648-4},
  urldate = {2024-02-22},
  abstract = {We developed the core components of the AI-aided multiple time stepping algorithm for multiscale modeling of cell dynamics. This algorithm was implemented and analyzed on two supercomputer architectures with an application of simulating the aggregation of 250 platelets, or 102 million particles. To scale on these computers with complex memory and network architectures with GPUs, we devised a biomechanics-informed task mapping scheme to optimize load imbalance, communications, and memory utilization. Our simulations, scaling well up to 192 nodes on a Summit-like supercomputer with a peak speed of 11 petaflops, achieved a rate of 423 {$\mu$}s/day which is 500 times faster than the conventional algorithm using static time step and this has enabled studies of record size blood clots at record spatial--temporal resolutions. Additionally, we discovered the sensitive dependence of the scalability and execution time on the methods of decomposition, CPU--GPU coupling, and task mapping.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\APB8XADJ\Han et al. - 2022 - Scalable multiscale modeling of platelets with 100.pdf}
}

@book{har2012,
  title = {Advances in {{Computational Dynamics}} of {{Particles}}, {{Materials}} and {{Structures}} : A {{Unified Approach}}.},
  author = {Har, {\relax Jason}. and Tamma, {\relax Kumar}.},
  year = {2012},
  edition = {2nd ed.},
  publisher = {John Wiley \& Sons},
  address = {Hoboken},
  abstract = {Advanced Computational Dynamics of Particles, Materials, and Structures: A Unified Approach breaks new ground with its in-depth, detailed coverage of modern computational mechanics in particle and continuum dynamics. Kumar Tamma provides a unique blend of classical and innovative theoretical and computational approaches that cover both particle dynamics and flexible continuum structural dynamics applications. He covers both traditional methods and new developments \& perspectives in both time and space discretization, encompassing classical Newtonian, Lagrangian, and Hamiltonian mechanics as wel.},
  isbn = {978-1-119-96590-9},
  keywords = {Physics,SCIENCE -- Energy,SCIENCE -- Mechanics -- General,SCIENCE -- Physics -- General}
}

@inproceedings{harada2007,
  title = {Sliced Data Structure for Particle-Based Simulations on {{GPUs}}},
  booktitle = {Proceedings of the 5th International Conference on {{Computer}} Graphics and Interactive Techniques in {{Australia}} and {{Southeast Asia}}},
  author = {Harada, Takahiro and Koshizuka, Seiichi and Kawaguchi, Yoichiro},
  year = {2007},
  month = dec,
  series = {{{GRAPHITE}} '07},
  pages = {55--62},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/1321261.1321271},
  url = {https://doi.org/10.1145/1321261.1321271},
  urldate = {2024-03-16},
  abstract = {We present a sliced data structure that is effective for use in neighboring particle search for particle-based simulations. In this method, a grid is dynamically constructed to fit to a particle distribution. Rather than computing the grid to fit perfectly to the particle distribution, it compute a grid with some margin to the distribution. This lowers the computation cost of constructing the data structure. Before storing particle indices on a grid, key values which are used to compute the index of a voxel are calculated. The proposed data structure can be introduced into particle-based simulations that run entirely on the Graphics Processing Unit (GPU) because the construction of this data structure and access to storing values can also be also performed entirely on the GPU. The proposed data structure removes the restriction of a computation region with a fixed grid and makes it possible to simulate particle motions over a larger area. Moreover, the cost of the proposed method is low enough for use in real-time applications. In this paper, we first introduce the sliced data structure and then describe its implementation on the GPU. Finally, we apply the propsed method to particle-based simulations and present its quantitative evaluations.},
  isbn = {978-1-59593-912-8},
  file = {J:\sandboxR9\Thesis\zotero\storage\3M25RRHB\Harada et al. - Sliced Data Structure for Particle-Based Simulatio.pdf}
}

@article{harris2001,
  title = {Real-{{Time Cloud Rendering}}},
  author = {Harris, Mark J. and Lastra, Anselmo},
  year = {2001},
  month = sep,
  journal = {Computer Graphics Forum},
  volume = {20},
  number = {3},
  pages = {76--85},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/1467-8659.00500},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/1467-8659.00500},
  urldate = {2024-01-27},
  abstract = {This paper presents a method for realistic real-time rendering of clouds suitable for flight simulation and games. It provides a cloud shading algorithm that approximates multiple forward scattering in a preprocess, and first order anisotropic scattering at runtime. Impostors are used to accelerate cloud rendering by exploiting frame-to-frame coherence in an interactive flight simulation. Impostors are shown to be particularly well suited to clouds, even in circumstances under which they cannot be applied to the rendering of polygonal geometry. The method allows hundreds of clouds and hundreds of thousands of particles to be rendered at high frame rates, and improves interaction with clouds by reducing artifacts introduced by direct particle rendering techniques.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\YCL465QN\Harris and Lastra - 2001 - Real-Time Cloud Rendering.pdf}
}

@article{hastings,
  title = {Optimization of {{Large-Scale}}, {{Real-Time Simulations}} by {{Spatial Hashing}}},
  author = {Hastings, Erin J and Mesit, Jaruwan and Guha, Ratan K},
  abstract = {As simulations grow in scale, optimization techniques become virtually required to provide real-time response. In this paper we will discuss how spatial hashing can be utilized to optimize many aspects of large-scale simulations. Spatial hashing is a technique in which objects in a 2D or 3D domain space are projected into a 1D hash table allowing for very fast queries on objects in the domain space. Previous research has shown spatial hashing to be an effective optimization technique for collision detection. We propose several extensions of the technique in order to simultaneously optimize nearly all aspects of simulations including: 1) mobile object collision, 2) object-terrain collision, 3) object and terrain rendering, 4) object interaction, decision, or AI routines, and 5) picking. The results of a simulation are presented where visibility determination, collision and response, and an AI routine is calculated in real-time for over 30,000 mobiles objects on a typical desktop PC.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\P4CS3J56\Hastings et al. - Optimization of Large-Scale, Real-Time Simulations.pdf}
}

@article{he2007,
  title = {Multigrid Contact Detection Method},
  author = {He, Kejing and Dong, Shoubin and Zhou, Zhaoyao},
  year = {2007},
  month = mar,
  journal = {Physical Review E},
  volume = {75},
  number = {3},
  pages = {036710},
  issn = {1539-3755, 1550-2376},
  doi = {10.1103/PhysRevE.75.036710},
  url = {https://link.aps.org/doi/10.1103/PhysRevE.75.036710},
  urldate = {2024-02-12},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\IRCAIU9V\He et al. - 2007 - Multigrid contact detection method.pdf}
}

@article{he2018,
  title = {A {{GPU-based}} Coupled {{SPH-DEM}} Method for Particle-Fluid Flow with Free Surfaces},
  author = {He, Yi and Bayly, Andrew E. and Hassanpour, Ali and Muller, Frans and Wu, Ke and Yang, Dongmin},
  year = {2018},
  month = oct,
  journal = {Powder Technology},
  volume = {338},
  pages = {548--562},
  issn = {00325910},
  doi = {10.1016/j.powtec.2018.07.043},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0032591018305424},
  urldate = {2024-01-10},
  abstract = {Particle-fluid flows with free-surfaces are commonly encountered in many industrial processes, such as wet ball milling, slurry transport and mixing. Accurate prediction of particle behaviors in these systems is critical to establish fundamental understandings of the processes, however the presence of the free-surface makes modelling them a challenge for most traditional, continuum, multi-phase methodologies. Coupling of smoothed particle hydrodynamics and discrete element method (SPH-DEM) has the potential to be an effective numerical method to achieve this goal. However, practical application of this method remains challenging due to high computational demands. In this work, a general purposed SPH-DEM model that runs entirely on a Graphic Processing Unit (GPU) is developed to accelerate the simulation. Fluid-solid coupling is based on local averaging techniques and, to accelerate neighbor searching, a dual-grid searching approach is adapted to a GPU architecture to tackle the size difference in the searching area between SPH and DEM. Simulation results compare well with experimental results on dam-breaking of a free-surface flow and particle-fluid flow both qualitatively and quantitatively, confirming the validity of the developed model. More than 10 million fluid particles can be simulated on a single GPU using double-precision floating point operations. A linear scalability of calculation time with the number of particles is obtained for both single-phase and two-phase flows. Practical application of the developed model is demonstrated by simulations of an agitated tubular reactor and a rotating drum, showing its capability in handling complex engineering problems involving both free-surfaces and particle-fluid interactions.},
  langid = {english},
  keywords = {DGSADual Grid SPH-DEM,HCDHas particle collison Detection,ILInteraction Length,MATRIX,REFSRefs reviewd,reviewed},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\5BGGHRK7\He et al. - 2018 - A GPU-based coupled SPH-DEM method for particle-fl.pdf}
}

@article{he2018a,
  title = {Coupling {{CFD-DEM}} with Dynamic Meshing: {{A}} New Approach for Fluid-Structure Interaction in Particle-Fluid Flows},
  shorttitle = {Coupling {{CFD-DEM}} with Dynamic Meshing},
  author = {He, {\relax Yi}. and Bayly, Andrew E. and Hassanpour, Ali},
  year = {2018},
  month = feb,
  journal = {Powder Technology},
  volume = {325},
  pages = {620--631},
  issn = {00325910},
  doi = {10.1016/j.powtec.2017.11.045},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0032591017309191},
  urldate = {2024-01-16},
  abstract = {Many important engineering applications involve the interaction of free-moving objects with dispersed multiphase flows, however due to the challenge and complexity of modelling these systems, modelling approaches remain very limited and very few studies have been reported. This work presents a new method capable of addressing these problems. It integrates a dynamic meshing approach, used to explicitly capture the flow induced by free-moving large object(s), with a conventional CFD-DEM method to capture the behaviour of small particles in particle-fluid flow. The force and torque acting on the large object due to the fluid flow are explicitly calculated by integrating pressure and viscous stress acting on the object's surface and the forces due to collisions with both the smaller particles and other structures are calculated using a soft-sphere DEM approach. The developed model has been fully implemented on the ANSYS/Fluent platform due to its efficient handling of dynamic meshing and complex and/or free-moving boundaries, thus it can be applied to a wide range of industrial applications. Validation tests have been carried out for two typical gas-solid fluidization cases, they show good qualitative and quantitative agreement with reported experimental literature data. The developed model was then successfully applied to gas fluidization with a large immersed tube which was either fixed or freemoving. The predicted interacting dynamics of the gas, particle and tube were highly complex and highlighted the value of fully resolving the flow around the large object. The results demonstrated that the capability of a conventional CFD-DEM approach could be enhanced to address free-body fluid-structure interaction problems encountered in particle-fluid systems.},
  langid = {english},
  keywords = {DEM Discrete Element method,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\3EKM7V5P\He et al. - 2018 - Coupling CFD-DEM with dynamic meshing A new appro.pdf}
}

@article{he2022,
  title = {Assessment of Kinetic Theory for Gas--Solid Flows Using Discrete Particle Method},
  author = {He, Mingming and Zhao, Bidan and Xu, Ji and Kong, Lingkai and Wang, Junwu},
  year = {2022},
  month = sep,
  journal = {Physics of Fluids},
  volume = {34},
  number = {9},
  pages = {093315},
  issn = {1070-6631, 1089-7666},
  doi = {10.1063/5.0117386},
  url = {https://pubs.aip.org/pof/article/34/9/093315/2844997/Assessment-of-kinetic-theory-for-gas-solid-flows},
  urldate = {2024-01-09},
  abstract = {Kinetic theory is a common choice for closing the solid phase stress in the continuum theory for dilute and moderate dense gas--solid flows. In this article, methods are proposed for postprocessing the data obtained from discrete particle simulations, and the results are then used to critically assess the fundamental assumptions of kinetic theory. It is shown that (i) the fundamental assumptions and predictions of kinetic theory are, respectively, valid and accurate in homogeneous granular flows, as expected. Those results prove that the methods for data postprocessing are effective; (ii) in the case of nonequilibrium and heterogeneous gas--solid flows, nearly all fundamental assumptions get challenged, and the predictions of kinetic theory, in terms of collision frequency and particle pressure, deviate significantly from the statistical results of discrete particle simulation. Therefore, the standard kinetic theory is insufficient to provide the constitutive laws for continuum modeling of heterogeneous gas--solid flows.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\CH2YCL6C\He et al. - 2022 - Assessment of kinetic theory for gas–solid flows u.pdf}
}

@article{heidelberger,
  title = {Detection of {{Collisions}} and {{Self-collisions Using Image-space Techniques}}},
  author = {Heidelberger, Bruno and Teschner, Matthias and Gross, Markus},
  abstract = {Image-space techniques have shown to be very efficient for collision detection in dynamic simulation and animation environments. This paper proposes a new image-space technique for efficient collision detection of arbitrarily shaped, water-tight objects. In contrast to existing approaches that do not consider self-collisions, our approach combines the image-space object representation with information on face orientation to overcome this limitation.},
  langid = {english},
  keywords = {ISMImage Space Methods},
  file = {J:\sandboxR9\Thesis\zotero\storage\I8H5MVZ9\Heidelberger et al. - Detection of Collisions and Self-collisions Using .pdf}
}

@book{hemanth2021,
  title = {Advances in {{Parallel Computing Technologies}} and {{Applications}}},
  author = {Hemanth, D. J. and Elhosney, M. and Nguyen, T. N.},
  year = {2021},
  publisher = {IOS Press, Incorporated},
  address = {Amsterdam, NETHERLANDS, THE},
  url = {https://www.iospress.com/catalog/books/advances-in-parallel-computing-technologies-and-applications},
  urldate = {2024-01-11},
  isbn = {978-1-64368-219-8},
  keywords = {Parallel processing (Electronic computers),Parallel programming (Computer science)},
  file = {J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\2YUPBDBQ\\Hemanth et al. - 2021 - Advances in Parallel Computing Technologies and Ap.pdf;J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\DZ6Q7279\\reader.html}
}

@inproceedings{hidalgo2013a,
  title = {On the Use of Graphics Processing Units ({{GPUs}}) for Molecular Dynamics Simulation of Spherical Particles},
  booktitle = {{{POWDERS AND GRAINS}} 2013: {{Proceedings}} of the 7th {{International Conference}} on {{Micromechanics}} of {{Granular Media}}},
  author = {Hidalgo, R. C. and Kanzaki, T. and {Alonso-Marroquin}, F. and Luding, S.},
  year = {2013},
  pages = {169--172},
  address = {Sydney, Australia},
  doi = {10.1063/1.4811894},
  url = {https://pubs.aip.org/aip/acp/article/1542/1/169-172/817922},
  urldate = {2024-02-16},
  abstract = {General-purpose computation on Graphics Processing Units (GPU) on personal computers has recently become an attractive alternative to parallel computing on clusters and supercomputers. We present the GPU-implementation of an accurate molecular dynamics algorithm for a system of spheres. The new hybrid CPU-GPU implementation takes into account all the degrees of freedom, including the quaternion representation of 3D rotations. For additional versatility, the contact interaction between particles is defined using a force law of enhanced generality, which accounts for the elastic and dissipative interactions, and the hard-sphere interaction parameters are translated to the soft-sphere parameter set. We prove that the algorithm complies with the statistical mechanical laws by examining the homogeneous cooling of a granular gas with rotation. The results are in excellent agreement with well established mean-field theories for low-density hard sphere systems. This GPU technique dramatically reduces user waiting time, compared with a traditional CPU implementation.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\36DHGQ7X\Hidalgo et al. - 2013 - On the use of graphics processing units (GPUs) for.pdf}
}

@book{hockney1988,
  title = {Computer {{Simulation Using Particles}}},
  author = {Hockney, R W},
  year = {1988},
  publisher = {Taylor \& Francis Group, LLC},
  url = {https://www.taylorfrancis.com/books/mono/10.1201/9780367806934/computer-simulation-using-particles-hockney-eastwood},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\9TN6K4EC\Hockney - Computer Simulation Using Particles.pdf}
}

@techreport{hoff2017,
  title = {Fast {{3D Geometric Proximity Queries}} between {{Rigid}} and {{Deformable Models Using Graphics Hardware Acceleration}}},
  author = {Hoff, Kenneth and Zaferakis, Andrew},
  year = {2017},
  number = {Technical Report TR02-004,},
  address = {Department of Computer Science},
  institution = {UNC Chapel Hill},
  url = {http://www.cs.unc.edu/techreports/02-004.pdf},
  abstract = {We present an approach for computing generalized proximity information between arbitrary polygonal models using graphics hardware acceleration. Our algorithm combines object-space localization, multi-pass rendering techniques, and accelerated distance field computation to perform complex proximity queries at interactive rates. It is applicable to any closed, possibly non-convex, polygonal object and requires no precomputation, making it suitable for both rigid and dynamically deformable geometry of relatively high complexity. The proximity queries include, not only collision detection, but also the computation of intersections, minimum separation distance, closest points, penetration depth and direction, and contact points and normals. The load is balanced between CPU and graphics subsystems through a hybrid geometry and image-based approach. Geometric object-space techniques coarsely localize potential interactions between two objects, and image-space techniques accelerated with graphics hardware provide the low-level proximity information. We have implemented our system using the OpenGL graphics library and have tested it on various hardware configurations with a wide range of object complexities and contact scenarios. In all cases, interactive frame rates are achieved. In addition, our algorithm's performance is heavily based on the graphics hardware computational power growth curve which has exceeded the expectations of Moore's Law for general CPU power growth.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\AX4EMSHZ\Iii et al. - Fast 3D Geometric Proximity Queries between Rigid .pdf}
}

@article{hsieha,
  title = {{{GPU-based Collision Detection}} and {{Response}} for {{Particles}} on {{3D Models}}},
  author = {Hsieh, Hsien-Hsi and Tai, Wen-Kai and Chang, Chin-Chen},
  abstract = {This paper presents a GPU-based approach to handle collision detection and response for particles on 3D models. Signed Hausdorff distance fields were used and stored in volume textures. The voxels in a distance field stored the Hausdorff distance to the 3D model and the normal of the corresponding nearest surface. Object-based collision detection and response were processed using a pixel shader with texture sampling on the Hausdorff distance field. Particles were updated by rendering them using programmable graphics hardware acceleration. No data had to be transferred to the CPU between frames. The power of parallel GPU computation made the simulation of the particle system on a GPU at least twice as fast as that on a CPU.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\9P6X39ZP\Hsieh et al. - GPU-based Collision Detection and Response for Par.pdf}
}

@article{huang2015,
  title = {An {{Introduction}} to {{Discrete Element Method}}: {{A Meso-scale Mechanism Analysis}} of {{Granular Flow}}},
  shorttitle = {An {{Introduction}} to {{Discrete Element Method}}},
  author = {Huang, Yrj{\"o} Jun and Nydal, Ole J{\o}rgen and Ge, Chenhui and Yao, Baodian},
  year = {2015},
  month = oct,
  journal = {Journal of Dispersion Science and Technology},
  volume = {36},
  number = {10},
  pages = {1370--1377},
  issn = {0193-2691, 1532-2351},
  doi = {10.1080/01932691.2014.984304},
  url = {http://www.tandfonline.com/doi/full/10.1080/01932691.2014.984304},
  urldate = {2024-02-11},
  abstract = {The phenomenon of granular flows appears frequently in industrial and daily life. The particle--particle interaction plays an important role in granular flows, which makes the flows have some strong nonlinear characteristics and so different from the normal materials, either solids or liquids. Discrete element method (DEM) is a powerful tool to catch this interaction in meso-scopic scale. A brief review of DEM is presented, including some of our new works in this area. DEM can also be coupled with other CFD methods for simulations of solid--liquid suspension flow. An example of such coupling is presented in this article as well.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\GYDYJZK3\Huang et al. - 2015 - An Introduction to Discrete Element Method A Meso.pdf}
}

@inproceedings{huiyan2012a,
  title = {Fast {{Collision Detection}} of {{Space-Time Correlation}}},
  booktitle = {2012 {{International Conference}} on {{Computer Science}} and {{Electronics Engineering}}},
  author = {Huiyan, Qu and Wei, Zhao},
  year = {2012},
  month = mar,
  pages = {567--571},
  publisher = {IEEE},
  address = {Hangzhou, Zhejiang, China},
  doi = {10.1109/ICCSEE.2012.231},
  url = {http://ieeexplore.ieee.org/document/6188238/},
  urldate = {2024-02-16},
  abstract = {To improve real-time performance and accuracy are key aspects of collision detection. In view of that conventional algorithms of collision detection spend a lot of detection time; this paper presents a advanced algorithm. We adapts a parallel method based on MPI .At the same time, we use temporal-spatial coherence and spatial subdivision algorithm. First, we subdivide the space into a series of voxels, and then we detect the state of the object. If the state is changed, we should build its list which is used to store its adjacent objects in voxel. We can begin with mark points. These mark points has independence, so the parallel method based on MPI can be used to speed up the collision detection .In a word, this algorithm reduces the times of collision detection and the traversing depth of the bounding box' tree. The results of experiment prove that this method has real-time performance and superiority.},
  isbn = {978-0-7695-4647-6 978-1-4673-0689-8},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\P6FZTBBG\Huiyan and Wei - 2012 - Fast Collision Detection of Space-Time Correlation.pdf}
}

@book{hyesoon2012,
  title = {Performance {{Analysis}} and Tuning for General Purpose Graphics Processing Units ({{GPGPU}})},
  author = {Hyesoon, Kim and Vuduc, Richard and Bahsorkhi, Sara and {Wen-mei Hwu}, Jee Choi},
  year = {2012},
  series = {Sythesis {{Lectures}} on {{Computer Architecture}}},
  number = {20},
  publisher = {Synthesis},
  url = {https://link.springer.com/book/10.1007/978-3-031-01737-7},
  isbn = {978-3-031-00609-8},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\3L37BIMW\Performance Analysis and Tuning for General Purpose Graphics Processing Units (GPGPU).pdf}
}

@article{ilmonen,
  title = {The {{Second Order Particle System}}},
  author = {Ilmonen, Tommi and Kontkanen, Janne},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZSDJHEDS\Ilmonen and Kontkanen - The Second Order Particle System.pdf}
}

@article{ioannidis2020,
  title = {Multithreaded {{Rendering For Cross-Platform 3D Visualization Based}} on {{Vulkan API}}},
  author = {Ioannidis, C. and Boutsi, A.-M.},
  year = {2020},
  month = sep,
  journal = {The International Archives of the Photogrammetry, Remote Sensing and Spatial Information Sciences},
  volume = {XLIV-4/W1-2020},
  pages = {57--62},
  issn = {2194-9034},
  doi = {10.5194/isprs-archives-XLIV-4-W1-2020-57-2020},
  url = {https://isprs-archives.copernicus.org/articles/XLIV-4-W1-2020/57/2020/},
  urldate = {2024-01-10},
  abstract = {The visualization of large-sized 3D geospatial models is a graphics intensive task. With ever increasing size and complexity, more computing resources are needed to attain speed and visual quality. Exploiting the parallelism and the multi-core performance of the Graphics Processing Unit (GPU), a cross-platform 3D viewer is developed based on the Vulkan API and modern C++. The proposed prototype aims at the visualization of a textured 3D mesh of the Cultural Heritage by enabling a multi-threaded rendering pipeline. The rendering workload is distributed across many CPU threads by recording multiple command buffers in parallel and coordinating the host and the GPU rendering phases. To ensure efficient multi-threading behavior and a minimum overhead, synchronization primitives are exploiting for ordering the execution of queues and command buffers. Furthermore, push-constants are used to send uniform data to the GPU and render passes to adapt to the tile-based rendering of the mobile devices. The proposed methodology and technical solution are designed, implemented and tested for Windows, MacOS and Android on Vulkan-compatible GPU hardware by compiling the same codebase. The benchmarking on multiple hardware, architectures and platforms explores the performance improvement for the different approaches compared to one-thread and showcase the potential of the 3D viewer to handle large datasets at no expense of visual quality and geometric fidelity in the absence of high-end technological resources.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\F7RMGIKL\Ioannidis and Boutsi - 2020 - MULTITHREADED RENDERING FOR CROSS-PLATFORM 3D VISU.pdf}
}

@article{ivsonGPUAcceleratedUniformGrid,
  title = {{GPU-Accelerated Uniform Grid Construction for Ray Tracing Dynamic Scenes}},
  author = {Ivson, Paulo and Duarte, Leonardo and Celes, Waldemar},
  abstract = {We present a novel data-parallel algorithm for quickly rebuilding Uniform Grids on state of the art GPUs. The technique combines very fast scan and sorting procedures to classify scene primitives according to the spatial subdivision. Results demonstrate this routine is not only scalable with scene size, but achieves faster rebuild times than other state of the art implementations. In addition, we have developed a ray-tracing procedure that achieves interactive visualization rates, even when enabling shadows and reection rays. Since the grid structure can be eciently rebuilt each rendering frame, we can maintain performance with fully animated scenes containing unstructured movements. Overall performance achieved greatly improves upon Uniform Grids on the CPU, while remaining competitive to more adaptive structures such as the BVH and kd-tree.},
  langid = {portuguese},
  file = {J:\sandboxR9\Thesis\zotero\storage\R6DPXLIK\Ivson et al. - GPU-Accelerated Uniform Grid Construction for Ray .pdf}
}

@article{Jang2008a,
  title = {Fast Collision Detection Using the {{A-buffer}}},
  author = {Jang, Hanyoung and Han, JungHyun},
  year = {2008},
  month = jul,
  journal = {The Visual Computer},
  volume = {24},
  number = {7-9},
  pages = {659--667},
  issn = {0178-2789, 1432-2315},
  doi = {10.1007/s00371-008-0246-8},
  url = {http://link.springer.com/10.1007/s00371-008-0246-8},
  urldate = {2024-01-10},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\NM57YYTX\Jang and Han - 2008 - Fast collision detection using the A-buffer.pdf}
}

@article{jansen2018,
  title = {Tree Code for Collision Detection of Large Numbers of Particles Applied to the {{Breit}}--{{Wheeler}} Process},
  author = {Jansen, O. and {d'Humi{\`e}res}, E. and Ribeyre, X. and Jequier, S. and Tikhonchuk, V.T.},
  year = {2018},
  month = feb,
  journal = {Journal of Computational Physics},
  volume = {355},
  pages = {582--596},
  issn = {00219991},
  doi = {10.1016/j.jcp.2017.11.021},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0021999117308598},
  urldate = {2024-01-11},
  langid = {english},
  keywords = {BHA Barnes Hut Algorithm,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\DB8GWLBK\Jansen et al. - 2018 - Tree code for collision detection of large numbers.pdf}
}

@article{jia2023,
  title = {Image-Assisted Collision Detection for Calculation of an Assembly Interference Matrix},
  author = {Jia, Kang and Liu, Hao and Ma, Tao and Guo, Junkang and Zhang, Lei and Hong, Jun},
  year = {2023},
  month = jun,
  journal = {The International Journal of Advanced Manufacturing Technology},
  volume = {126},
  number = {7-8},
  pages = {3739--3748},
  issn = {0268-3768, 1433-3015},
  doi = {10.1007/s00170-023-11030-y},
  url = {https://link.springer.com/10.1007/s00170-023-11030-y},
  urldate = {2024-01-10},
  abstract = {The assembly interference matrix is a foundational information model for assembly process planning such as assembly sequence and assembly path planning, and supports digital assembly simulation, intelligent assembly, digital twin-based assembly, and so on. The assembly interference matrix represents two parts which are collision or not when they move along specific directions. Traditional assembly interference matrix construction adopts geometric collision detection on the approximate swept volume of parts which are composed by moving step by step. This not only leads to a heavy computational load because of the small moving steps but it is also easy to misjudge the contact as collision as well as missing collision due to discrete spatial movement of the part. To overcome these drawbacks, this work equivalent the collision detection of parts during the establishment of the assembly interference matrix as visibility judgment, and develops an image-assisted calculation method to process the collision between the part's swept volume as the occlusion of images via computer graphics rendering. This method is implemented on OpenGL to ensure its generalizability, and the implicit calculation is completed in a computer graphics rendering process by setting proper rendering conditions by adopting depth testing and stencil testing. Furthermore, the erosion operation of the image process is employed to distinguish whether contact or collision. Lastly, an example for a gear box assembly confirms the effectiveness of this method.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\2M7KUFYD\Jia et al. - 2023 - Image-assisted collision detection for calculation.pdf}
}

@inproceedings{jiapan2010,
  title = {Efficient Nearest-Neighbor Computation for {{GPU-based}} Motion Planning},
  booktitle = {2010 {{IEEE}}/{{RSJ International Conference}} on {{Intelligent Robots}} and {{Systems}}},
  author = {{Jia Pan} and Lauterbach, C and Manocha, D},
  year = {2010},
  month = oct,
  pages = {2243--2248},
  publisher = {IEEE},
  address = {Taipei},
  doi = {10.1109/IROS.2010.5651449},
  url = {http://ieeexplore.ieee.org/document/5651449/},
  urldate = {2024-02-07},
  abstract = {We present a novel k-nearest neighbor search algorithm (KNNS) for proximity computation in motion planning algorithm that exploits the computational capabilities of many-core GPUs. Our approach uses locality sensitive hashing and cuckoo hashing to construct an efficient KNNS algorithm that has linear space and time complexity and exploits the multiple cores and data parallelism effectively. In practice, we see magnitude improvement in speed and scalability over prior GPU-based KNNS algorithm. On some benchmarks, our KNNS algorithm improves the performance of overall planner by 20 - 40 times for CPUbased planner and up to 2 times for GPU-based planner.},
  isbn = {978-1-4244-6674-0},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\L8VVUGAN\Jia Pan et al. - 2010 - Efficient nearest-neighbor computation for GPU-bas.pdf}
}

@article{jimenez2001,
  title = {{{3D}} Collision Detection: A Survey},
  shorttitle = {{{3D}} Collision Detection},
  author = {Jim{\'e}nez, P. and Thomas, F. and Torras, C.},
  year = {2001},
  month = apr,
  journal = {Computers \& Graphics},
  volume = {25},
  number = {2},
  pages = {269--285},
  issn = {00978493},
  doi = {10.1111/j.1467-8659.2006.00917.x},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0097849300001308},
  urldate = {2024-01-10},
  abstract = {Many applications in Computer Graphics require fast and robust 3D collision detection algorithms. These algorithms can be grouped into four approaches: space\vphantom\{\}time volume intersection, swept volume interference, multiple interference detection and trajectory parameterization. While some approaches are linked to a particular object representation scheme (e.g., space\vphantom\{\}time volume intersection is particularly suited to a CSG representation), others do not. The multiple interference detection approach has been the most widely used under a variety of sampling strategies, reducing the collision detection problem to multiple calls to static interference tests. In most cases, these tests boil down to detecting intersections between simple geometric entities, such as spheres, boxes aligned with the coordinate axes, or polygons and segments. The computational cost of a collision detection algorithm depends not only on the complexity of the basic interference test used, but also on the number of times this test is applied. Therefore, it is crucial to apply this test only at those instants and places where a collision can truly occur. Several strategies have been developed to this end: (1) to "nd a lower time bound for the "rst collision, (2) to reduce the pairs of primitives within objects susceptible of interfering, and (3) to cut down the number of object pairs to be considered for interference. These strategies rely on distance computation algorithms, hierarchical object representations, orientation-based pruning criteria, and space partitioning schemes. This paper tries to provide a comprehensive survey of all these techniques from a uni"ed viewpoint, so that well-known algorithms are presented as particular instances of general approaches. 2001 Elsevier Science Ltd. All rights reserved.},
  langid = {english},
  keywords = {HCDHas particle collison Detection,reviewed,SR},
  file = {J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\4QVWH4M8\\Jiménez et al. - 2001 - 3D collision detection a survey.pdf;J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\6FENAXZI\\3D collision detection a survey.txt}
}

@article{jimenez2006,
  title = {Particle {{Oriented Collision Detection}} Using {{Simplicial Coverings}} and {{Tetra}}-{{Trees}}},
  author = {Jim{\'e}nez, Juan Jos{\'e} and Feito, Francisco R. and Segura, Rafael J. and Og{\'a}yar, Carlos J.},
  year = {2006},
  month = mar,
  journal = {Computer Graphics Forum},
  volume = {25},
  number = {1},
  pages = {53--68},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2006.00917.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2006.00917.x},
  urldate = {2024-01-10},
  abstract = {Collision detection (CD) among complex objects in motion is an open question because of its algorithmic complexity. In this paper, we present a CD algorithm between a particle and a complex rigid solid. In order to represent solids, we use a simplicial covering scheme by means of 3-simplices. With this representation system, complex polyhedra and closed triangle meshes can be represented and used in CD with a particle. A particle can be represented by a point, where the real dimensions of the particle are not important. This CD algorithm has been extended for a particle represented by a sphere which in turn represents an approximation to the particle dimensions. In order to efficiently classify the particles and the simplices of the polyhedra covering, we use a new hierarchical data structure named tetra-tree that decomposes the space into tetra-cones. These algorithms also use bounding volumes and temporal and geometric coherence, as well as incremental calculations in order to determine the collision in an efficient and exact way. Because of the use of sign operations with signed volumes and barycentric coordinates, we conclude that operations carried out using this method are more robust and efficient than those used in classic algorithms.},
  langid = {english},
  keywords = {HCDHas particle collison Detection,PLYpolydisperse,reviewed,VGvoxel grids,VRONVoroni},
  file = {J:\sandboxR9\Thesis\zotero\storage\PBHLB4ZY\Jiménez et al. - 2006 - Particle Oriented Collision Detection using Simpli.pdf}
}

@article{joselliNeighborhoodGridNovel2015,
  title = {Neighborhood Grid: {{A}} Novel Data Structure for Fluids Animation with {{GPU}} Computing},
  shorttitle = {Neighborhood Grid},
  author = {Joselli, Mark and Junior, Jos{\'e} Ricardo Da S. and Clua, Esteban W. and Montenegro, Anselmo and Lage, Marcos and Pagliosa, Paulo},
  year = {2015},
  month = jan,
  journal = {Journal of Parallel and Distributed Computing},
  volume = {75},
  pages = {20--28},
  issn = {07437315},
  doi = {10.1016/j.jpdc.2014.10.009},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0743731514002020},
  urldate = {2024-02-15},
  abstract = {This paper introduces a novel and efficient data structure, called neighborhood grid, capable of supporting large number of particle based elements on GPUs (graphics processing units), and is used for optimizing fluid animation with the use of GPU computing. The presented fluid simulation approach is based on SPH (smoothed particle hydrodynamics) and uses a unique algorithm for the neighborhood gathering. The brute force approach to neighborhood gathering of n particles has complexity O(n2), since it involves proximity queries of all pairs of fluid particles in order to compute the relevant mutual interactions. Usually, the algorithm is optimized by using spatial data structures which subdivide the environment in cells and then classify the particles among the cells based on their position, which is not efficient when a large number of particles are grouped in the same cell. Instead of using such approach, this work presents a novel and efficient data structure that maintains the particles into another form of proximity data structure, called neighborhood grid. In this structure, each cell contains only one particle and does not directly represent a discrete spatial subdivision. The neighborhood grid does process an approximate spatial neighborhood of the particles, yielding promising results for real time fluid animation, with results that goes up to 9 times speedup, when compared to traditional GPU approaches, and up to 100 times when compared against CPU implementations.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\R8ALBWL5\Joselli et al. - 2015 - Neighborhood grid A novel data structure for flui.pdf}
}

@phdthesis{kalms2015,
  title = {High-Performance Particle Simulation Using {{CUDA}}},
  author = {Kalms, Mikael and Strzodka, Robert and Ragnemalm, Ingemar and Mouragunusamy, Purani},
  year = {2015},
  month = jun,
  address = {Department of Electrical Engineering},
  url = {https://liu.diva-portal.org/smash/get/diva2:816727/FULLTEXT01.pdf},
  abstract = {Over the past 15 years, modern PC graphics cards (GPUs) have changed from being pure graphics accelerators into parallel computing platforms. Several new parallel programming languages have emerged, including NVIDIA's parallel programming language for GPUs (CUDA). This report explores two related problems in parallel: How well-suited is CUDA for implementing algorithms that utilize non-trivial data struc- tures? And, how does one develop a complex algorithm that uses a CUDA system efficiently? A guide for how to implement complex algorithms in CUDA is pre- sented. Simulation of a dense 2D particle system is chosen as the prob- lem domain for algorithm optimization. Two algorithmic optimization strategies are presented which reduce the computational workload when simulating the particle system. The strategies can either be used indepen- dently, or combined for slightly improved results. Finally, the resulting implementations are benchmarked against a simpler implementation on a normal PC processor (CPU) as well as a simpler GPU-algorithm. A simple GPU solution is shown to run at least 10 times faster than a simple CPU solution. An improved GPU solution can then yield another 10 times speed-up, while sacrificing some accuracy.},
  langid = {english},
  school = {Linkoping University},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\GGWJ3GZP\Kalms et al. - High-performance particle simulation using CUDA.pdf}
}

@article{karabassi-1999,
  title = {Intersection Test for Collision Detection in Particle Systems},
  author = {Karabassi, Evaggelia-Aggeliki and {$\Pi\alpha\pi\alpha\ddot{\iota}\omega\acute{\alpha}\nu\nuo\upsilon$}, {$\Gamma\varepsilon\acute{\omega}\rho\gamma\iotao\varsigma$} and Theoharis, Theoharis and Boehm, Alexander},
  year = {1999},
  month = jan,
  journal = {Journal Of Graphics, Gpu, And Game Tools},
  volume = {4},
  number = {1},
  pages = {25--37},
  doi = {10.1080/10867651.1999.10487499},
  url = {https://doi.org/10.1080/10867651.1999.10487499}
}

@book{keller2013,
  title = {Facing the {{Multicore-Challenge III}}},
  editor = {Keller, Rainer and Kramer, David and Weiss, Jan-Philipp and Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
  year = {2013},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  volume = {7686},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-35893-7},
  url = {http://link.springer.com/10.1007/978-3-642-35893-7},
  urldate = {2024-01-09},
  isbn = {978-3-642-35892-0 978-3-642-35893-7},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\FI5WT4W2\Keller et al. - 2013 - Facing the Multicore-Challenge III.pdf}
}

@article{kessenich,
  title = {The {{OpenGL Shading Language}}},
  author = {Kessenich, John},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\EMJG76G5\Kessenich - The OpenGL Shading Language.pdf}
}

@inproceedings{kim2002,
  title = {Fast Penetration Depth Computation for Physically-Based Animation},
  booktitle = {Proceedings of the 2002 {{ACM SIGGRAPH}}/{{Eurographics}} Symposium on {{Computer}} Animation},
  author = {Kim, Young J. and Otaduy, Miguel A. and Lin, Ming C. and Manocha, Dinesh},
  year = {2002},
  month = jul,
  pages = {23--31},
  publisher = {ACM},
  address = {San Antonio Texas},
  doi = {10.1145/545261.545266},
  url = {https://dl.acm.org/doi/10.1145/545261.545266},
  urldate = {2024-02-22},
  abstract = {We present a novel and fast algorithm to compute penetration depth (PD) between two polyhedral models for physically-based animation. Given two overlapping polyhedra, it computes the minimal translation distance to separate them using a combination of objectspace and image-space techniques. The algorithm computes pairwise Minkowski sums of decomposed convex pieces and performs a closest point query using rasterization hardware. It uses bounding volume hierarchies, object-space and image-space culling algorithms to further accelerate the computation and refines the estimated PD in a hierarchical manner. We demonstrate its application to contact response computation and a time-stepping method for dynamic simulation.},
  isbn = {978-1-58113-573-2},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\5GBI53DT\Kim et al. - 2002 - Fast penetration depth computation for physically-.pdf}
}

@article{Kim2006a,
  title = {Exploiting {{Graphics Hardware}} for {{Haptic Authoring}}},
  author = {Kim, Minho and Punak, Sukitti and Cendan, Juan and Kurenov, Sergei and Peters, J{\"o}rg},
  abstract = {Real-time, plausible visual and haptic feedback of deformable objects without shape artifacts is important in surgical simulation environments to avoid distracting the user. We propose to leverage highly parallel stream processing, available on the newest generation graphics cards, to increase the level of both visual and haptic fidelity. We implemented this as part of the University of Florida's haptic surgical authoring kit.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\5RL5VEIM\Kim et al. - Exploiting Graphics Hardware for Haptic Authoring.pdf}
}

@article{kipfer2004,
  title = {{{UberFlow}}: {{A GPU-Based Particle Engine}}},
  author = {Kipfer, Peter and Segal, Mark and Westermann, R{\"u}diger},
  year = {2004},
  journal = {Graphics Hardware},
  doi = {10.1145/1186223.1186253},
  abstract = {We present a system for real-time animation and rendering of large particle sets using GPU computation and memory objects in OpenGL. Memory objects can be used both as containers for geometry data stored on the graphics card and as render targets, providing an effective means for the manipulation and rendering of particle data on the GPU.},
  langid = {english},
  keywords = {GPUGPU Based,MATRIX,REFSRefs reviewd,reviewed,SSBO. Super Buffer (Shader Storage Buffer Object},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\HNGVLRM7\Kipfer et al. - UberFlow A GPU-Based Particle Engine.pdf}
}

@incollection{knoll2019,
  title = {Efficient {{Particle Volume Splatting}} in a {{Ray Tracer}}},
  booktitle = {Ray {{Tracing Gems}}},
  author = {Knoll, Aaron and Morley, R. Keith and Wald, Ingo and Leaf, Nick and Messmer, Peter},
  editor = {Haines, Eric and {Akenine-M{\"o}ller}, Tomas},
  year = {2019},
  pages = {533--541},
  publisher = {Apress},
  address = {Berkeley, CA},
  doi = {10.1007/978-1-4842-4427-2_29},
  url = {http://link.springer.com/10.1007/978-1-4842-4427-2_29},
  urldate = {2024-02-11},
  abstract = {Rendering of particle data sets is a common problem in many domains including games, film, and scientific visualization. Conventionally, this has been accomplished using rasterization-based splatting methods, which scale linearly with respect to problem size. Given sufficiently low-cost ray traversal with logarithmic complexity, splatting within a ray tracing framework could scale better to larger geometry. In this chapter, we provide a method for efficiently rendering larger particle data, exploiting ray coherence and leveraging hardware-accelerated traversal on architectures such as the NVIDIA RTX 2080 Ti (Turing) GPUs with RT Cores technology.},
  isbn = {978-1-4842-4426-5 978-1-4842-4427-2},
  langid = {english},
  keywords = {done},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\RIZDH8U9\Knoll et al. - 2019 - Efficient Particle Volume Splatting in a Ray Trace.pdf}
}

@inproceedings{kolb2004,
  title = {Hardware-Based Simulation and Collision Detection for Large Particle Systems},
  booktitle = {Proceedings of the {{ACM SIGGRAPH}}/{{EUROGRAPHICS}} Conference on {{Graphics}} Hardware},
  author = {Kolb, A. and Latta, L. and {Rezk-Salama}, C.},
  year = {2004},
  month = aug,
  pages = {123--131},
  publisher = {ACM},
  address = {Grenoble France},
  doi = {10.1145/1058129.1058147},
  url = {https://dl.acm.org/doi/10.1145/1058129.1058147},
  urldate = {2024-01-16},
  abstract = {Particle systems have long been recognized as an essential building block for detail-rich and lively visual environments. Current implementations can handle up to 10,000 particles in real-time simulations and are mostly limited by the transfer of particle data from the main processor to the graphics hardware (GPU) for rendering.},
  isbn = {978-3-905673-15-9},
  langid = {english},
  keywords = {DMAP Distance Map,DPTDepth Buffer,ISMImage Space Methods,OCCOcclusion Culling,reviewed,STB Stencil Buffer,STL Stateless Particle System,TEXTexture as General Computing Space},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\TQPISU6J\\Kolb et al. - 2004 - Hardware-based simulation and collision detection .pdf;J\:\\sandboxR9\\Thesis\\zotero\\storage\\WZ7RGF7C\\Kolb et al. - 2004 - Hardware-based simulation and collision detection .pdf}
}

@article{korman,
  title = {Coherency {{Sensitive Hashing}}},
  author = {Korman, Simon and Avidan, Shai},
  abstract = {Coherency Sensitive Hashing (CSH) extends Locality Sensitivity Hashing (LSH) and PatchMatch to quickly find matching patches between two images. LSH relies on hashing, which maps similar patches to the same bin, in order to find matching patches. PatchMatch, on the other hand, relies on the observation that images are coherent, to propagate good matches to their neighbors, in the image plane. It uses random patch assignment to seed the initial matching. CSH relies on hashing to seed the initial patch matching and on image coherence to propagate good matches. In addition, hashing lets it propagate information between patches with similar appearance (i.e., map to the same bin). This way, information is propagated much faster because it can use similarity in appearance space or neighborhood in the image plane. As a result, CSH is at least three to four times faster than PatchMatch and more accurate, especially in textured regions, where reconstruction artifacts are most noticeable to the human eye. We verified CSH on a new, large scale, data set of 133 image pairs.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\4DHI8X32\Korman and Avidan - Coherency Sensitive Hashing.pdf}
}

@article{krayer2022,
  title = {Intersection {{Distance Field Collision}} for {{GPU}}},
  author = {Krayer, Bastian and G{\"o}rge, Rebekka and M{\"u}ller, Stefan},
  year = {2022},
  journal = {Pacific Graphics (2022)},
  pages = {6 pages},
  doi = {10.2312/PG.20221242},
  url = {https://diglib.eg.org/handle/10.2312/pg20221242},
  urldate = {2024-02-01},
  abstract = {We present a framework for finding collision points between objects represented by signed distance fields. Particles are used to sample the region where intersections can occur. The distance field representation is used to project the particles onto the surface of the intersection of both objects. From there information, such as collision normals and intersection depth can be extracted. This allows for handling various types of objects in a unified way. Due to the particle approach, the algorithm is well suited to the GPU.},
  copyright = {Creative Commons Attribution 4.0 International},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\NBI2MY5N\Krayer et al. - 2022 - Intersection Distance Field Collision for GPU.pdf}
}

@article{krijgsman2014,
  title = {Optimal Parameters for a Hierarchical Grid Data Structure for Contact Detection in Arbitrarily Polydisperse Particle Systems},
  author = {Krijgsman, Dinant and Ogarko, Vitaliy and Luding, Stefan},
  year = {2014},
  month = sep,
  journal = {Computational Particle Mechanics},
  volume = {1},
  number = {3},
  pages = {357--372},
  issn = {2196-4378, 2196-4386},
  doi = {10.1007/s40571-014-0020-9},
  url = {http://link.springer.com/10.1007/s40571-014-0020-9},
  urldate = {2024-02-22},
  abstract = {The objective of this paper is to find the optimum number of hierarchy levels and their cell sizes for contact detection algorithms based on a versatile hierarchical grid data structure, for polydisperse particle systems with arbitrary distribution of particle radii. These algorithms perform as fast as O(N ) for N particles, but the prefactor can be as large as N for a given system, depending on the algorithm parameters chosen, making a recipe for choosing these parameters necessary. We estimate theoretically the calculation time of two distinct algorithms for particle systems with various packing fractions, where the sizes of the particles are modelled by an arbitrary probability density function. We suggest several methods for choosing the number of hierarchy levels and the respective cell sizes, based on truncated power-law radii distributions with different exponents and widths. The theoretical estimations are then compared with simulation results for particle systems with up to one million particles. The proposed recipe for selecting the optimal hierarchical grid parameters allows to find contacts in arbitrarily polydisperse particle systems as fast as the commonly-used linked-cell method in purely monodisperse particle systems, i.e., extra work is avoided in presence of polydispersity. Furthermore, the contact detection time per particle even decreases slightly with increasing polydispersity or decreasing particle packing fraction.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\REGCVK9L\Krijgsman et al. - 2014 - Optimal parameters for a hierarchical grid data st.pdf}
}

@phdthesis{kroiss2009,
  title = {Collision {{Detection Using Hierarchical Grid Spatial Partitioning}} on the {{GPU}}},
  author = {Kroiss, Ryan R},
  year = {2009},
  address = {Madison},
  url = {https://scholar.colorado.edu/downloads/dz010q43m},
  langid = {english},
  school = {University of Wisconsin},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\DDA8CA3Y\Kroiss - Collision Detection Using Hierarchical Grid Spatia.pdf}
}

@article{kruger2005,
  title = {A {{Particle System}} for {{Interactive Visualization}} of {{3D Flows}}},
  author = {Kruger, J. and Kipfer, P. and Kondratieva, P. and Westermann, R.},
  year = {2005},
  month = nov,
  journal = {IEEE Transactions on Visualization and Computer Graphics},
  volume = {11},
  number = {6},
  pages = {744--756},
  issn = {1077-2626},
  doi = {10.1109/TVCG.2005.87},
  url = {http://ieeexplore.ieee.org/document/1512024/},
  urldate = {2024-02-07},
  abstract = {We present a particle system for interactive visualization of steady 3D flow fields on uniform grids. For the amount of particles we target, particle integration needs to be accelerated and the transfer of these sets for rendering must be avoided. To fulfill these requirements, we exploit features of recent graphics accelerators to advect particles in the graphics processing unit (GPU), saving particle positions in graphics memory, and then sending these positions through the GPU again to obtain images in the frame buffer. This approach allows for interactive streaming and rendering of millions of particles and it enables virtual exploration of high resolution fields in a way similar to real-world experiments. The ability to display the dynamics of large particle sets using visualization options like shaded points or oriented texture splats provides an effective means for visual flow analysis that is far beyond existing solutions. For each particle, flow quantities like vorticity magnitude and 2 are computed and displayed. Built upon a previously published GPU implementation of a sorting network, visibility sorting of transparent particles is implemented. To provide additional visual cues, the GPU constructs and displays visualization geometry like particle lines and stream ribbons.},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\LNJQEPPD\Kruger et al. - 2005 - A Particle System for Interactive Visualization of.pdf}
}

@article{kuznik2010,
  title = {{{LBM}} Based Flow Simulation Using {{GPU}} Computing Processor},
  author = {Kuznik, Fr{\'e}d{\'e}ric and Obrecht, Christian and Rusaouen, Gilles and Roux, Jean-Jacques},
  year = {2010},
  month = apr,
  journal = {Computers \& Mathematics with Applications},
  volume = {59},
  number = {7},
  pages = {2380--2392},
  issn = {08981221},
  doi = {10.1016/j.camwa.2009.08.052},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0898122109006361},
  urldate = {2024-01-09},
  abstract = {Graphics Processing Units (GPUs), originally developed for computer games, now provide computational power for scientific applications. In this paper, we develop a general purpose Lattice Boltzmann code that runs entirely on a single GPU. The results show that: (1) simple precision floating point arithmetic is sufficient for LBM computation in comparison to double precision; (2) the implementation of LBM on GPUs allows us to achieve up to about one billion lattice update per second using single precision floating point; (3) GPUs provide an inexpensive alternative to large clusters for fluid dynamics prediction.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\QSEM3QCW\Kuznik et al. - 2010 - LBM based flow simulation using GPU computing proc.pdf}
}

@article{landry2016,
  title = {Combining Discrete and Continuous Optimization to Solve Kinodynamic Motion Planning Problems},
  author = {Landry, Chantal and Welz, Wolfgang and Gerdts, Matthias},
  year = {2016},
  month = sep,
  journal = {Optimization and Engineering},
  volume = {17},
  number = {3},
  pages = {533--556},
  issn = {1389-4420, 1573-2924},
  doi = {10.1007/s11081-015-9291-0},
  url = {http://link.springer.com/10.1007/s11081-015-9291-0},
  urldate = {2024-01-09},
  abstract = {A new approach to find the fastest trajectory of a robot avoiding obstacles, is presented. This optimal trajectory is the solution of an optimal control problem with kinematic and dynamic constraints. The approach involves a direct method based on the time discretization of the control variable. We mainly focus on the computation of a good initial trajectory. Our method combines discrete and continuous optimization concepts. First, a graph search algorithm is used to determine a list of intermediate points. Then, an optimal control problem of small size is defined to find the fastest trajectory that passes through the vicinity of the intermediate points. The resulting solution is the initial trajectory. Our approach is applied to a single body mobile robot. The numerical results show the quality of the initial trajectory and its low computational cost.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\4R9XGTX7\Landry et al. - 2016 - Combining discrete and continuous optimization to .pdf}
}

@misc{latta2004,
  title = {Building a {{Million Particle System}}},
  author = {Latta, Lutz},
  year = {2004},
  publisher = {Massive Development GmbH},
  url = {https://www.semanticscholar.org/paper/Building-a-Million-Particle-System-Latta/140c40f5f75f191a78e808588987600179ed0625},
  abstract = {Particle systems have long been recognized as an essential building block for detail-rich and lively visual environments. Current implementations can handle up to 10,000 particles in realtime simulations and are mostly limited by the transfer of particle data from the main processor to the graphics hardware (GPU) for rendering.},
  langid = {english},
  keywords = {CPUGPU CPU GPU communication,DBSDistance-based sorting,done,FR Fill Rate,FS Fragment Shader,HCDHas particle collison Detection,MATRIX,PSAParallel Sorting Algoritm,REFSRefs reviewd,reviewed,STL Stateless Particle System,TEXTexture as General Computing Space},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\2NJGJRDP\Latta - Building a Million Particle System.pdf}
}

@article{lauterbach2009,
  title = {Fast {{BVH Construction}} on {{GPUs}}},
  author = {Lauterbach, C. and Garland, M. and Sengupta, S. and Luebke, D. and Manocha, D.},
  year = {2009},
  month = apr,
  journal = {Computer Graphics Forum},
  volume = {28},
  number = {2},
  pages = {375--384},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2009.01377.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2009.01377.x},
  urldate = {2024-01-10},
  abstract = {We present two novel parallel algorithms for rapidly constructing bounding volume hierarchies on manycore GPUs. The first uses a linear ordering derived from spatial Morton codes to build hierarchies extremely quickly and with high parallel scalability. The second is a top-down approach that uses the surface area heuristic (SAH) to build hierarchies optimized for fast ray tracing. Both algorithms are combined into a hybrid algorithm that removes existing bottlenecks in the algorithm for GPU construction performance and scalability leading to significantly decreased build time. The resulting hierarchies are close in to optimized SAH hierarchies, but the construction process is substantially faster, leading to a significant net benefit when both construction and traversal cost are accounted for. Our preliminary results show that current GPU architectures can compete with CPU implementations of hierarchy construction running on multicore systems. In practice, we can construct hierarchies of models with up to several million triangles and use them for fast ray tracing or other applications.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\TU52H8PA\Lauterbach et al. - 2009 - Fast BVH Construction on GPUs.pdf}
}

@article{lauterbach2010,
  title = {{{gProximity}}: {{Hierarchical GPU}}-based {{Operations}} for {{Collision}} and {{Distance Queries}}},
  shorttitle = {{{gProximity}}},
  author = {Lauterbach, C. and Mo, Q. and Manocha, D.},
  year = {2010},
  month = may,
  journal = {Computer Graphics Forum},
  volume = {29},
  number = {2},
  pages = {419--428},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2009.01611.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2009.01611.x},
  urldate = {2024-01-10},
  abstract = {We present novel parallel algorithms for collision detection and separation distance computation for rigid and deformable models that exploit the computational capabilities of many-core GPUs. Our approach uses thread and data parallelism to perform fast hierarchy construction, updating, and traversal using tight-fitting bounding volumes such as oriented bounding boxes (OBB) and rectangular swept spheres (RSS). We also describe efficient algorithms to compute a linear bounding volume hierarchy (LBVH) and update them using refitting methods. Moreover, we show that tight-fitting bounding volume hierarchies offer improved performance on GPU-like throughput architectures. We use our algorithms to perform discrete and continuous collision detection including self-collisions, as well as separation distance computation between non-overlapping models. In practice, our approach (gProximity) can perform these queries in a few milliseconds on a PC with NVIDIA GTX 285 card on models composed of tens or hundreds of thousands of triangles used in cloth simulation, surgical simulation, virtual prototyping and N-body simulation. Moreover, we observe more than an order of magnitude performance improvement over prior GPU-based algorithms.},
  langid = {english},
  keywords = {AIDAtomic Indexing,CCD Continuous Collision Detection,CDD Discrete Collision Detection,CUDA CUDA,LFQLock Free Queues,NBN-Body,reviewed,RSSRectangular swept spheres,WSWork stealing},
  file = {J:\sandboxR9\Thesis\zotero\storage\AD5L8YWT\Lauterbach et al. - 2010 - gProximity Hierarchical GPU‐based Operations for .pdf}
}

@misc{legrand,
  title = {Chapter 32. {{Broad-Phase Collision Detection}} with {\textbar} {{NVIDIA Developer}}},
  author = {Le Grand, Scott},
  year = {2007},
  url = {https://developer.nvidia.com/gpugems/gpugems3/part-v-physics-simulation/chapter-32-broad-phase-collision-detection-cuda},
  urldate = {2024-01-27},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\Q4NL3JGH\\_Chapter3_32_Broad_Phase_Collision_Detection_with_NVIDIA.pdf;J\:\\sandboxR9\\Thesis\\zotero\\storage\\MR9E2X4L\\chapter-32-broad-phase-collision-detection-cuda.html}
}

@article{Lengyel1990,
  title = {Real-Time Robot Motion Planning Using Rasterizing Computer Graphics Hardware},
  author = {Lengyel, Jed and Reichert, Mark and Donald, Bruce and Greenberg, Donald},
  year = {1990-09, 1990-9},
  journal = {ACM SIGGRAPH Computer Graphics},
  volume = {24},
  number = {4},
  pages = {327--335},
  publisher = {Association for Computing Machinery (ACM)},
  doi = {10.1145/97880.97915},
  file = {J:\sandboxR9\Thesis\zotero\storage\P4YPEFW7\_Real_Time_Robot_Motion_Planning_Using_Rasterizing_Computer_Graphics_Hardware.pdf}
}

@article{li2010,
  title = {Comparison Research on the Neighbor List Algorithms: {{Verlet}} Table and Linked-Cell},
  shorttitle = {Comparison Research on the Neighbor List Algorithms},
  author = {Li, Wan-Qing and Ying, Tang and Jian, Wan and Yu, Dong-Jin},
  year = {2010},
  month = oct,
  journal = {Computer Physics Communications},
  volume = {181},
  number = {10},
  pages = {1682--1686},
  issn = {00104655},
  doi = {10.1016/j.cpc.2010.06.005},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465510001827},
  urldate = {2024-02-21},
  abstract = {A Discrete Element Method (DEM) simulation program of gravity driven granular collapse is developed to compare the performance of Verlet table and linked-cell algorithms. Focusing on the simulation efficiency, the two neighbor list algorithms' parameters are discussed such as search radius Rs, cell edge Lc , updating interval time step (UPTime) and the number of particles in simulation system N. The results show that appropriate parameters will improve the simulation efficiency, while the inappropriate parameters will debase the simulation efficiency, even leading to the simulation system crash. The results and discussions presented in this paper will be useful not only for parameters adjustment of DEM but also for Molecular Dynamics (MD) simulations. It will be beneficial to improving the simulation efficiency, especially for the researchers who intend to carry out DEM or MD simulation.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\RQ3JGBID\Li et al. - 2010 - Comparison research on the neighbor list algorithm.pdf}
}

@phdthesis{lin1993,
  title = {Effcient {{Collision Detection}} for {{Animation}} and {{Robotics}}},
  author = {Lin, Ming C},
  year = {1993},
  abstract = {We present effcient algorithms for collision detection and contact determination},
  langid = {english},
  school = {University of California at Berkeley},
  file = {J:\sandboxR9\Thesis\zotero\storage\QZ8VTF2A\Lin - E cient Collision Detection for Animation and Robo.pdf}
}

@incollection{lin1997,
  title = {Efficient {{Algorithms}} for {{Interference Detection}} in {{Dynamic Environments}}},
  booktitle = {Product {{Modeling}} for {{Computer Integrated Design}} and {{Manufacture}}},
  author = {Lin, Ming C. and Manocha, Dinesh and Cohen, Jon and Gottschalk, Stefan},
  editor = {Pratt, M. J. and Sriram, R. D. and Wozny, M. J.},
  year = {1997},
  pages = {334--346},
  publisher = {Springer US},
  address = {Boston, MA},
  doi = {10.1007/978-0-387-35187-2_28},
  url = {http://link.springer.com/10.1007/978-0-387-35187-2_28},
  urldate = {2024-02-14},
  abstract = {Fast and accurate interference detection between general polygonal models is a fundamental problem in GAD/Manufacturing and virtual prototyping. Most earlier algorithms are either restricted to a class of models, such as convex polytopes, or are not fast enough for practical applications. We outline and demonstrate an efficient algorithm for solving the interference detection problem between general polygonal models in simulated environments. The algorithm combines hierarchical representation with incremental frame to frame computation to rapidly detect collisions. For each pair of objects, it localizes the interference regions on their convex hulls and computes exact contacts using hierarchies of oriented bounding boxes. It has been implemented and we highlight its application to virtual prototyping and simulation-based design applications.},
  isbn = {978-1-5041-2887-2 978-0-387-35187-2},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\8ZNSS5S7\Lin et al. - 1997 - Efficient Algorithms for Interference Detection in.pdf}
}

@incollection{lin2017,
  title = {39 {{Collisions}} and {{Proximity Queries}}},
  booktitle = {Handbook of {{Discrete}} and {{Computational Geometry}}},
  author = {Lin, Ming C and Manocha, Dinesh and Kim, Young J},
  year = {2017},
  url = {https://www.taylorfrancis.com/chapters/edit/10.1201/9781315119601-39/collision-proximity-queries-ming-lin-dinesh-manocha-young-kim},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\8DUN8HJZ\Lin et al. - 2017 - 39 COLLISION AND PROXIMITY QUERIES.pdf}
}

@inproceedings{liu2009,
  title = {An {{Approach}} for {{Parallel Interest Matching}} in {{Distributed Virtual Environments}}},
  booktitle = {2009 13th {{IEEE}}/{{ACM International Symposium}} on {{Distributed Simulation}} and {{Real Time Applications}}},
  author = {Liu, Elvis S. and Theodoropoulos, Georgios K.},
  year = {2009},
  pages = {57--65},
  publisher = {IEEE},
  address = {Singapore, Singapore},
  doi = {10.1109/DS-RT.2009.34},
  url = {http://ieeexplore.ieee.org/document/5361781/},
  urldate = {2024-02-23},
  abstract = {Interest management is essential for real-time large-scale distributed virtual environments (DVEs) which seeks to filter irrelevant messages on the network. Many existing interest management schemes such as HLA DDM focus on providing precise message filtering mechanisms. However, this leads to a second problem: the computational overhead of the interest matching process. If the CPU cost of interest matching is too high, it would be unsuitable for real-time applications such as multiplayer online games for which runtime performance is important. This paper evaluates the performance of existing interest matching algorithms and proposes a new algorithm based on parallel processing. The new algorithm is expected to have better computational efficiency than existing algorithms and maintain the same accuracy of message filtering as them. Experimental evidence shows that our approach works well in practice.},
  isbn = {978-0-7695-3868-6},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\58GX4ZHS\Liu and Theodoropoulos - 2009 - An Approach for Parallel Interest Matching in Dist.pdf}
}

@inproceedings{Liu2010,
  title = {Real-Time Collision Culling of a Million Bodies on Graphics Processing Units},
  booktitle = {{{ACM SIGGRAPH Asia}} 2010 Papers on - {{SIGGRAPH ASIA}} '10},
  author = {Liu, Fuchang and Harada, Takahiro and Lee, Youngeun and Kim, Young J.},
  year = {2010},
  pages = {1},
  publisher = {ACM Press},
  address = {Seoul, South Korea},
  doi = {10.1145/1882262.1866180},
  url = {http://portal.acm.org/citation.cfm?doid=1882262.1866180},
  urldate = {2024-01-09},
  abstract = {We cull collisions between very large numbers of moving bodies using graphics processing units (GPUs). To perform massively parallel sweep-and-prune (SaP), we mitigate the great density of intervals along the axis of sweep by using principal component analysis to choose the best sweep direction, together with spatial subdivisions to further reduce the number of false positive overlaps. Our algorithm implemented entirely on GPUs using the CUDA framework can handle a million moving objects at interactive rates. As application of our algorithm, we demonstrate the real-time simulation of very large numbers of particles and rigid-body dynamics.},
  isbn = {978-1-4503-0439-9},
  langid = {english},
  keywords = {CLLG Culling,CUDA CUDA,done,GPUGPU Based,HCDHas particle collison Detection,ITRRInteractive Rates,MATRIX,MPS Moving Particle semi-implicit (MPS),REFSRefs reviewd,reviewed,SAPSweep and Prune,Sp,SSDIVSpatial Subdivision},
  file = {J:\sandboxR9\Thesis\zotero\storage\LEVVBQEA\Liu et al. - 2010 - Real-time collision culling of a million bodies on.pdf}
}

@article{liu2023,
  title = {A Novel Implicit Meshless Particle Method: {{NURBS-based}} Particle Hydrodynamics ({{NBPH}})},
  shorttitle = {A Novel Implicit Meshless Particle Method},
  author = {Liu, Ce and Li, Baotong and Liu, Qingfang and Hong, Jun and Li, Kaitai},
  year = {2023},
  month = mar,
  journal = {Computer Methods in Applied Mechanics and Engineering},
  volume = {406},
  pages = {115895},
  issn = {00457825},
  doi = {10.1016/j.cma.2023.115895},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S004578252300018X},
  urldate = {2024-01-09},
  abstract = {In this work, a new strong form-based implicit meshless particle method, NURBS based Particle Hydrodynamics (NBPH) is proposed. The kernel approximation is replaced by NURBS basis function interpolation. Thus, the calculation of physical field function relies on NURBS basis function-based interpolation, rather than weighted contributions from neighboring particles. Pseudo particles and real particles are configured in the algorithm to accomplish the physical field solution and geometry description. And the gradient operators and Laplacian operators are evaluated based on the partial derivatives of the NURBS basis functions combined with control variables. The update of the physical field functions is completed by an implicit time integration without pre-setting more constraints or intermediate intervention. Generally, the number of pseudo particles is less than the number of real particles, and the value of this difference is related to the order of NURBS basis functions. In addition, surface tension is achieved by cohesion and surface area minimization, tensile instability is solved by shifting particles. Based on the good performance of NBPH in solving numerical simulations of transient conduction and several incompressible flows, it is demonstrated that NBPH is a feasible meshless method. The proposed NBPH scheme provides an alternative computer method for nonlinear transient analysis, such as transient heat transfer and incompressible flow simulation in engineering.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\XQP43DAX\Liu et al. - 2023 - A novel implicit meshless particle method NURBS-b.pdf}
}

@article{LiuSPH2010,
  title = {Smoothed {{Particle Hydrodynamics}} ({{SPH}}): An {{Overview}} and {{Recent Developments}}},
  shorttitle = {Smoothed {{Particle Hydrodynamics}} ({{SPH}})},
  author = {Liu, M. B. and Liu, G. R.},
  year = {2010},
  month = mar,
  journal = {Archives of Computational Methods in Engineering},
  volume = {17},
  number = {1},
  pages = {25--76},
  issn = {1134-3060, 1886-1784},
  doi = {10.1007/s11831-010-9040-7},
  url = {http://link.springer.com/10.1007/s11831-010-9040-7},
  urldate = {2024-01-10},
  abstract = {Smoothed particle hydrodynamics (SPH) is a meshfree particle method based on Lagrangian formulation, and has been widely applied to different areas in engineering and science. This paper presents an overview on the SPH method and its recent developments, including (1) the need for meshfree particle methods, and advantages of SPH, (2) approximation schemes of the conventional SPH method and numerical techniques for deriving SPH formulations for partial differential equations such as the Navier-Stokes (N-S) equations, (3) the role of the smoothing kernel functions and a general approach to construct smoothing kernel functions, (4) kernel and particle consistency for the SPH method, and approaches for restoring particle consistency, (5) several important numerical aspects, and (6) some recent applications of SPH. The paper ends with some concluding remarks.},
  langid = {english},
  keywords = {CSMomputational solid mechanics,FDMfinite difference methods,FEMfinite element methods,FVMfinite volume methods,HVI High Velocity Impact,MFMMesh Free Methods,reviewed,SPH Smoothed Particle Hydro},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\MTSX4AZR\Liu and Liu - 2010 - Smoothed Particle Hydrodynamics (SPH) an Overview.pdf}
}

@book{ljungqvistMotionPlanningFeedback2020,
  title = {Motion Planning and Feedback Control Techniques with Applications to Long Tractor-Trailer Vehicles},
  author = {Ljungqvist, Oskar},
  year = {2020},
  month = may,
  series = {Link{\"o}ping {{Studies}} in {{Science}} and {{Technology}}. {{Dissertations}}},
  volume = {2070},
  publisher = {Link{\"o}ping University Electronic Press},
  address = {Link{\"o}ping},
  doi = {10.3384/diss.diva-165246},
  url = {http://urn.kb.se/resolve?urn=urn:nbn:se:liu:diva-165246},
  urldate = {2024-01-09},
  isbn = {978-91-7929-858-6},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\N4K2K577\Ljungqvist - 2020 - Motion planning and feedback control techniques wi.pdf}
}

@inproceedings{lo2011,
  title = {A {{Parallel Rectangle Intersection Algorithm}} on {{GPU}}+{{CPU}}},
  booktitle = {2011 11th {{IEEE}}/{{ACM International Symposium}} on {{Cluster}}, {{Cloud}} and {{Grid Computing}}},
  author = {Lo, Shih-Hsiang and Lee, Che-Rung and Chung, Yeh-Ching and Chung, I-Hsin},
  year = {2011},
  month = may,
  pages = {43--52},
  publisher = {IEEE},
  address = {Newport Beach, CA, USA},
  doi = {10.1109/CCGrid.2011.13},
  url = {http://ieeexplore.ieee.org/document/5948595/},
  urldate = {2024-01-27},
  abstract = {In this paper, we investigate efficient algorithms and implementations using GPU plus CPU to solve the rectangle intersection problem on a plane. The problem is to report all intersecting pairs of iso-oriented rectangles, whose parallelization on GPUs poses two major computational challenges: data partition and the massive output. The algorithm we presented is called PRI-GC, Parallel Rectangle Intersection algorithm on GPU+CPU, which consists of two phases: mapping and intersection-checking. In the mapping phase, rectangles are hashed into different subspaces (called cells) to reduce the unnecessary intersection checking for farapart rectangles. In the intersection-checking phase, pairs of rectangles within the same cell are examined in parallel, and the intersecting pairs of rectangles are reported. Several optimization techniques, including rectangles re-ordering, output data compressing/encoding, and the execution overlapping of GPU and CPU, are applied to enhance the performance. We had evaluated the performance of PRI-GC and the result shows over 30x speedup against two wellimplemented sequential algorithms on single CPU. The effectiveness of each optimization technique for this problem was evaluated as well. Several parameters, including different degrees of rectangle coverage, different block sizes, and different cell sizes, were also experimented to explore their influences on the performance of PRI-GC.},
  isbn = {978-1-4577-0129-0},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\JVD4I527\Lo et al. - 2011 - A Parallel Rectangle Intersection Algorithm on GPU.pdf}
}

@article{lo2013,
  title = {Optimizing {{Pairwise Box Intersection Checking}} on {{GPUs}} for {{Large-Scale Simulations}}},
  author = {Lo, Shih-Hsiang and Lee, Che-Rung and Chung, I-Hsin and Chung, Yeh-Ching},
  year = {2013},
  month = jul,
  journal = {ACM Transactions on Modeling and Computer Simulation},
  volume = {23},
  number = {3},
  pages = {1--22},
  issn = {1049-3301, 1558-1195},
  doi = {10.1145/2499913.2499918},
  url = {https://dl.acm.org/doi/10.1145/2499913.2499918},
  urldate = {2024-01-27},
  abstract = {Box intersection checking is a common task used in many large-scale simulations. Traditional methods cannot provide fast box intersection checking with large-scale datasets. This article presents a parallel algorithm to perform Pairwise Box Intersection checking on Graphics processing units (PBIG). The PBIG algorithm consists of three phases: planning, mapping and checking. The planning phase partitions the space into small cells, the sizes of which are determined to optimize performance. The mapping phase maps the boxes into the cells. The checking phase examines the box intersections in the same cell. Several performance optimizations, including load-balancing, output data compression/encoding, and pipelined execution, are presented for the PBIG algorithm. The experimental results show that the PBIG algorithm can process large-scale datasets and outperforms three well-performing algorithms.},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\H4N5HF2J\Lo et al. - 2013 - Optimizing Pairwise Box Intersection Checking on G.pdf}
}

@article{lubbe2020a,
  title = {Analysis of Parallel Spatial Partitioning Algorithms for {{GPU}} Based {{DEM}}},
  author = {Lubbe, Retief and Xu, Wen-Jie and Wilke, Daniel N. and Pizette, Patrick and Govender, Nicolin},
  year = {2020},
  month = sep,
  journal = {Computers and Geotechnics},
  volume = {125},
  pages = {103708},
  issn = {0266352X},
  doi = {10.1016/j.compgeo.2020.103708},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0266352X20302718},
  urldate = {2024-02-15},
  abstract = {The capability of solving a geotechnical discrete element method (DEM) applications is determined by the complexity of the simulation and its computational requirements. Collision detection algorithms are fundamental to resolve the mechanical collisions between millions of particles efficiently. These algorithms are a bottleneck for many DEM applications resulting in excessive memory usage or poor computational performance. In particular, for GPU based DEM, there are many factors for a user to consider when deciding on an algorithm. This study discusses a set of diverse classes of geotechnical problems and the impact of algorithm choice. Four factors were considered: i) the world domain size, number of particles and particle density, ii) polydispersity in size, iii) the time evolution and iv) the particle shape. This study shows that for spherical particles, the choice of broad-phase collision detection algorithm has the most impact on computational performance. The computational cost for convex polyhedral particles is dominated by the selection of the particles' bounding volumes and their intersection tests over the selection of the broad-phase collision detection algorithm. On average for convex polyhedral particles, the broad-phase occupies at most 1.3\% of the total runtime, while the narrow-phase collision detection and collision response require more than 87\% of the runtime. A combination of bounding spheres and axis-aligned bounding boxes for use as bounding volumes of particles showed the best performance reducing the computational cost by 20\%. This study serves as a guide for further research in the field of GPU based DEM collision detection and the application in geotechnics.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\K86P5UGI\Lubbe et al. - 2020 - Analysis of parallel spatial partitioning algorith.pdf}
}

@article{Luitjens2014,
  title = {Faster {{Parallel Reductions}} on {{Kepler}}},
  author = {Luitjens, Justin},
  year = {2014},
  month = feb,
  journal = {NVidia Developer Simulation/Modeling/Design},
  series = {{{NVidia Developer Blog}},},
  url = {https://developer.nvidia.com/blog/faster-parallel-reductions-kepler/},
  urldate = {2024-02-24},
  abstract = {Parallel reduction is a common building block for many parallel algorithms. A presentation from 2007 by Mark Harris provided a detailed strategy for implementing parallel reductions on GPUs{\dots}},
  langid = {american},
  file = {J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\SMQE7XVW\\2014 - Faster Parallel Reductions on Kepler.pdf;J\:\\RCCDLibrary\\ThesisLibrary\\zotero\\storage\\KIQ9CVK6\\faster-parallel-reductions-kepler.html}
}

@article{luo2015,
  title = {A Particle Method for Two-phase Flows with Large Density Difference},
  author = {Luo, Min and Koh, Cheng-Gee and Gao, Minmin and Bai, Wei},
  year = {2015},
  month = feb,
  journal = {International Journal for Numerical Methods in Engineering},
  volume = {103},
  number = {4},
  pages = {235--255},
  doi = {10.1002/nme.4884},
  url = {https://doi.org/10.1002/nme.4884},
  keywords = {CPMConsistent Particle Method,ELGMElement Free Galerkin Method,HCDHas particle collison Detection,ISPHIncompressible Smoothed Particle Hydrodynamics,PFEParticle Finite Element Method,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\XKB7Z2HB\Luo et al. - 2015 - A particle method for two‐phase flows with large d.pdf}
}

@inproceedings{luque2005,
  title = {Broad-Phase Collision Detection Using Semi-Adjusting {{BSP-trees}}},
  booktitle = {Proceedings of the 2005 Symposium on {{Interactive 3D}} Graphics and Games},
  author = {Luque, Rodrigo G. and Comba, Jo{\~a}o L. D. and Freitas, Carla M. D. S.},
  year = {2005},
  month = apr,
  pages = {179--186},
  publisher = {ACM},
  address = {Washington District of Columbia},
  doi = {10.1145/1053427.1053457},
  url = {https://dl.acm.org/doi/10.1145/1053427.1053457},
  urldate = {2024-01-27},
  abstract = {The broad-phase step of collision detection in scenes composed of n moving objects is a challenging problem because enumerating collision pairs has an inherent O(n2) complexity. Spatial data structures are designed to accelerate this process, but often their static nature makes it difficult to handle dynamic scenes. In this work we propose a new structure called Semi-Adjusting BSP-tree for representing scenes composed of thousands of moving objects. An scheduling algorithm evaluates locations where the BSP-tree becomes unbalanced, uses several strategies to alter cutting planes, and defer updates based on their re-structuring cost. We show that the tree does not require a complete re-structuring even in highly dynamic scenes, but adjusts itself while maintaining desirable balancing and height properties.},
  isbn = {978-1-59593-013-2},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\F6E4UE6F\Luque et al. - 2005 - Broad-phase collision detection using semi-adjusti.pdf}
}

@inproceedings{lustig2013,
  title = {Reducing {{GPU}} Offload Latency via Fine-Grained {{CPU-GPU}} Synchronization},
  booktitle = {2013 {{IEEE}} 19th {{International Symposium}} on {{High Performance Computer Architecture}} ({{HPCA}})},
  author = {Lustig, D. and Martonosi, M.},
  year = {2013},
  month = feb,
  pages = {354--365},
  publisher = {IEEE},
  address = {Shenzhen},
  doi = {10.1109/HPCA.2013.6522332},
  url = {http://ieeexplore.ieee.org/document/6522332/},
  urldate = {2024-01-10},
  abstract = {GPUs are seeing increasingly widespread use for general purpose computation due to their excellent performance for highly-parallel, throughput-oriented applications. For many workloads, however, the performance benefits of offloading are hindered by the large and unpredictable overheads of launching GPU kernels and of transferring data between CPU and GPU.},
  isbn = {978-1-4673-5587-2 978-1-4673-5585-8 978-1-4673-5586-5},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZSNR49ME\Lustig and Martonosi - 2013 - Reducing GPU offload latency via fine-grained CPU-.pdf}
}

@article{man2014,
  title = {A {{Survey}} of {{Collision Detection}}},
  author = {Man, Ran Ran and Zhou, Dong Sheng and Zhang, Qiang},
  year = {2014},
  month = apr,
  journal = {Applied Mechanics and Materials},
  volume = {538},
  pages = {360--363},
  issn = {1662-7482},
  doi = {10.4028/www.scientific.net/AMM.538.360},
  url = {https://www.scientific.net/AMM.538.360},
  urldate = {2024-01-10},
  abstract = {The interference and collision detection problem among objects is widely studied in graphics, simulation, animation and virtual reality technologic. In this paper, we proceed from the main solution for collision detection, analyzed from graphic space, bounding volume hierarchies (BVH), Particle Swarm Optimization (PSO) and parallel algorithm, summarized the research situation about collision detection in recent years. At last, we give several suggestions to improve the efficiency and reliability of the collision detection algorithm.},
  langid = {english},
  keywords = {SURVSurvey},
  file = {J:\sandboxR9\Thesis\zotero\storage\LK3TI4L7\Man et al. - 2014 - A Survey of Collision Detection.pdf}
}

@article{maximova2006,
  title = {A {{Novel Algorithm}} for {{Non-Bonded-List Updating}} in {{Molecular Simulations}}},
  author = {Maximova, Tatiana and Keasar, Chen},
  year = {2006},
  month = jun,
  journal = {Journal of Computational Biology},
  volume = {13},
  number = {5},
  pages = {1041--1048},
  issn = {1066-5277, 1557-8666},
  doi = {10.1089/cmb.2006.13.1041},
  url = {http://www.liebertpub.com/doi/10.1089/cmb.2006.13.1041},
  urldate = {2024-02-01},
  abstract = {Simulations of molecular systems typically handle interactions within non-bonded pairs. Generating and updating a list of these pairs can be the most time-consuming part of energy calculations for large systems. Thus, efficient non-bonded list processing can speed up the energy calculations significantly. While the asymptotic complexity of current algorithms (namely O(N), where N is the number of particles) is probably the lowest possible, a wide space for optimization is still left. This article offers a heuristic extension to the previously suggested grid based algorithms. We show that, when the average particle movements are slow, simulation time can be reduced considerably. The proposed algorithm has been implemented in the DistanceMatrix class of the molecular modeling package MESHI. MESHI is freely available at {$<$}www.cs.bgu.ac.il/{$\sim$}meshi{$>$}.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\R7RHKQXM\Maximova and Keasar - 2006 - A Novel Algorithm for Non-Bonded-List Updating in .pdf}
}

@article{maxwell2012,
  title = {Computer Simulations of Particle--Bubble Interactions and Particle Sliding Using {{Discrete Element Method}}},
  author = {Maxwell, R. and Ata, S. and Wanless, E.J. and {Moreno-Atanasio}, R.},
  year = {2012},
  month = sep,
  journal = {Journal of Colloid and Interface Science},
  volume = {381},
  number = {1},
  pages = {1--10},
  issn = {00219797},
  doi = {10.1016/j.jcis.2012.05.021},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0021979712005371},
  urldate = {2024-01-27},
  abstract = {Three dimensional Discrete Element Method (DEM) computer simulations have been carried out to analyse the kinetics of collision of multiple particles against a stationary bubble and the sliding of the particles over the bubble surface. This is the first time that a computational analysis of the sliding time and particle packing arrangements of multiple particles on the surface of a bubble has been carried out.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\72R9MK7C\Maxwell et al. - 2012 - Computer simulations of particle–bubble interactio.pdf}
}

@article{mcallister,
  title = {The {{Design}} of an {{API}} for {{Particle Systems}}},
  author = {McAllister, David K},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\LEIF25RD\McAllister - The Design of an API for Particle Systems.pdf}
}

@article{mindlin1953,
  title = {Elastic {{Spheres}} in {{Contact Under Varying Oblique Forces}}},
  author = {Mindlin, R D and Deresiewicz, H},
  year = {1953},
  journal = {JOURNAL OF APPLIED MECHANICS},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\CQLKHFAK\Mindlin and Deresiewicz - 1953 - Elastic Spheres in Contact Under Varying Oblique F.pdf}
}

@article{mirtich1997,
  title = {Effcient {{Algorithms}} for {{Two-Phase Collision Detection}}},
  author = {Mirtich, Brian},
  year = {1997},
  abstract = {This article describes practical collision detection algorithms for robot motion planning. Attention is restricted to algorithms that handle rigid, polyhedral geometries. Both broad phase and narrow phase detection strategies are discussed. For the broad phase, an algorithm using axes-aligned bounding boxes and a hierarchical spatial hash table is described. For the narrow-phase, the Lin-Canny algorithm is presented. Alternatives to these algorithms are also discussed. Finally, the article describes a scheduling paradigm for managing collision checks that can further reduce computation time. Pointers to downloadable software are included.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZBUENK4T\Mirtich - 1997 - E cient Algorithms for Two-Phase Collision Detecti.pdf}
}

@article{MIttal2023,
  title = {Development of Three-Dimensional {{GPU DEM}} Code--Benchmarking, Validation, and Application in Mineral Processing},
  author = {Mittal, Aman and Mangadoddy, Narasimha and Banerjee, Raja},
  year = {2023},
  month = nov,
  journal = {Computational Particle Mechanics},
  volume = {10},
  number = {6},
  pages = {1533--1556},
  issn = {2196-4378, 2196-4386},
  doi = {10.1007/s40571-023-00571-4},
  url = {https://link.springer.com/10.1007/s40571-023-00571-4},
  urldate = {2024-03-16},
  abstract = {Laboratory-scale testing for particle dynamics is expensive and cumbersome; therefore, computational discrete element simulations (DEM) are a realistic option for aiding in the understanding of particle dynamics. GPUaccelerated simulation allows simulations to be conducted in a fraction of time by massively parallelizing compute-intensive elements of the calculations. The GPU's highly threaded nature makes it an excellent choice for DEM simulations. This work develops a GPU DEM code for mineral processing applications such as hoppers and tumbling mills. To validate the developed DEM code, it was compared with other DEM simulation data and experimental data for various aspects of tumbling mill and hopper flow. The developed code was used to examine the influence of three lifter profiles and mill speeds on the granular dynamics and power consumption of a laboratory-scale tumbling mill. It was observed that for mill speeds less than 75\% of the critical mill speed, the effect of various lifter profiles on particle dynamic behavior is minimal. This gives us the confidence to develop a significantly faster GPU-accelerated DEM code while maintaining reasonable accuracy at the microcontact level. Furthermore, the predictive capability of GPU-based DEM was demonstrated in an industrial-scale mill containing one million particles.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\UKV27TYQ\Mittal et al. - 2023 - Development of three-dimensional GPU DEM code–benc.pdf}
}

@article{monaghan2012,
  title = {Smoothed {{Particle Hydrodynamics}} and {{Its Diverse Applications}}},
  author = {Monaghan, J.J.},
  year = {2012},
  month = jan,
  journal = {Annual Review of Fluid Mechanics},
  volume = {44},
  number = {1},
  pages = {323--346},
  issn = {0066-4189, 1545-4479},
  doi = {10.1146/annurev-fluid-120710-101220},
  url = {https://www.annualreviews.org/doi/10.1146/annurev-fluid-120710-101220},
  urldate = {2024-01-16},
  abstract = {This review focuses on the applications of smoothed particle hydrodynamics (SPH) to incompressible or nearly incompressible flow. In the past 17 years, the range of applications has increased as researchers have realized the ability of SPH algorithms to handle complex physical problems. These include the disruption of free surfaces when a wave hits a rocky beach, multifluid problems that may involve the motion of rigid and elastic bodies, nonNewtonian fluids, virtual surgery, and chemical precipitation from fluids moving through fractured media. SPH provides a fascinating tool that has some of the properties of molecular dynamics while retaining the attributes of the macroscopic equations of continuum mechanics.},
  langid = {english},
  keywords = {reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\44YHVAUB\Monaghan - 2012 - Smoothed Particle Hydrodynamics and Its Diverse Ap.pdf}
}

@article{moore,
  title = {Collision {{Detection}} and {{Response}} for {{Computer Animation}}},
  author = {Moore, Matthew and Wilhelms, Jane},
  abstract = {When several objects are moved about by computer animarion, there is the chance that they will interpenetrate. This is often an undesired state, particularly if the animation is seeking to model a realistic world. Two issues are involved: detecting that a collision has occurred, and responding to it. The former is fundamentally a kinematic problem, involving the positional relationship of objects in the world. The latter is a dynamic problem, in that it involves predicting behavior according to physical laws. This paper discusses collision detection and response in general, presents two collision detection algorithms, describes modeling collisions of arbitrary bodies using springs, and presents an analytical collision response algorithm for articulated rigid bodies that conserves linear and angular momentum.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\5R3SCNWY\Moore and Wilhelms - Collision Detection and Response for Computer Anim.pdf}
}

@article{moorea,
  title = {An Intoductory Tutorial on Kd-Trees},
  author = {Moore, Andrew W},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\P22ZY6IK\Moore - An intoductory tutorial on kd-trees.pdf}
}

@book{morton1966computer,
  title = {A Computer Oriented Geodetic Data Base and a New Technique in File Sequencing},
  author = {Morton, G.M.},
  year = {1966},
  publisher = {International Business Machines Company},
  url = {https://books.google.com/books?id=9FFdHAAACAAJ},
  file = {J:\sandboxR9\Thesis\zotero\storage\WVYD9UDC\A computer oriented geodetic data base and a new technique in file sequencing.pdf}
}

@article{morvan2012,
  title = {Efficient {{Image}}-{{Based Proximity Queries}} with {{Object}}-{{Space Precision}}},
  author = {Morvan, T. and Reimers, M. and Samset, E.},
  year = {2012},
  month = feb,
  journal = {Computer Graphics Forum},
  volume = {31},
  number = {1},
  pages = {62--74},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2011.02084.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2011.02084.x},
  urldate = {2024-01-10},
  abstract = {We present an efficient algorithm for object-space proximity queries between multiple deformable triangular meshes. Our approach uses the rasterization capabilities of the GPU to produce an image-space representation of the vertices. Using this image-space representation, inter-object vertex-triangle distances and closest points lying under a user-defined threshold are computed in parallel by conservative rasterization of bounding primitives and sorted using atomic operations. We additionally introduce a similar technique to detect penetrating vertices. We show how mechanisms of modern GPUs such as mipmapping, Early-Z and Early-Stencil culling can optimize the performance of our method. Our algorithm is able to compute dense proximity information for complex scenes made of more than a hundred thousand triangles in real time, outperforming a CPU implementation based on bounding volume hierarchies by more than an order of magnitude.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\FDEYCWCI\Morvan et al. - 2012 - Efficient Image‐Based Proximity Queries with Objec.pdf}
}

@misc{msnoutwork,
  title = {{{AI Might Replace}} 90 {{Percent}} of {{Artist Jobs}} on {{Animated Films In}} the {{Next}} 3 Years},
  author = {Tripathi, Arin},
  journal = {Microsoft Start},
  url = {https://www.msn.com/en-us/news/technology/ai-might-replace-90-percent-of-artist-jobs-on-animated-films-in-the-next-3-years/ar-BB1iu4qx},
  urldate = {2024-02-23}
}

@article{muller,
  title = {Particle-{{Based Fluid Simulation}} for {{Interactive Applications}}},
  author = {M{\"u}ller, Matthias and Charypar, David and Gross, Markus},
  abstract = {Realistically animated fluids can add substantial realism to interactive applications such as virtual surgery simulators or computer games. In this paper we propose an interactive method based on Smoothed Particle Hydrodynamics (SPH) to simulate fluids with free surfaces. The method is an extension of the SPH-based technique by Desbrun to animate highly deformable bodies. We gear the method towards fluid simulation by deriving the force density fields directly from the Navier-Stokes equation and by adding a term to model surface tension effects. In contrast to Eulerian grid-based approaches, the particle-based approach makes mass conservation equations and convection terms dispensable which reduces the complexity of the simulation. In addition, the particles can directly be used to render the surface of the fluid. We propose methods to track and visualize the free surface using point splatting and marching cubes-based surface reconstruction. Our animation method is fast enough to be used in interactive systems and to allow for user interaction with models consisting of up to 5000 particles.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\A4ITN77B\Müller et al. - Particle-Based Fluid Simulation for Interactive Ap.pdf}
}

@article{muller2015,
  title = {Air Meshes for Robust Collision Handling},
  author = {M{\"u}ller, Matthias and Chentanez, Nuttapong and Kim, Tae-Yong and Macklin, Miles},
  year = {2015},
  month = jul,
  journal = {ACM Transactions on Graphics},
  volume = {34},
  number = {4},
  pages = {1--9},
  issn = {0730-0301, 1557-7368},
  doi = {10.1145/2766907},
  url = {https://dl.acm.org/doi/10.1145/2766907},
  urldate = {2024-01-09},
  abstract = {We propose a new method for both collision detection and collision response geared towards handling complex deformable objects in close contact. Our method does not miss collision events between time steps and solves the challenging problem of untangling automatically and robustly. It is conceptually simple and straight forward to parallelize due to the regularity of the algorithm.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\QPWRJYTP\Müller et al. - 2015 - Air meshes for robust collision handling.pdf}
}

@book{munjiza2012,
  title = {Computational Mechanics of Discontinua},
  author = {Munjiza, Antonio A.},
  year = {2012},
  series = {Wiley Series in Computational Mechanics},
  publisher = {Wiley},
  address = {Chichester, West Sussex, U.K.},
  url = {https://onlinelibrary.wiley.com/doi/book/10.1002/9781119971160},
  abstract = {Mechanics of Discontinua is the first book to comprehensively tackle both the theory ofthis rapidly developing topic and the applications that span a broad field of scientific and engineering disciplines, from traditional engineering to physics of particulates, nano-technology and micro-flows. Authored by a leading researcher who has been at the cutting edge of discontinua simulation developments over the last 15 years, the book is organized into four parts: introductory knowledge, solvers, methods and applications. In the first chapter a short revision of Continuum Mechanics together with ten},
  collaborator = {Knight, Earl E. and Rougier, Esteban},
  isbn = {978-1-283-27409-8},
  langid = {english},
  keywords = {Continuum mechanics,Mechanics Analytic}
}

@article{myszkowski,
  title = {Fast Collision Detection between Complex Solids Using Rasterizing Graphics Hardware},
  author = {Myszkowski, Karol and Okunev, Oleg G and Kunii, Tosiyasu L},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\EGYDTHW9\Myszkowski et al. - Fast collision detection between complex solids us.pdf}
}

@misc{NPHYSX,
  title = {Rigid {{Body Collision}} --- {{NVIDIA PhysX SDK}} 4.1 {{Documentation}}},
  author = {Nvidia},
  url = {https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyCollision.html},
  urldate = {2024-01-27},
  keywords = {HCDHas particle collison Detection,PHYSXNvidia phys X,reviewed},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\RVCXADCJ\RigidBodyCollision.html}
}

@misc{NSight2024,
  title = {Nsight {{Graphics}}},
  year = {2024},
  journal = {NVIDIA Developer},
  url = {https://developer.nvidia.com/nsight-graphics},
  urldate = {2024-07-04},
  abstract = {Profile, optimize, and debug graphics applications such as Direct3D, Vulkan, and more.},
  langid = {american},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\2NMYR62K\nsight-graphics.html}
}

@article{nyland2003,
  title = {Chapter 31. {{Fast N-Body Simulation}} with {{CUDA}}},
  author = {Nyland, Lars and Harris, Mark and Prins, Jan},
  year = {2003},
  journal = {GPU GEMS 3},
  url = {https://developer.nvidia.com/gpugems/gpugems3/part-v-physics-simulation/chapter-31-fast-n-body-simulation-cuda},
  langid = {english},
  keywords = {done,HCDHas particle collison Detection,MATRIX,REFSRefs reviewd,reviewed},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\H8Y53E9F\Nyland et al. - Chapter 31. Fast N-Body Simulation with CUDA.pdf}
}

@article{oat2009,
  title = {Efficient {{Spatial Binning}} on the {{GPU}}},
  author = {Oat, Christopher and Barczak, Joshua and Shopf, Jeremy},
  year = {2009},
  journal = {AMD Technical Report},
  url = {https://www.chrisoat.com/papers/EfficientSpatialBinning.pdf},
  abstract = {We present a new technique for sorting data into spatial bins or buckets using a graphics processing unit (GPU). Our method takes unsorted point data as input and scatters the points, in sorted order, into a set of bins. This is a key operation in the construction of spatial data structures, which are essential for applications such as particle simulation or collision detection. Our technique achieves better performance scaling than previous methods by exploiting geometry shaders to progressively trim the size of the working set. We also leverage predicated rendering functionality to allow early termination without CPU/GPU synchronization. Furthermore, unlike previous techniques, our method can guarantee sorted output without requiring sorted input. This allows our method to be used to implement a form of bucket sort using the GPU.},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\MU3CHKY6\Oat et al. - Efﬁcient Spatial Binning on the GPU.pdf}
}

@article{oconnor2021,
  title = {A {{Set}} of {{Benchmark Tests}} for {{Validation}} of {{3D Particle In Cell Methods}}},
  author = {O'Connor, S. and Crawford, Z. D. and Verboncoeur, J. and Lugisland, J. and Shanker, B.},
  year = {2021},
  month = may,
  journal = {IEEE Transactions on Plasma Science},
  volume = {49},
  number = {5},
  eprint = {2101.09299},
  primaryclass = {physics},
  pages = {1724--1731},
  issn = {0093-3813, 1939-9375},
  doi = {10.1109/TPS.2021.3072353},
  url = {http://arxiv.org/abs/2101.09299},
  urldate = {2024-01-09},
  abstract = {While the particle-in-cell (PIC) method is quite mature, verification and validation of both newly developed methods and individual codes has largely focused on an idiosyncratic choice of a few test cases. Many of these test cases involve either one- or two-dimensional simulations. This is either due to availability of (quasi) analytic solutions or historical reasons. Additionally, tests often focus on investigation of particular physics problems, such as particle emission or collisions, and do not necessarily study the combined impact of the suite of algorithms necessary for a full featured PIC code. As three dimensional (3D) codes become the norm, there is a lack of benchmarks test that can establish the validity of these codes; existing papers either do not delve into the details of the numerical experiment or provide other measurable numeric metrics (such as noise) that are outcomes of the simulation.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Physics - Computational Physics,Physics - Plasma Physics},
  file = {J:\sandboxR9\Thesis\zotero\storage\R6UTR4QW\O'Connor et al. - 2021 - A Set of Benchmark Tests for Validation of 3D Part.pdf}
}

@article{ogarko2012,
  title = {A Fast Multilevel Algorithm for Contact Detection of Arbitrarily Polydisperse Objects},
  author = {Ogarko, V. and Luding, S.},
  year = {2012},
  month = apr,
  journal = {Computer Physics Communications},
  volume = {183},
  number = {4},
  pages = {931--936},
  issn = {00104655},
  doi = {10.1016/j.cpc.2011.12.019},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465511004073},
  urldate = {2024-02-06},
  abstract = {An efficient algorithm for contact detection among many arbitrarily sized objects is developed. Objects are allocated to cells based on their location and size within a nested hierarchical cell space. The choice of optimal cell sizes and the number of hierarchies for best performance is not trivial in most cases. To overcome this challenge, a novel analytical method to determine the optimal hierarchical cell space for a given object size distribution is presented. With this, a decision can be made between using the classical Linked-Cell method and the contact detection algorithm presented. For polydisperse systems with size ratios up to 50, we achieved 220 times speed-up compared to the classical Linked-Cell method. For larger size ratios, even better speed-up is expected. The complexity of the algorithm is linear with the number of objects when the optimal hierarchical cell space is chosen. So that the problem of contact detection in polydisperse systems essentially is solved.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\SV9GAYSC\Ogarko and Luding - 2012 - A fast multilevel algorithm for contact detection .pdf}
}

@book{onate2011,
  title = {Particle-{{Based Methods}}: {{Fundamentals}} and {{Applications}}},
  shorttitle = {Particle-{{Based Methods}}},
  editor = {O{\~n}ate, Eugenio and Owen, Roger},
  year = {2011},
  series = {Computational {{Methods}} in {{Applied Sciences}}},
  volume = {25},
  publisher = {Springer Netherlands},
  address = {Dordrecht},
  doi = {10.1007/978-94-007-0735-1},
  url = {https://link.springer.com/10.1007/978-94-007-0735-1},
  urldate = {2024-01-09},
  isbn = {978-94-007-0734-4 978-94-007-0735-1},
  langid = {english},
  keywords = {CFP coupled field problems,DEM Discrete Element method,HCDHas particle collison Detection,PFEParticle Finite Element Method,reviewed,SURVSurvey},
  file = {J:\sandboxR9\Thesis\zotero\storage\U5BXQCXM\Oñate and Owen - 2011 - Particle-Based Methods Fundamentals and Applicati.pdf}
}

@misc{overvoorde2023,
  title = {Introduction - {{Vulkan Tutorial}}},
  author = {Overvoorde, Alexander},
  year = {2023},
  journal = {Vulkan Tutorial},
  url = {https://vulkan-tutorial.com/},
  urldate = {2024-07-04},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\ZRV984AN\vulkan-tutorial.com.html}
}

@article{owens2007,
  title = {A {{Survey}} of {{General}}-{{Purpose Computation}} on {{Graphics Hardware}}},
  author = {Owens, John D. and Luebke, David and Govindaraju, Naga and Harris, Mark and Kr{\"u}ger, Jens and Lefohn, Aaron E. and Purcell, Timothy J.},
  year = {2007},
  month = mar,
  journal = {Computer Graphics Forum},
  volume = {26},
  number = {1},
  pages = {80--113},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2007.01012.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2007.01012.x},
  urldate = {2024-01-16},
  abstract = {The rapid increase in the performance of graphics hardware, coupled with recent improvements in its programmability, have made graphics hardware a compelling platform for computationally demanding tasks in a wide variety of application domains. In this report, we describe, summarize, and analyze the latest research in mapping general-purpose computation to graphics hardware.},
  langid = {english},
  keywords = {SURVSurvey},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\WTWSXZEB\Owens et al. - 2007 - A Survey of General‐Purpose Computation on Graphic.pdf}
}

@article{owens2008,
  title = {{{GPU Computing}}},
  author = {Owens, J.D. and Houston, M. and Luebke, D. and Green, S. and Stone, J.E. and Phillips, J.C.},
  year = {2008},
  month = may,
  journal = {Proceedings of the IEEE},
  volume = {96},
  number = {5},
  pages = {879--899},
  issn = {0018-9219, 1558-2256},
  doi = {10.1109/JPROC.2008.917757},
  url = {http://ieeexplore.ieee.org/document/4490127/},
  urldate = {2024-01-11},
  abstract = {The graphics processing unit (GPU) has become an integral part of today's mainstream computing systems. Over the past six years, there has been a marked increase in the performance and capabilities of GPUs. The modern GPU is not only a powerful graphics engine but also a highly parallel programmable processor featuring peak arithmetic and memory bandwidth that substantially outpaces its CPU counterpart. The GPU's rapid increase in both programmability and capability has spawned a research community that has successfully mapped a broad range of computationally demanding, complex problems to the GPU. This effort in generalpurpose computing on the GPU, also known as GPU computing, has positioned the GPU as a compelling alternative to traditional microprocessors in high-performance computer systems of the future. We describe the background, hardware, and programming model for GPU computing, summarize the state of the art in tools and techniques, and present four GPU computing successes in game physics and computational biophysics that deliver order-of-magnitude performance gains over optimized CPU applications.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\BV96QJ7N\Owens et al. - 2008 - GPU Computing.pdf}
}

@article{pabst2010,
  title = {Fast and {{Scalable CPU}}/{{GPU Collision Detection}} for {{Rigid}} and {{Deformable Surfaces}}},
  author = {Pabst, Simon and Koch, Artur and Stra{\ss}er, Wolfgang},
  year = {2010},
  month = jul,
  journal = {Computer Graphics Forum},
  volume = {29},
  number = {5},
  pages = {1605--1612},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2010.01769.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2010.01769.x},
  urldate = {2024-01-16},
  abstract = {We present a new hybrid CPU/GPU collision detection technique for rigid and deformable objects based on spatial subdivision. Our approach efficiently exploits the massive computational capabilities of modern CPUs and GPUs commonly found in off-the-shelf computer systems. The algorithm is specifically tailored to be highly scalable on both the CPU and the GPU sides. We can compute discrete and continuous external and self-collisions of nonpenetrating rigid and deformable objects consisting of many tens of thousands of triangles in a few milliseconds on a modern PC. Our approach is orders of magnitude faster than earlier CPU-based approaches and up to twice as fast as the most recent GPU-based techniques.},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\GZHLQLY2\Pabst et al. - 2010 - Fast and Scalable CPUGPU Collision Detection for .pdf}
}

@incollection{pan2010,
  title = {{{GPU-Based Parallel Collision Detection}} for {{Real-Time Motion Planning}}},
  booktitle = {Algorithmic {{Foundations}} of {{Robotics IX}}},
  author = {Pan, Jia and Manocha, Dinesh},
  editor = {Siciliano, Bruno and Khatib, Oussama and Groen, Frans and Hsu, David and Isler, Volkan and Latombe, Jean-Claude and Lin, Ming C.},
  year = {2010},
  volume = {68},
  pages = {211--228},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-17452-0_13},
  url = {http://link.springer.com/10.1007/978-3-642-17452-0_13},
  urldate = {2024-01-10},
  abstract = {We present parallel algorithms to accelerate collision queries for samplebased motion planning. Our approach is designed for current many-core GPUs and exploits the data-parallelism and multi-threaded capabilities. In order to take advantage of high number of cores, we present a clustering scheme and collision-packet traversal to perform efficient collision queries on multiple configurations simultaneously. Furthermore, we present a hierarchical traversal scheme that performs workload balancing for high parallel efficiency. We have implemented our algorithms on commodity NVIDIA GPUs using CUDA and can perform 500, 000 collision queries/second on our benchmarks, which is 10X faster than prior GPU-based techniques. Moreover, we can compute collision-free paths for rigid and articulated models in less than 100 milliseconds for many benchmarks, almost 50-100X faster than current CPU-based planners.},
  isbn = {978-3-642-17451-3 978-3-642-17452-0},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\2THS6GLF\Pan and Manocha - 2010 - GPU-Based Parallel Collision Detection for Real-Ti.pdf}
}

@book{park2013,
  title = {Multimedia and {{Ubiquitous Engineering}}: {{MUE}} 2013},
  shorttitle = {Multimedia and {{Ubiquitous Engineering}}},
  editor = {Park, James J. and Ng, Joseph Kee-Yin and Jeong, Hwa-Young and Waluyo, Borgy},
  year = {2013},
  series = {Lecture {{Notes}} in {{Electrical Engineering}}},
  volume = {240},
  publisher = {Springer Netherlands},
  address = {Dordrecht},
  doi = {10.1007/978-94-007-6738-6},
  url = {https://link.springer.com/10.1007/978-94-007-6738-6},
  urldate = {2024-01-11},
  isbn = {978-94-007-6737-9 978-94-007-6738-6},
  langid = {english},
  keywords = {mapreduce},
  file = {J:\sandboxR9\Thesis\zotero\storage\6BL5638D\Park et al. - 2013 - Multimedia and Ubiquitous Engineering MUE 2013.pdf}
}

@article{peng2012,
  title = {A {{GPU}}-based {{Approach}} for {{Massive Model Rendering}} with {{Frame}}-to-{{Frame Coherence}}},
  author = {Peng, Chao and Cao, Yong},
  year = {2012},
  month = may,
  journal = {Computer Graphics Forum},
  volume = {31},
  number = {2pt2},
  pages = {393--402},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2012.03018.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2012.03018.x},
  urldate = {2024-01-09},
  abstract = {Rendering massive 3D models in real-time has long been recognized as a very challenging problem because of the limited computational power and memory space available in a workstation. Most existing rendering techniques, especially level of detail (LOD) processing, have suffered from their sequential execution natures. We present a GPU-based approach which enables interactive rendering of large 3D models with hundreds of millions of triangles. Our work contributes to the massive rendering research in two ways. First, we present a simple and efficient mesh simplification algorithm towards GPU architecture. Second, we propose a novel GPU out-of-core approach that adopts a frame-to-frame coherence scheme in order to minimize the high communication cost between CPU and GPU. Our results show that the parallel algorithm of mesh simplification and the GPU out-of-core approach significantly improve the overall rendering performance.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\UXLV3FVY\Peng and Cao - 2012 - A GPU‐based Approach for Massive Model Rendering w.pdf}
}

@article{peters,
  title = {Rounded Cell Collision Detection on the {{GPU}}.},
  author = {Peters, Jorg and Sherif, {\relax SA} and Bell, Jackie},
  abstract = {Index Terms---particle system, image space, collision detection, nearest neighbor, region of interest, GPU, GPGPU.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\YNPQ6FEI\Peters et al. - Rounded cell collision detection on the GPU..pdf}
}

@misc{ponginan2022,
  type = {{{EBook}}},
  title = {What Is the "{{Discrete Element Method}}" ?},
  author = {Ponginan, Rahul},
  year = {2022},
  address = {Altair},
  url = {https://altair.com/docs/default-source/resource-library/ebook_what_is_dem_theoretical_background_behind_the_discrete_element_method.pdf?sfvrsn=975cfcf1_3},
  urldate = {2024-02-07},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\V77Z544W\What_is_DEM_theoretical_background_behind_the_Discrete_Element_Method.pdf}
}

@article{potocek2022,
  title = {Fast {{Automatic Analytical Particle Analysis Using}} an {{AI Guided Smart Scan Strategy}}},
  author = {Potocek, Pavel and Peemen, Maurice and Freitag, Bert and M{\"u}ller, Philipp and Wieczorek, Thorsten},
  year = {2022},
  month = aug,
  journal = {Microscopy and Microanalysis},
  volume = {28},
  number = {S1},
  pages = {556--558},
  issn = {1435-8115, 1431-9276},
  doi = {10.1017/S1431927622002811},
  url = {https://academic.oup.com/mam/article/28/S1/556/6995752},
  urldate = {2024-01-09},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\H5ULFDUK\Potocek et al. - 2022 - Fast Automatic Analytical Particle Analysis Using .pdf}
}

@book{pradalier2011,
  title = {Robotics {{Research}}},
  editor = {Pradalier, C{\'e}dric and Siegwart, Roland and Hirzinger, Gerhard and Siciliano, Bruno and Khatib, Oussama and Groen, Frans},
  year = {2011},
  series = {Springer {{Tracts}} in {{Advanced Robotics}}},
  volume = {70},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-19457-3},
  url = {http://link.springer.com/10.1007/978-3-642-19457-3},
  urldate = {2024-01-27},
  isbn = {978-3-642-19456-6 978-3-642-19457-3},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\UZW2RJ6V\Pradalier et al. - 2011 - Robotics Research.pdf}
}

@inproceedings{prandini2011,
  title = {Air Traffic Complexity and the Interacting Particle System Method: {{An}} Integrated Approach for Collision Risk Estimation},
  shorttitle = {Air Traffic Complexity and the Interacting Particle System Method},
  booktitle = {Proceedings of the 2011 {{American Control Conference}}},
  author = {Prandini, Maria and Blom, Henk A. P. and Bakker, G. J.},
  year = {2011},
  month = jun,
  pages = {2154--2159},
  publisher = {IEEE},
  address = {San Francisco, CA},
  doi = {10.1109/ACC.2011.5991305},
  url = {http://ieeexplore.ieee.org/document/5991305/},
  urldate = {2024-01-27},
  abstract = {In this paper, we explore the possibility of using air traffic complexity metrics to accelerate the Interacting Particle System (IPS) method for collision risk estimation.},
  isbn = {978-1-4577-0081-1 978-1-4577-0080-4 978-1-4577-0079-8},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\PBQ22YFT\Prandini et al. - 2011 - Air traffic complexity and the interacting particl.pdf}
}

@inproceedings{purcell2005,
  title = {Photon Mapping on Programmable Graphics Hardware},
  booktitle = {{{ACM SIGGRAPH}} 2005 {{Courses}} on   - {{SIGGRAPH}} '05},
  author = {Purcell, Timothy J. and Donner, Craig and Cammarano, Mike and Jensen, Henrik Wann and Hanrahan, Pat},
  year = {2005},
  pages = {258},
  publisher = {ACM Press},
  address = {Los Angeles, California},
  doi = {10.1145/1198555.1198797},
  url = {http://portal.acm.org/citation.cfm?doid=1198555.1198797},
  urldate = {2024-01-26},
  abstract = {We present a modified photon mapping algorithm capable of running entirely on GPUs. Our implementation uses breadth-first photon tracing to distribute photons using the GPU. The photons are stored in a grid-based photon map that is constructed directly on the graphics hardware using one of two methods: the first method is a multipass technique that uses fragment programs to directly sort the photons into a compact grid. The second method uses a single rendering pass combining a vertex program and the stencil buffer to route photons to their respective grid cells, producing an approximate photon map. We also present an efficient method for locating the nearest photons in the grid, which makes it possible to compute an estimate of the radiance at any surface location in the scene. Finally, we describe a breadth-first stochastic ray tracer that uses the photon map to simulate full global illumination directly on the graphics hardware. Our implementation demonstrates that current graphics hardware is capable of fully simulating global illumination with progressive, interactive feedback to the user.},
  langid = {english},
  keywords = {GPUGPU Based,HCDHas particle collison Detection,KNNK-Nearest Neighbor,NNS Near Neighbor Search,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\KMIF9Z7C\Purcell et al. - 2005 - Photon mapping on programmable graphics hardware.pdf}
}

@article{quinlan2006,
  title = {Truncation Error in Mesh-free Particle Methods},
  author = {Quinlan, N. J. and Basa, M. and Lastiwka, M.},
  year = {2006},
  month = jun,
  journal = {International Journal for Numerical Methods in Engineering},
  volume = {66},
  number = {13},
  pages = {2064--2085},
  issn = {0029-5981, 1097-0207},
  doi = {10.1002/nme.1617},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/nme.1617},
  urldate = {2024-01-21},
  abstract = {A truncation error analysis has been developed for the approximation of spatial derivatives in smoothed particle hydrodynamics (SPH) and related first-order consistent methods such as the first-order form of the reproducing kernel particle method. Error is shown to depend on both the smoothing length h and the ratio of particle spacing to smoothing length, x/ h. For uniformly spaced particles in one dimension, analysis shows that as h is reduced while maintaining constant x/ h, error decays as h2 until a limiting discretization error is reached, which is independent of h. If x/ h is reduced while maintaining constant h (i.e. if the number of neighbours per particle is increased), error decreases at a rate which depends on the kernel function's smoothness. When particles are distributed nonuniformly, error can grow as h is reduced with constant x/ h. First-order consistent methods are shown to remove this divergent behaviour. Numerical experiments confirm the theoretical analysis for one dimension, and indicate that the main results are also true in three dimensions. This investigation highlights the complexity of error behaviour in SPH, and shows that the roles of both h and x/ h must be considered when choosing particle distributions and smoothing lengths. Copyright ᭧ 2005 John Wiley \& Sons, Ltd.},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\XL8UJN4R\Quinlan et al. - 2006 - Truncation error in mesh‐free particle methods.pdf}
}

@article{rafiev2018,
  title = {Speedup and {{Power Scaling Models}} for {{Heterogeneous Many-Core Systems}}},
  author = {Rafiev, Ashur and {Al-Hayanni}, Mohammed A. N. and Xia, Fei and Shafik, Rishad and Romanovsky, Alexander and Yakovlev, Alex},
  year = {2018},
  month = jul,
  journal = {IEEE Transactions on Multi-Scale Computing Systems},
  volume = {4},
  number = {3},
  pages = {436--449},
  issn = {2332-7766, 2372-207X},
  doi = {10.1109/TMSCS.2018.2791531},
  url = {https://ieeexplore.ieee.org/document/8255653/},
  urldate = {2024-01-10},
  abstract = {Traditional speedup models, such as Amdahl's law, Gustafson's, and Sun and Ni's, have helped the research community and industry better understand system performance capabilities and application parallelizability. As they mostly target homogeneous hardware platforms or limited forms of processor heterogeneity, these models do not cover newly emerging multi-core heterogeneous architectures. This paper reports on novel speedup and energy consumption models based on a more general representation of heterogeneity, referred to as the normal form heterogeneity, that supports a wide range of heterogeneous many-core architectures. The modelling method aims to predict system power efficiency and performance ranges, and facilitates research and development at the hardware and system software levels. The models were validated through extensive experimentation on the off-the-shelf big. LITTLE heterogeneous platform and a dual-GPU laptop, with an average error of 1 percent for speedup and of less than 6.5 percent for power dissipation. A quantitative efficiency analysis targeting the system load balancer on the Odroid XU3 platform was used to demonstrate the practical use of the method.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\YRRVYSRJ\Rafiev et al. - 2018 - Speedup and Power Scaling Models for Heterogeneous.pdf}
}

@article{rajamani2022,
  title = {Mist and Replication},
  author = {Rajamani, Sudha and Biondi, Elisa},
  year = {2022},
  month = may,
  journal = {Nature Physics},
  volume = {18},
  number = {5},
  pages = {480--481},
  issn = {1745-2473, 1745-2481},
  doi = {10.1038/s41567-022-01549-4},
  url = {https://www.nature.com/articles/s41567-022-01549-4},
  urldate = {2024-01-16},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\TLLEDEY2\Rajamani and Biondi - 2022 - Mist and replication.pdf}
}

@article{randles1996a,
  title = {Smoothed {{Particle Hydrodynamics}}: {{Some}} Recent Improvements and Applications},
  shorttitle = {Smoothed {{Particle Hydrodynamics}}},
  author = {Randles, P.W. and Libersky, L.D.},
  year = {1996},
  month = dec,
  journal = {Computer Methods in Applied Mechanics and Engineering},
  volume = {139},
  number = {1-4},
  pages = {375--408},
  issn = {00457825},
  url = {https://www.sciencedirect.com/science/article/abs/pii/S0045782596010900},
  urldate = {2024-01-16},
  abstract = {The Smoothed Particle Hydrodynamics (SPH) computing technique has features which make it highly attractive for simulating dynamic response of materials involving fracture and fragmentation. However, full exploitation of the method's potential has been hampered by some unresolved problems including stability and the lack of generalized boundary conditions. We address these difficulties and propose solutions. Continuum damage modeling of fracture is discussed at length with scalar and tensor formulations proposed and tested within SPH. Several recent applications involving fracture with predicted fragment patterns and mass distributions are compared with experiment.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\7PPVN79M\Randles and Libersky - 1996 - Smoothed Particle Hydrodynamics Some recent impro.pdf}
}

@misc{RAPID,
  type = {Edu},
  title = {{{RAPID}} - {{Robust}} and {{Accurate Polygon Interference Detection System}}},
  author = {Lin, Ming C},
  journal = {The University of North Carolina at Chapel Hill},
  url = {http://gamma.cs.unc.edu/OBB/},
  urldate = {2024-02-14},
  abstract = {g},
  file = {J:\sandboxR9\Thesis\zotero\storage\Z4V34WW7\OBB.html}
}

@article{ray2018,
  title = {Meshless Voronoi on the {{GPU}}},
  author = {Ray, Nicolas and Sokolov, Dmitry and Lefebvre, Sylvain and L{\'e}vy, Bruno},
  year = {2018},
  month = dec,
  journal = {ACM Transactions on Graphics},
  volume = {37},
  number = {6},
  pages = {1--12},
  issn = {0730-0301, 1557-7368},
  doi = {10.1145/3272127.3275092},
  url = {https://dl.acm.org/doi/10.1145/3272127.3275092},
  urldate = {2024-01-11},
  abstract = {We propose a GPU algorithm that computes a 3               D               Voronoi diagram. Our algorithm is tailored for applications that solely make use of the geometry of the Voronoi cells, such as Lloyd's relaxation used in meshing, or some numerical schemes used in fluid simulations and astrophysics. Since these applications only require the geometry of the Voronoi cells, they do not need the combinatorial mesh data structure computed by the classical algorithms (Bowyer-Watson). Thus, by exploiting the specific spatial distribution of the point-sets used in this type of applications, our algorithm computes each cell independently, in parallel, based on its nearest neighbors. In addition, we show how to compute integrals over the Voronoi cells by decomposing them on the fly into tetrahedra, without needing to compute any global combinatorial information. The advantages of our algorithm is that it is fast, very simple to implement, has constant memory usage per thread and does not need any synchronization primitive. These specificities make it particularly efficient on the GPU: it gains one order of magnitude as compared to the fastest state-of-the-art multi-core CPU implementations. To ease the reproducibility of our results, the full documented source code is included in the supplemental material.},
  langid = {english},
  keywords = {CGALThe CGAL library,PRCGCourse grained parallel,PRFGFine grained parallel,reviewed,VRONVoroni},
  file = {J:\sandboxR9\Thesis\zotero\storage\D6M4T2JM\Ray et al. - 2018 - Meshless voronoi on the GPU.pdf}
}

@article{reboux2012,
  title = {A Self-Organizing {{Lagrangian}} Particle Method for Adaptive-Resolution Advection--Diffusion Simulations},
  author = {Reboux, Sylvain and Schrader, Birte and Sbalzarini, Ivo F.},
  year = {2012},
  month = may,
  journal = {Journal of Computational Physics},
  volume = {231},
  number = {9},
  pages = {3623--3646},
  issn = {00219991},
  doi = {10.1016/j.jcp.2012.01.026},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0021999112000472},
  urldate = {2024-01-09},
  abstract = {We present a novel adaptive-resolution particle method for continuous parabolic problems. In this method, particles self-organize in order to adapt to local resolution requirements. This is achieved by pseudo forces that are designed so as to guarantee that the solution is always well sampled and that no holes or clusters develop in the particle distribution. The particle sizes are locally adapted to the length scale of the solution. Differential operators are consistently evaluated on the evolving set of irregularly distributed particles of varying sizes using discretization-corrected operators. The method does not rely on any global transforms or mapping functions. After presenting the method and its error analysis, we demonstrate its capabilities and limitations on a set of two- and three-dimensional benchmark problems. These include advection--diffusion, the Burgers equation, the Buckley--Leverett five-spot problem, and curvature-driven level-set surface refinement.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\R3DWZN4L\Reboux et al. - 2012 - A self-organizing Lagrangian particle method for a.pdf}
}

@article{reeves1983,
  title = {Introduction to Discrete Element Methods},
  author = {Luding, Stefan},
  year = {2008},
  journal = {ACM Transactions on Graphics},
  volume = {12},
  number = {7-8},
  pages = {785--826},
  doi = {10.1080/19648189.2008.9693050},
  url = {https://www.tandfonline.com/journals/tece20},
  langid = {english},
  keywords = {done,reviewed,stochastic,SURVSurvey},
  file = {J:\sandboxR9\Thesis\zotero\storage\G72K8EPD\Reeves - 1983 - Particle SystemsmA Technique for Modeling a Class .pdf}
}

@misc{RenderDoc2024,
  title = {{{RenderDoc}}},
  author = {Karlsson, Baldur},
  year = {2024},
  journal = {RenderDoc},
  url = {https://renderdoc.org/},
  urldate = {2024-07-04},
  copyright = {MIT Licened},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\63IGU7NI\renderdoc.org.html}
}

@article{reynolds1987,
  title = {Flocks, Herds and Schools: {{A}} Distributed Behavioral Model},
  author = {Reynolds, Craig W},
  abstract = {The aggregate motion of a flock of birds, a herd of land animals, or a school of fish is a beautiful and familiar part of the natural world. But this type of complex motion is rarely seen in computer animation. This paper explores an approach based on simulation as an alternative to scripting the paths of each bird individually. The simulated flock is an elaboration of a particle system, with the simulated birds being the particles. The aggregate motion of the simulated flock is created by a distributed behavioral model much like that at work in a natural flock; the birds choose their own course. Each simulated bird is implemented as an independent actor that navigates according to its local perception of the dynamic environment, the laws of simulated physics that rule its motion, and a set of behaviors programmed into it by the "animator." The aggregate motion of the simulated flock is the result of the dense interaction of the relatively simple behaviors of the individual simulated birds.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\CIEXUYNZ\Reynolds - Flocks, herds and schools A distributed behaviora.pdf}
}

@article{reynolds1987a,
  title = {Steering {{Behaviors For Autonomous Characters}}},
  author = {Reynolds, Craig W},
  year = {1987},
  journal = {ACM Computer Graphics},
  volume = {21},
  url = {http://www.red3d.com/cwr/papers/1999/gdc99steer.pdf},
  abstract = {This paper presents solutions for one requirement of autonomous characters in animation and games: the ability to navigate around their world in a life-like and improvisational manner. These ``steering behaviors'' are largely independent of the particulars of the character's means of locomotion. Combinations of steering behaviors can be used to achieve higher level goals (For example: get from here to there while avoiding obstacles, follow this corridor, join that group of characters...) This paper divides motion behavior into three levels. It will focus on the middle level of steering behaviors, briefly describe the lower level of locomotion, and touch lightly on the higher level of goal setting and strategy.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\HMU37TUD\Reynolds - Steering Behaviors For Autonomous Characters.pdf}
}

@article{rodriguez2016,
  title = {The Particle Finite Element Method ({{PFEM}}) in Thermo-mechanical Problems},
  author = {Rodr{\'i}guez, Juan Manuel Corchado and Carbonell, Josep Maria and Cante, Juan and Oliver, J.},
  year = {2016},
  month = jan,
  journal = {International Journal for Numerical Methods in Engineering},
  volume = {107},
  number = {9},
  pages = {733--785},
  doi = {10.1002/nme.5186},
  url = {https://doi.org/10.1002/nme.5186},
  keywords = {PFEParticle Finite Element Method,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\HIIXTWKR\Numerical Meth Engineering - 2015 - Rodriguez - The particle finite element method PFEM in thermo‐mechanical problems.pdf}
}

@article{romanenko2019,
  title = {High Performance Collisional {{PIC}} Plasma Simulation with Modern {{GPUs}}},
  author = {Romanenko, Alexey A and Snytnikov, Alexey V and Lazareva, Galina G},
  year = {2019},
  month = nov,
  journal = {Journal of Physics: Conference Series},
  volume = {1336},
  number = {1},
  pages = {012005},
  issn = {1742-6588, 1742-6596},
  doi = {10.1088/1742-6596/1336/1/012005},
  url = {https://iopscience.iop.org/article/10.1088/1742-6596/1336/1/012005},
  urldate = {2024-02-22},
  abstract = {GPU implementation of the collisional Particle-In-Cell plasma model is proposed. The goal of this model is the simulation of Plasma Enhanced Chemical Vapour Deposition (PECVD) reactors with glow discharge plasma and also for simulation of fusion plasma with sufficient role of collisions. Vlasov equation is being solved by the Particle-In-Cell (PIC) method. Collision are simulated with the null collision technique. The important difference from the collisionless approach is that major time is taken by collision evaluation and not by particle push.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\6AE767G2\Romanenko et al. - 2019 - High performance collisional PIC plasma simulation.pdf}
}

@article{rotenberg,
  title = {Collision {{Detection}}},
  author = {Rotenberg, Steve},
  langid = {english},
  keywords = {broad phase,continuous collision detection,discrete collision detection,mid phase,narrow phase,primitives},
  file = {J:\sandboxR9\Thesis\zotero\storage\VMX7MFJB\Rotenberg - Collision Detection.pdf}
}

@inproceedings{rubinstein2018,
  title = {Hardness of Approximate Nearest Neighbor Search},
  booktitle = {Proceedings of the 50th {{Annual ACM SIGACT Symposium}} on {{Theory}} of {{Computing}}},
  author = {Rubinstein, Aviad},
  year = {2018},
  month = jun,
  pages = {1260--1268},
  publisher = {ACM},
  address = {Los Angeles CA USA},
  doi = {10.1145/3188745.3188916},
  url = {https://dl.acm.org/doi/10.1145/3188745.3188916},
  urldate = {2024-01-27},
  abstract = {We prove conditional near-quadratic running time lower bounds for approximate Bichromatic Closest Pair with Euclidean, Manhattan, Hamming, or edit distance. Specifically, unless the Strong Exponential Time Hypothesis (SETH) is false, for every {$\delta$} {$>$} 0 there exists a constant {$\varepsilon$} {$>$} 0 such that computing a (1 + {$\varepsilon$})-approximation to the Bichromatic Closest Pair requires {\textohm} n2-{$\delta$} time. In particular, this implies a near-linear query time for Approximate Nearest Neighbor search with polynomial preprocessing time.},
  isbn = {978-1-4503-5559-9},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\D4GFMPN7\Rubinstein - 2018 - Hardness of approximate nearest neighbor search.pdf}
}

@article{rubio-largo2015,
  title = {Granular Gas of Ellipsoids: Analytical Collision Detection Implemented on {{GPUs}}},
  shorttitle = {Granular Gas of Ellipsoids},
  author = {{Rubio-Largo}, S. M. and Lind, P. G. and Maza, D. and Hidalgo, R. C.},
  year = {2015},
  month = jun,
  journal = {Computational Particle Mechanics},
  volume = {2},
  number = {2},
  pages = {127--138},
  issn = {2196-4378, 2196-4386},
  doi = {10.1007/s40571-015-0042-y},
  url = {http://link.springer.com/10.1007/s40571-015-0042-y},
  urldate = {2024-01-09},
  abstract = {We present a hybrid GPU--CPU implementation of an accurate discrete element model for a system of ellipsoids. The ellipsoids have three translational degrees of freedom, their rotational motion being described through quaternions and the contact interaction between two ellipsoids is described by a force which accounts for the elastic and dissipative interactions. Further we combine the exact derivation of contact points between ellipsoids (Wang et al. in Computing 72(1--2):235--246, 2004) with the advantages of the GPU-NVIDIA parallelization strategy (Owens et al. in Comput Graph Forum 26:80--113, 2007). This novelty makes the analytical algorithm computationally feasible when dealing with several thousands of particles. As a benchmark, we simulate a granular gas of frictionless ellipsoids identifying a classical homogeneous cooling state for ellipsoids. For low dissipative systems, the behavior of the granular temperature indicates that the cooling dynamics is governed by the elongation of the ellipsoids and the restitution coefficient. Our outcomes comply with the statistical mechanical laws and the results are in agreement with previous findings for hard ellipsoids (Bereolos et al. in J Chem Phys 99:6087, 1993; Villemot and Talbot in Granul Matter 14:91--97, 2012). Additionally, new insight is provided namely suggesting that the mean field description of the cooling dynamics of elongated particles is conditioned by the particle shape and the degree of energy equipartition.},
  langid = {english},
  keywords = {done,MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\TH62UWAR\Rubio-Largo et al. - 2015 - Granular gas of ellipsoids analytical collision d.pdf}
}

@article{salisbury2004,
  title = {Survey - {{Haptic}} Rendering: Introductory Concepts},
  shorttitle = {Survey - {{Haptic}} Rendering},
  author = {Salisbury, K. and Conti, F. and Barbagli, F.},
  year = {2004},
  month = mar,
  journal = {IEEE Computer Graphics and Applications},
  volume = {24},
  number = {2},
  pages = {24--32},
  issn = {0272-1716},
  doi = {10.1109/MCG.2004.1274058},
  url = {http://ieeexplore.ieee.org/document/1274058/},
  urldate = {2024-01-10},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\8Z863WFP\Salisbury et al. - 2004 - Survey - Haptic rendering introductory concepts.pdf}
}

@misc{schmidtke2022,
  title = {Robert-Schmidtke/{{gProximity}}},
  author = {Schmidtke, Robert},
  year = {2022},
  month = jun,
  url = {https://github.com/robert-schmidtke/gProximity/blob/master/gProximity:%20Hierarchical%20GPU-based%20Operations%20for%20Collision%20and%20Distance%20Queries.pdf},
  urldate = {2024-01-28}
}

@article{serpa2019,
  title = {Flexible {{Use}} of {{Temporal}} and {{Spatial Reasoning}} for {{Fast}} and {{Scalable CPU Broad}}-{{Phase Collision Detection Using KD}}-{{Trees}}},
  author = {Serpa, Ygor Rebou{\c c}as and Rodrigues, Maria Andr{\'e}ia Formico},
  year = {2019},
  month = feb,
  journal = {Computer Graphics Forum},
  volume = {38},
  number = {1},
  pages = {260--273},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/cgf.13529},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/cgf.13529},
  urldate = {2024-01-27},
  abstract = {Realistic computer simulations of physical elements such as rigid and deformable bodies, particles and fractures are commonplace in the modern world. In these simulations, the broad-phase collision detection plays an important role in ensuring that simulations can scale with the number of objects. In these applications, several degrees of motion coherency, distinct spatial distributions and different types of objects exist; however, few attempts have been made at a generally applicable solution for their broad phase. In this regard, this work presents a novel broad-phase collision detection algorithm based upon a hybrid SIMD optimized KD-Tree and sweep-and-prune, aimed at general applicability. Our solution is optimized for several objects distributions, degrees of motion coherence and varying object sizes. These features are made possible by an efficient and idempotent two-step tree optimization algorithm and by selectively enabling coherency optimizations. We have tested our solution under varying scenario setups and compared it to other solutions available in the literature and industry, up to a million simulated objects. The results show that our solution is competitive, with average performance values two to three times better than those achieved by other state-of-the-art AABB-based CPU solutions.},
  langid = {english},
  keywords = {KDTKD Tree,reviewed,SAPSweep and Prune},
  file = {J:\sandboxR9\Thesis\zotero\storage\FQT8UWRV\Serpa and Rodrigues - 2019 - Flexible Use of Temporal and Spatial Reasoning for.pdf}
}

@article{serpa2020,
  title = {Broadmark: {{A Testing Framework}} for {{Broad}}-{{Phase Collision Detection Algorithms}}},
  shorttitle = {Broadmark},
  author = {Serpa, Ygor Rebou{\c c}as and Rodrigues, Maria Andr{\'e}ia Formico},
  year = {2020},
  month = feb,
  journal = {Computer Graphics Forum},
  volume = {39},
  number = {1},
  pages = {436--449},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/cgf.13884},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/cgf.13884},
  urldate = {2024-01-10},
  abstract = {Research in the area of collision detection permeates most of the literature on simulations, interaction and agents planning, being commonly regarded as one of the main bottlenecks for large-scale systems. To this day, despite its importance, most subareas of collision detection lack a common ground to test and validate solutions, reference implementations and widely accepted benchmark suites. In this paper, we delve into the broad-phase of collision detection systems, providing both an open-source framework, named Broadmark, to test, compare and validate algorithms, and an in-deep analysis of the main techniques used so far to tackle the broad-phase problem. The technical challenges of building this framework from the software and hardware perspectives are also described. Within our framework, several original and state-of-the-art implementations of CPU and GPU algorithms are bundled, alongside three benchmark scenes to stress algorithms under several conditions. Furthermore, the system is designed to be easily extensible. We use our framework to bring out an extensive performance comparison among assembled solutions, detailing the current CPU and GPU state-of-the-art on a common ground. We believe that Broadmark encompasses the principal insights and tools to derive and evaluate novel algorithms, thus greatly facilitating discussion about successful broad-phase collision detection solutions.},
  langid = {english},
  keywords = {BNCH Benchmarking,BPHBroad phase process,BV Bounding Volume,HCDHas particle collison Detection,NPHNarrow phase process,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\XTHSIY2D\Serpa and Rodrigues - 2020 - Broadmark A Testing Framework for Broad‐Phase Col.pdf}
}

@inproceedings{shade1998,
  title = {Layered Depth Images},
  booktitle = {Proceedings of the 25th Annual Conference on {{Computer}} Graphics and Interactive Techniques  - {{SIGGRAPH}} '98},
  author = {Shade, Jonathan and Gortler, Steven and He, Li-wei and Szeliski, Richard},
  year = {1998},
  pages = {231--242},
  publisher = {ACM Press},
  address = {Not Known},
  doi = {10.1145/280814.280882},
  url = {http://portal.acm.org/citation.cfm?doid=280814.280882},
  urldate = {2024-01-10},
  abstract = {In this paper we present a set of efficient image based rendering methods capable of rendering multiple frames per second on a PC. The first method warps Sprites with Depth representing smooth surfaces without the gaps found in other techniques. A second method for more general scenes performs warping from an intermediate representation called a Layered Depth Image (LDI). An LDI is a view of the scene from a single input camera view, but with multiple pixels along each line of sight. The size of the representation grows only linearly with the observed depth complexity in the scene. Moreover, because the LDI data are represented in a single image coordinate system, McMillan's warp ordering algorithm can be successfully adapted. As a result, pixels are drawn in the output image in backto-front order. No z-buffer is required, so alpha-compositing can be done efficiently without depth sorting. This makes splatting an efficient solution to the resampling problem.},
  isbn = {978-0-89791-999-9},
  langid = {english},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\JZXMSMDI\\Shade et al. - 1998 - Layered depth images.pdf;J\:\\sandboxR9\\Thesis\\zotero\\storage\\KH2C2BU7\\Shade et al. - 1998 - Layered depth images.pdf}
}

@book{shakhnarovich2005,
  title = {Nearest-Neighbor Methods in Learning and Vision: Theory and Practice},
  shorttitle = {Nearest-Neighbor Methods in Learning and Vision},
  editor = {Shakhnarovich, Gregory and Darrell, Trevor and Indyk, Piotr},
  year = {2005},
  series = {Neural Information Processing Series},
  publisher = {MIT Press},
  address = {Cambridge, Mass},
  url = {https://ieeexplore.ieee.org/book/6267334},
  isbn = {978-0-262-19547-8},
  langid = {english},
  lccn = {QA278.2 .N43 2005},
  keywords = {ANAAlgoritm,BALLT Ball Trees,KDTKD Tree,METTMetric Tree,NNS Near Neighbor Search,reviewed,SURVSurvey},
  annotation = {OCLC: ocm61247438},
  file = {J:\sandboxR9\Thesis\zotero\storage\3REXR6VN\MIT Nearestneigbor.pdf}
}

@article{ShinyaMikio1991,
  title = {Interference Detection through Rasterization.},
  author = {Shinya Mikio, Forgue Marie-Claire},
  year = {1991},
  journal = {The Journal of Visualization and Computer Animation},
  volume = {2},
  pages = {132--134},
  file = {J:\sandboxR9\Thesis\zotero\storage\HCKBRDU8\_InterferenceDettectionthroughRasterization_shinyu.pdf}
}

@article{sibai2020,
  title = {Optimizing {{Particle Systems}} through {{CUDA-Assisted Multithreading}}},
  author = {Sibai, Fadi N. and Potvin, Andrew and Ngo, Steven},
  year = {2020},
  month = dec,
  journal = {WSEAS Transactions on Systems and Control},
  volume = {15},
  pages = {691--698},
  issn = {1991-8763},
  doi = {10.37394/23203.2020.15.69},
  url = {https://wseas.com/journals/sac/2020/b385103-024.pdf},
  urldate = {2024-01-09},
  abstract = {Particle systems present challenges that have warranted and attracted large amount of attention in both usage and optimization. The use of particle systems has driven complexity of simulation to greater needs of data size and accuracy. Optimization, thus, has become a moving target for researchers to reach. Studies show that multithreading has potential to make the simulation efficient while optimizing complex and data-intensive particle systems. The CUDA (Compute Unified Device Architecture) works with programming languages such as C/C++ and Python to make multithreaded parallel programming easier. This work serves to analyze particle systems using CUDA and provide an understanding about how various parameters such as the particle count and grid size influence the simulation performance. We improve the CUDA particles demo by Nvidia using our Python scripts and study the impact of particles and grids on execution time and throughput. Experimental results indicate that a required level of performance can be achieved by varying the number of particles, the size grids, and the orientation of grids as needed.},
  langid = {english},
  keywords = {CUDA CUDA,done,GRID Grid,PSWMParticle Swarm,reviewed,RKRunge-Kutta},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\V6M3D43Y\Sibai et al. - 2020 - Optimizing Particle Systems through CUDA-Assisted .pdf}
}

@article{sigurgeirsson2001,
  title = {Algorithms for {{Particle-Field Simulations}} with {{Collisions}}},
  author = {Sigurgeirsson, Hersir and Stuart, Andrew and Wan, Wing-Lok},
  year = {2001},
  month = sep,
  journal = {Journal of Computational Physics},
  volume = {172},
  number = {2},
  pages = {766--807},
  issn = {00219991},
  doi = {10.1006/jcph.2001.6858},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0021999101968585},
  urldate = {2024-02-15},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\8XGR49BP\Sigurgeirsson et al. - 2001 - Algorithms for Particle-Field Simulations with Col.pdf}
}

@article{sims1990,
  title = {Particle Animation and Rendering Using Data Parallel Computation},
  author = {Sims, Karl},
  year = {1990},
  journal = {ACM Computer Graphics},
  volume = {24},
  number = {4},
  pages = {405--413},
  doi = {10.1145/97880.97923},
  langid = {english},
  keywords = {CGAComputer Graphics Animation,done,GLYPGlyph,GPUGPU Based,HCDHas particle collison Detection,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\SKAYW58Y\Sims - 1990 - Particle animation and rendering using data parall.pdf}
}

@article{singh1995,
  title = {Load {{Balancing}} and {{Data Locality}} in {{Adaptive Hierarchical N-Body Methods}}: {{Barnes-Hut}}, {{Fast Multipole}}, and {{Radiosity}}},
  shorttitle = {Load {{Balancing}} and {{Data Locality}} in {{Adaptive Hierarchical N-Body Methods}}},
  author = {Singh, J.P. and Holt, C. and Totsuka, T. and Gupta, A. and Hennessy, J.},
  year = {1995},
  month = jun,
  journal = {Journal of Parallel and Distributed Computing},
  volume = {27},
  number = {2},
  pages = {118--141},
  issn = {07437315},
  doi = {10.1006/jpdc.1995.1077},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0743731585710775},
  urldate = {2024-02-24},
  abstract = {Hierarchical N-body methods, which are based on a fundamental insight into the nature of many physical processes, are increasingly being used to solve large-scale problems in a variety of scientific/engineering domains. Applications that use these methods are challenging to parallelize effectively, however, owing to their nonuniform, dynamically changing characteristics and their need for long-range communication.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\5I8ZBIWG\Singh et al. - 1995 - Load Balancing and Data Locality in Adaptive Hiera.pdf}
}

@phdthesis{soltani2021,
  title = {Collision Avoidance for Automated Vehicles Using Occupancy Grid Map and Belief Theory},
  author = {Soltani, Reza},
  year = {2021},
  langid = {english},
  school = {Purdue University},
  file = {J:\sandboxR9\Thesis\zotero\storage\WYLBYKPI\Soltani - COLLISION AVOIDANCE FOR AUTOMATED VEHICLES USING O.pdf}
}

@misc{StanfordAI,
  title = {{{CS348I}}},
  url = {http://cs348i.stanford.edu/},
  urldate = {2024-02-23},
  file = {J:\sandboxR9\Thesis\zotero\storage\N6K6XWJM\cs348i.stanford.edu.html}
}

@inproceedings{sud2006,
  title = {Interactive {{3D}} Distance Field Computation Using Linear Factorization},
  booktitle = {Proceedings of the 2006 Symposium on {{Interactive 3D}} Graphics and Games  - {{SI3D}} '06},
  author = {Sud, Avneesh and Govindaraju, Naga and Gayle, Russell and Manocha, Dinesh},
  year = {2006},
  pages = {117},
  publisher = {ACM Press},
  address = {Redwood City, California},
  doi = {10.1145/1111411.1111432},
  url = {http://portal.acm.org/citation.cfm?doid=1111411.1111432},
  urldate = {2024-01-09},
  abstract = {We present an interactive algorithm to compute discretized 3D Euclidean distance fields. Given a set of piecewise linear geometric primitives, our algorithm computes the distance field for each slice of a uniform spatial grid. We express the non-linear distance function of each primitive as a dot product of linear factors. The linear terms are efficiently computed using texture mapping hardware. We also improve the performance by using culling techniques that reduce the number of distance function evaluations using bounds on Voronoi regions of the primitives. Our algorithm involves no preprocessing and is able to handle complex deforming models at interactive rates. We have implemented our algorithm on a PC with NVIDIA GeForce 7800 GPU and applied it to models composed of thousands of triangles. We demonstrate its application to medial axis approximation and proximity computations between rigid and deformable models. In practice, our algorithm is more accurate and almost one order of magnitude faster as compared to previous distance computation algorithms that use graphics hardware.},
  isbn = {978-1-59593-295-2},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\YLXLM2B7\Sud et al. - 2006 - Interactive 3D distance field computation using li.pdf}
}

@techreport{sud2006a,
  title = {Fast Proximity Computation among Deformable Models Using Discrete {{Voronoi}} Diagrams},
  author = {Sud, Avneesh and Govindaraju, Naga and Gayle, Russell and Kabul, Ilknur and Manocha, Dinesh},
  year = {2006},
  address = {Dept of Computer Science},
  institution = {University of North Carolina at Chapel Hill},
  abstract = {We present novel algorithms to perform collision and distance queries among multiple deformable models in dynamic environments. These include inter-object queries between different objects as well as intra-object queries. We describe a unified approach to compute these queries based on N-body distance computation and use properties of the 2ndorder discrete Voronoi diagram to perform N-body culling. Our algorithms involve no preprocessing and also work well on models with changing topologies. We can perform all proximity queries among complex deformable models consisting of thousands of triangles in a fraction of a second on a high-end PC. Moreover, our Voronoi-based culling algorithm can improve the performance of separation distance and penetration queries by an order of magnitude.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZZGMVZE2\Sud et al. - Fast proximity computation among deformable models.pdf}
}

@article{sulaiman2011,
  title = {Continuous {{Collision Detection}} for {{Virtual Environments}}:},
  author = {Sulaiman, Hamzah Asyrani and Bade, Abdullah and Kinabalu, Kota},
  year = {2011},
  volume = {3},
  number = {1},
  abstract = {Continuous Collision Detection (CCD) has been widely accepted as the common tool to detect collision between dynamic collisions of rigid and deformable models, especially for use as an accurate collision method. Performing a computationally intensive technique for detecting between two configurations that focuses on accuracy always slows detection as compared to discrete collision detection (DCD). CCD algorithms focus on the motions toward objects regarding any interpolation as long as it can be detected before it can penetrate the object. While DCD requires backtracking after collision has been detected, CCD does not suffer the same problems as DCD. CCD also avoids the tunnelling problem that exists in DCD algorithms where penetration always occurs to the object (missed the collision). This paper will provide current and future research of CCD algorithms, which eventually will become the framework of our CCD algorithm technique for our research.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\BWMUR9YN\Sulaiman et al. - 2011 - Continuous Collision Detection for Virtual Environ.pdf}
}

@article{tan-2020,
  title = {{{OpenCollBench}} - Benchmarking of Collision Detection \&amp; Proximity Queries as a Web-Service},
  author = {Tan, Toni and Weller, Ren{\'e} and Zachmann, Gabriel},
  year = {2020},
  month = nov,
  journal = {Web3D '20, November 9--13, 2020, Virtual Event, Republic of Korea},
  doi = {10.1145/3424616.3424712},
  url = {https://doi.org/10.1145/3424616.3424712},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\5XIAJNDS\Tan et al. - 2020 - OpenCollBench - benchmarking of collision detectio.pdf}
}

@article{tan2020,
  title = {Automated Human Sperm Tracking Using Mean Shift - Collision Detection and Modified Covariance Matrix Method},
  author = {Tan, Weng Chun and Mat Isa, Nor Ashidi and Mohamed, Mahaneem},
  year = {2020},
  month = oct,
  journal = {Multimedia Tools and Applications},
  volume = {79},
  number = {39-40},
  pages = {28551--28585},
  issn = {1380-7501, 1573-7721},
  doi = {10.1007/s11042-020-09396-2},
  url = {https://link.springer.com/10.1007/s11042-020-09396-2},
  urldate = {2024-01-11},
  abstract = {In vitro fertilisation (IVF) is a popular technique in assisted reproductive technology. The success of IVF mainly depends on the selection of the correct sperm in human semen sample. Sperm tracking plays an important role in selecting the active-moving sperm. One of the major challenges in sperm tracking is the collision of sperm cases during tracking. To solve this issue, mean shift--collision detection and modified covariance matrix (MS--CDMCM) is proposed. Specifically, MS--CDMCM detects collision and generates a new covariance matrix based on the collision condition. Then, this new covariance matrix will form a new tracked region to continue the tracking process. Results show that the proposed method is a more accurate and robust tracking method than other state-of-the-art sperm tracking methods. The proposed method produces significantly low error values, such as MAE, MSE and RMSE, according to the quantitative analysis when compared with ground truth images. The proposed method is expected to be implemented in sperm motility assessment in the future.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\Q2QH98HK\Tan et al. - 2020 - Automated human sperm tracking using mean shift - .pdf}
}

@article{tang2014,
  title = {Fast and Exact Continuous Collision Detection with {{Bernstein}} Sign Classification},
  author = {Tang, Min and Tong, Ruofeng and Wang, Zhendong and Manocha, Dinesh},
  year = {2014},
  month = nov,
  journal = {ACM Transactions on Graphics},
  volume = {33},
  number = {6},
  pages = {1--8},
  issn = {0730-0301, 1557-7368},
  doi = {10.1145/2661229.2661237},
  url = {https://dl.acm.org/doi/10.1145/2661229.2661237},
  urldate = {2024-01-09},
  abstract = {We present fast algorithms to perform accurate CCD queries between triangulated models. Our formulation uses properties of the Bernstein basis and B{\'e}zier curves and reduces the problem to evaluating signs of polynomials. We present a geometrically exact CCD algorithm based on the exact geometric computation paradigm to perform reliable Boolean collision queries. Our algorithm is more than an order of magnitude faster than prior exact algorithms. We evaluate its performance for cloth and FEM simulations on CPUs and GPUs, and highlight the benefits.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\D8TE663K\Tang et al. - 2014 - Fast and exact continuous collision detection with.pdf}
}

@article{tavakkol2017,
  title = {Curvilinear Smoothed Particle Hydrodynamics},
  author = {Tavakkol, Sasan and Zarrati, Amir Reza and Khanpour, Mahdiyar},
  year = {2017},
  month = jan,
  journal = {International Journal for Numerical Methods in Fluids},
  volume = {83},
  number = {2},
  pages = {115--131},
  issn = {0271-2091, 1097-0363},
  doi = {10.1002/fld.4261},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/fld.4261},
  urldate = {2024-01-09},
  abstract = {We suggest a new set of equations to employ smoothed particle hydrodynamics (SPH) in a curvilinear space, and we refer to it as curvSPH. In classical SPH, the horizontal and vertical resolution of discretization is supposed to be equal for fluid particles. However, curvSPH makes the horizontal and vertical resolutions independent from each other. This is performed by transformation of physical space into an appropriate computational space with a different scale in horizontal and vertical directions. Solving a problem using SPH in a curvilinear space also provides capability to model curved boundaries as straight lines. In classical SPH, special care is needed to reach a uniform mass distribution along curved boundaries; however, producing uniform mass distribution along a line using curvSPH is straight forward. Different simulations, including simulation of a flip bucket are performed to demonstrate the applicability of the proposed method. Good agreement of results with experimental data and classical SPH confirms the capabilities of curvSPH. Copyright {\copyright} 2016 John Wiley \& Sons, Ltd.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\AK84J5UQ\Tavakkol et al. - 2017 - Curvilinear smoothed particle hydrodynamics.pdf}
}

@article{teschner2005,
  title = {Collision {{Detection}} for {{Deformable Objects}}},
  author = {Teschner, M. and Kimmerle, S. and Heidelberger, B. and Zachmann, G. and Raghupathi, L. and Fuhrmann, A. and Cani, M.-P. and Faure, F. and Magnenat-Thalmann, N. and Strasser, W. and Volino, P.},
  year = {2005},
  month = mar,
  journal = {Computer Graphics Forum},
  volume = {24},
  number = {1},
  pages = {61--81},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2005.00829.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2005.00829.x},
  urldate = {2024-01-10},
  abstract = {Interactive environments for dynamically deforming objects play an important role in surgery simulation and entertainment technology. These environments require fast deformable models and very efficient collision handling techniques. While collision detection for rigid bodies is well investigated, collision detection for deformable objects introduces additional challenging problems. This paper focuses on these aspects and summarizes recent research in the area of deformable collision detection. Various approaches based on bounding volume hierarchies, distance fields and spatial partitioning are discussed. In addition, image-space techniques and stochastic methods are considered. Applications in cloth modeling and surgical simulation are presented.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ESUWQXAD\Teschner et al. - 2005 - Collision Detection for Deformable Objects.pdf}
}

@book{tsutsui2013,
  title = {Massively {{Parallel Evolutionary Computation}} on {{GPGPUs}}},
  editor = {Tsutsui, Shigeyoshi and Collet, Pierre},
  year = {2013},
  series = {Natural {{Computing Series}}},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-37959-8},
  url = {https://link.springer.com/10.1007/978-3-642-37959-8},
  urldate = {2024-01-09},
  isbn = {978-3-642-37958-1 978-3-642-37959-8},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\Q2SHXDV4\Tsutsui and Collet - 2013 - Massively Parallel Evolutionary Computation on GPG.pdf}
}

@article{unterguggenberger2023,
  title = {Vulkan All the Way: {{Transitioning}} to a Modern Low-Level Graphics {{API}} in Academia},
  shorttitle = {Vulkan All the Way},
  author = {Unterguggenberger, Johannes and Kerbl, Bernhard and Wimmer, Michael},
  year = {2023},
  month = apr,
  journal = {Computers \& Graphics},
  volume = {111},
  pages = {155--165},
  issn = {00978493},
  doi = {10.1016/j.cag.2023.02.001},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0097849323000249},
  urldate = {2024-01-10},
  abstract = {For over two decades, the OpenGL API provided users with the means for implementing versatile, feature-rich, and portable real-time graphics applications. Consequently, it has been widely adopted by practitioners and educators alike and is deeply ingrained in many curricula that teach realtime graphics for higher education. Over the years, the architecture of graphics processing units (GPUs) incrementally diverged from OpenGL's conceptual design. The more recently introduced Vulkan API provides a more modern, fine-grained approach for interfacing with the GPU, which allows a high level of controllability and, thereby, deep insights into the inner workings of modern GPUs. This property makes the Vulkan API especially well suitable for teaching graphics programming in university education, where fundamental knowledge shall be conveyed. Hence, it stands to reason that educators who have their students' best interests at heart should provide them with corresponding lecture material. However, Vulkan is notoriously verbose and rather challenging for first-time users, thus transitioning to this new API bears a considerable risk of failing to achieve expected teaching goals. In this paper, we document our experiences after teaching Vulkan in both introductory and advanced graphics courses side-by-side with conventional OpenGL. A collection of surveys enables us to draw conclusions about perceived workload, difficulty, and students' acceptance of either approach. In doing so, we identify suitable conditions and recommendations for teaching Vulkan to both undergraduate and graduate students.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\MH8QCFBH\Unterguggenberger et al. - 2023 - Vulkan all the way Transitioning to a modern low-.pdf}
}

@article{vaneijkeren2015,
  title = {Efficient {{Collision Detection}} in a {{Simulated Hydrocyclone}}},
  author = {Van Eijkeren, D. F. and Krebs, T. and Hoeijmakers, H. W. M.},
  year = {2015},
  month = oct,
  journal = {Journal of Dispersion Science and Technology},
  volume = {36},
  number = {10},
  pages = {1483--1492},
  issn = {0193-2691, 1532-2351},
  doi = {10.1080/01932691.2014.1000462},
  url = {http://www.tandfonline.com/doi/full/10.1080/01932691.2014.1000462},
  urldate = {2024-01-11},
  abstract = {Hydrocyclones enhance oil--water separation efficiency compared to conventional separation methods. An efficient collision detection scheme with Np ln Np dependency on the number of particles is proposed. The scheme is developed to investigate the importance of particle--particle interaction for flow and particle behavior in dilute oil--water separators. However, the proposed scheme can also be used for efficient multigrid soft collision calculation with long-range particle--particle interaction models. The collision detection scheme is first validated using a case of settling spheres. Subsequently, the scheme is applied to a simplified flow field, similar to the flow fields observed in hydrocyclones.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\JVYN95X5\Van Eijkeren et al. - 2015 - Efficient Collision Detection in a Simulated Hydro.pdf}
}

@article{vemuri1998,
  title = {Fast {{Collision Detection Algorithms}} with {{Applications}} to {{Particle Flow}}},
  author = {Vemuri, B. C. and Cao, Y. and Chen, L.},
  year = {1998},
  month = jun,
  journal = {Computer Graphics Forum},
  volume = {17},
  number = {2},
  pages = {121--134},
  issn = {0167-7055, 1467-8659},
  doi = {\doi{10.1111/1467-8659.00233}},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/1467-8659.00233},
  urldate = {2024-02-15},
  abstract = {In this paper, we present efficient algorithms for collision detection of arbitrarily shaped rigid moving objects in a variety of interactive as well as non-interactive environments. The algorithms primarily consist of two stages. The first stage involves finding candidate objects for possible collisions. The second stage involves detecting exact (within a prespecified tolerance) collision between these candidates. The primary data structure used in the algorithms is an octree. In the first stage, we build an octree for the enclosure containing the objects, which is used to detect possible collisions. Assuming spatial/temporal coherence i.e., that the particles move slowly or that the time sampling is fast enough, the average time complexity of this stage can be shown to be O(n) (excluding the time complexity for a one time octree construction), where n is the number of particles. In the second stage, we build a surface-octree for each object. If the objects are convex and assuming coherence, the expected time complexity to detect precise (within a prespecified tolerance) collision for each pair is a constant (excluding the time complexity for a one time surface-octree construction). Therefore, the overall expected time complexity for convex object collision detection is linear with respect to n. For the concave objects, complexity analysis is nontrivial to perform and instead we provide a very practical (almost linear time) algorithm. We apply our algorithms to particle flow simulations by simulating flow density conditions often arising in granular flows.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\E2CT7G2M\Vemuri et al. - 1998 - Fast Collision Detection Algorithms with Applicati.pdf}
}

@article{verlet1967,
  title = {Computer "{{Experiments}}" on {{Classical Fluids}}. {{I}}. {{Thermodynamical Properties}} of {{Lennard-Jones Molecules}}},
  author = {Verlet, Loup},
  year = {1967},
  month = jul,
  journal = {Physical Review},
  volume = {159},
  number = {1},
  pages = {98--103},
  issn = {0031-899X},
  doi = {10.1103/PhysRev.159.98},
  url = {https://link.aps.org/doi/10.1103/PhysRev.159.98},
  urldate = {2024-01-27},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\EAEVAQEM\Verlet - 1967 - Computer Experiments on Classical Fluids. I. The.pdf}
}

@article{viccione2008,
  title = {Defining and Optimizing Algorithms for Neighbouring Particle Identification in {{SPH}} Fluid Simulations},
  author = {Viccione, G. and Bovolin, V. and Carratelli, E. Pugliese},
  year = {2008},
  month = oct,
  journal = {International Journal for Numerical Methods in Fluids},
  volume = {58},
  number = {6},
  pages = {625--638},
  issn = {0271-2091, 1097-0363},
  doi = {10.1002/fld.1761},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/fld.1761},
  urldate = {2024-02-22},
  abstract = {Lagrangian particle methods such as smoothed particle hydrodynamics (SPH) are very demanding in terms of computing time for large domains. Since the numerical integration of the governing equations is only carried out for each particle on a restricted number of neighbouring ones located inside a cut-off radius rc, a substantial part of the computational burden depends on the actual search procedure; it is therefore vital that efficient methods are adopted for such a search.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\FIECZLXZ\Viccione et al. - 2008 - Defining and optimizing algorithms for neighbourin.pdf}
}

@article{visser2023,
  title = {Collision Detection for {{{\emph{N}}}} -Body {{Kepler}} Systems},
  author = {Visser, P. M.},
  year = {2023},
  month = jan,
  journal = {Astronomy \& Astrophysics},
  volume = {669},
  pages = {A97},
  issn = {0004-6361, 1432-0746},
  doi = {10.1051/0004-6361/202243754},
  url = {https://www.aanda.org/10.1051/0004-6361/202243754},
  urldate = {2024-01-10},
  abstract = {Methods. We outline an algorithm that maintains a list of possible collision pairs ordered chronologically. At each step (the soonest event on the list), only the particles created in the collision can cause new collision possibilities. We estimate the collision rate, the length of the list, and the average change in this length at an event, and study the efficiency of the method used. Results. We find that the collision-time problem is equivalent to finding the grid point between two parallel lines that is closest to the origin. The solution is based on the continued fraction of the ratio of orbital periods. Conclusions. Due to the large jumps in time, the algorithm can beat tree codes (octree and k-d tree codes can efficiently detect collisions) for specific systems such as the Solar System with N {$<$} 108. However, the gravitational interactions between particles can only be treated as gravitational scattering or as a secular perturbation, at the cost of reducing the time-step or at the cost of accuracy. While simulations of this size with high-fidelity propagators can already span vast timescales, the high efficiency of the collision detection allows many runs from one initial state or a large sample set, so that one can study statistics.},
  langid = {english},
  keywords = {FMMFast Fouier Transform,HCDHas particle collison Detection,OCT Oct Tree,reviewed,SAPSweep and Prune,TC Temporal  coherency,TMPTemporal Techniques,TSTime Step},
  file = {J:\sandboxR9\Thesis\zotero\storage\VWSSXZEE\Visser - 2023 - Collision detection for N -body Kepler syst.pdf}
}

@misc{vulkan2024,
  title = {Home {\textbar} {{Vulkan}} {\textbar} {{Cross}} Platform {{3D Graphics}}},
  author = {Vulkan},
  year = {2024},
  month = feb,
  url = {https://www.vulkan.org/},
  urldate = {2024-02-14},
  abstract = {Vulkan is a next generation graphics and compute API that provides high-efficiency, cross-platform access to modern GPUs used in PCs, consoles, mobile phones and embedded platforms.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\ILCJAC3L\www.vulkan.org.html}
}

@article{wang2012,
  title = {Adaptive Image-Based Intersection Volume},
  author = {Wang, Bin and Faure, Fran{\c c}ois and Pai, Dinesh K.},
  year = {2012},
  month = aug,
  journal = {ACM Transactions on Graphics},
  volume = {31},
  number = {4},
  pages = {1--9},
  issn = {0730-0301, 1557-7368},
  doi = {10.1145/2185520.2185593},
  url = {https://dl.acm.org/doi/10.1145/2185520.2185593},
  urldate = {2024-01-10},
  abstract = {A method for image-based contact detection and modeling, with guaranteed precision on the intersection volume, is presented. Unlike previous image-based methods, our method optimizes a nonuniform ray sampling resolution and allows precise control of the volume error. By cumulatively projecting all mesh edges into a generalized 2D texture, we construct a novel data structure, the Error Bound Polynomial Image (EBPI), which allows efficient computation of the maximum volume error as a function of ray density. Based on a precision criterion, EBPI pixels are subdivided or clustered. The rays are then cast in the projection direction according to the non-uniform resolution. The EBPI data, combined with ray-surface intersection points and normals, is also used to detect transient edges at surface intersections. This allows us to model intersection volumes at arbitrary resolution, while avoiding the geometric computation of mesh intersections. Moreover, the ray casting acceleration data structures can be reused for the generation of high quality images.},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\Y8K54XWZ\Wang et al. - 2012 - Adaptive image-based intersection volume.pdf}
}

@inproceedings{wang2015,
  title = {An Image-Based Collision Detection Optimization Algorithm},
  booktitle = {2015 {{IEEE China Summit}} and {{International Conference}} on {{Signal}} and {{Information Processing}} ({{ChinaSIP}})},
  author = {Wang, Lixing and Shi, Yingjing and Li, Rui},
  year = {2015},
  month = jul,
  pages = {220--224},
  publisher = {IEEE},
  address = {Chengdu, China},
  doi = {10.1109/ChinaSIP.2015.7230395},
  url = {https://ieeexplore.ieee.org/document/7230395},
  urldate = {2024-01-10},
  isbn = {978-1-4799-1948-2},
  keywords = {ISMImage Space Methods},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\2UTRY46X\\An image-based collision detection optimization algorithm.txt;J\:\\sandboxR9\\Thesis\\zotero\\storage\\JICJ4YBX\\Wang et al. - 2015 - An image-based collision detection optimization al.pdf}
}

@article{wang2015a,
  title = {Nbody6++gpu: Ready for the Gravitational Million-Body Problem},
  shorttitle = {Nbody6++gpu},
  author = {Wang, Long and Spurzem, Rainer and Aarseth, Sverre and Nitadori, Keigo and Berczik, Peter and Kouwenhoven, M. B. N. and Naab, Thorsten},
  year = {2015},
  month = jul,
  journal = {Monthly Notices of the Royal Astronomical Society},
  volume = {450},
  number = {4},
  pages = {4070--4080},
  issn = {1365-2966, 0035-8711},
  doi = {10.1093/mnras/stv817},
  url = {http://academic.oup.com/mnras/article/450/4/4070/990854/nbody6gpu-ready-for-the-gravitational-millionbody},
  urldate = {2024-01-11},
  abstract = {Accurate direct N-body simulations help to obtain detailed information about the dynamical evolution of star clusters. They also enable comparisons with analytical models and FokkerPlanck or Monte Carlo methods. NBODY6 is a well-known direct N-body code for star clusters, and NBODY6++ is the extended version designed for large particle number simulations by supercomputers. We present NBODY6++GPU, an optimized version of NBODY6++ with hybrid parallelization methods (MPI, GPU, OpenMP, and AVX/SSE) to accelerate large direct N-body simulations, and in particular to solve the million-body problem. We discuss the new features of the NBODY6++GPU code, benchmarks, as well as the first results from a simulation of a realistic globular cluster initially containing a million particles. For million-body simulations, NBODY6++GPU is 400--2000 times faster than NBODY6 with 320 CPU cores and 32 NVIDIA K20X GPUs. With this computing cluster specification, the simulations of million-body globular clusters including 5 per cent primordial binaries require about an hour per half-mass crossing time.},
  langid = {english},
  keywords = {BF Brute Force KNN,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\7VECBV2L\Wang et al. - 2015 - nbody6++gpu ready for the gravitational million-b.pdf}
}

@article{wang2017,
  title = {Gunrock: {{GPU Graph Analytics}}},
  shorttitle = {Gunrock},
  author = {Wang, Yangzihao and Pan, Yuechao and Davidson, Andrew and Wu, Yuduo and Yang, Carl and Wang, Leyuan and Osama, Muhammad and Yuan, Chenshan and Liu, Weitang and Riffel, Andy T. and Owens, John D.},
  year = {2017},
  month = mar,
  journal = {ACM Transactions on Parallel Computing},
  volume = {4},
  number = {1},
  pages = {1--49},
  issn = {2329-4949, 2329-4957},
  doi = {10.1145/3108140},
  url = {https://dl.acm.org/doi/10.1145/3108140},
  urldate = {2024-01-11},
  abstract = {For large-scale graph analytics on the GPU, the irregularity of data access and control flow, and the complexity of programming GPUs, have presented two significant challenges to developing a programmable high-performance graph library. ``Gunrock,'' our graph-processing system designed specifically for the GPU, uses a high-level, bulk-synchronous, data-centric abstraction focused on operations on a vertex or edge frontier. Gunrock achieves a balance between performance and expressiveness by coupling high-performance GPU computing primitives and optimization strategies with a high-level programming model that allows programmers to quickly develop new graph primitives with small code size and minimal GPU programming knowledge. We characterize the performance of various optimization strategies and evaluate Gunrock's overall performance on different GPU architectures on a wide range of graph primitives that span from traversal-based algorithms and ranking algorithms, to triangle counting and bipartite-graph-based algorithms. The results show that on a single GPU, Gunrock has on average at least an order of magnitude speedup over Boost and PowerGraph, comparable performance to the fastest GPU hardwired primitives and CPU shared-memory graph libraries, such as Ligra and Galois, and better performance than any other GPU high-level graph library.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\9IB3FZNP\Wang et al. - 2017 - Gunrock GPU Graph Analytics.pdf}
}

@article{wang2020a,
  title = {A Massively Parallel and Scalable Multi-{{GPU}} Material Point Method},
  author = {Wang, Xinlei and Qiu, Yuxing and Slattery, Stuart R. and Fang, Yu and Li, Minchen and Zhu, Song-Chun and Zhu, Yixin and Tang, Min and Manocha, Dinesh and Jiang, Chenfanfu},
  year = {2020},
  month = aug,
  journal = {ACM Transactions on Graphics},
  volume = {39},
  number = {4},
  issn = {0730-0301, 1557-7368},
  doi = {10.1145/3386569.3392442},
  url = {https://dl.acm.org/doi/10.1145/3386569.3392442},
  urldate = {2024-02-15},
  abstract = {Harnessing the power of modern multi-GPU architectures, we present a massively parallel simulation system based on the Material Point Method (MPM) for simulating physical behaviors of materials undergoing complex topological changes, self-collision, and large deformations. Our system makes three critical contributions. First, we introduce a new particle data structure that promotes coalesced memory access patterns on the GPU and eliminates the need for complex atomic operations on the memory hierarchy when writing particle data to the grid. Second, we propose a kernel fusion approach using a new Grid-to-Particles-to-Grid (               G2P2G               ) scheme, which efficiently reduces GPU kernel launches, improves latency, and significantly reduces the amount of global memory needed to store particle data. Finally, we introduce optimized algorithmic designs that allow for efficient sparse grids in a shared memory context, enabling us to best utilize modern multi-GPU computational platforms for hybrid Lagrangian-Eulerian computational patterns. We demonstrate the effectiveness of our method with extensive benchmarks, evaluations, and dynamic simulations with elastoplasticity, granular media, and fluid dynamics. In comparisons against an open-source and heavily optimized CPU-based MPM codebase [Fang et al. 2019] on an elastic sphere colliding scene with particle counts ranging from 5 to 40 million, our GPU MPM achieves over 100x per-time-step speedup on a workstation with an Intel 8086K CPU and a single Quadro P6000 GPU, exposing exciting possibilities for future MPM simulations in computer graphics and computational science. Moreover, compared to the state-of-the-art GPU MPM method [Hu et al. 2019a], we not only achieve 2x acceleration on a single GPU but our kernel fusion strategy and Array-of-Structs-of-Array (               AoSoA               ) data structure design also generalizes to multi-GPU systems. Our multi-GPU MPM exhibits near-perfect weak and strong scaling with 4 GPUs, enabling performant and large-scale simulations on a 1024               3               grid with close to 100 million particles with less than 4 minutes per frame on a single 4-GPU workstation and 134 million particles with less than 1 minute per frame on an 8-GPU workstation.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\KPWNHWX4\Wang et al. - 2020 - A massively parallel and scalable multi-GPU materi.pdf}
}

@article{wang2021,
  title = {A Review of Collision Detection for Deformable Objects},
  author = {Wang, Monan and Cao, Jiaqi},
  year = {2021},
  month = sep,
  journal = {Computer Animation and Virtual Worlds},
  volume = {32},
  number = {5},
  pages = {e1987},
  issn = {1546-4261, 1546-427X},
  doi = {10.1002/cav.1987},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/cav.1987},
  urldate = {2024-01-10},
  abstract = {In the process of simulating and modeling real objects, the phenomenon of objects penetrating each other may occur in the model, which is unrealistic and then the research of collision detection (CD) is generated. As a bottleneck of virtual environment simulation, researchers have conducted in-depth research on CD, especially the CD of deformable objects. In this paper, we briefly review the related research on CD of deformable objects regarding relevant literature. First, we briefly introduce previous reviews of CD. Second, we review the popular research methods and limitations of CD between deformable objects. Third, we review the popular research methods and limitations of self-collision detection in deformable objects. Finally, we discuss future directions of development. This review can be used as a reference for the application of CD in all directions.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\KJA9SJJA\Wang and Cao - 2021 - A review of collision detection for deformable obj.pdf}
}

@article{wang2021a,
  title = {Estimation of the Dissipation Rate of Turbulent Kinetic Energy: {{A}} Review},
  shorttitle = {Estimation of the Dissipation Rate of Turbulent Kinetic Energy},
  author = {Wang, Guichao and Yang, Fan and Wu, Ke and Ma, Yongfeng and Peng, Cheng and Liu, Tianshu and Wang, Lian-Ping},
  year = {2021},
  month = jan,
  journal = {Chemical Engineering Science},
  volume = {229},
  pages = {116133},
  issn = {00092509},
  doi = {10.1016/j.ces.2020.116133},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0009250920306655},
  urldate = {2024-02-25},
  abstract = {A comprehensive literature review on the estimation of the dissipation rate of turbulent kinetic energy is presented to assess the current state of knowledge available in this area. Experimental techniques (hot wires, LDV, PIV and PTV) reported on the measurements of turbulent dissipation rate have been critically analyzed with respect to the velocity processing methods. Traditional hot wires and LDV are both a pointbased measurement technique with high temporal resolution and Taylor's frozen hypothesis is generally required to transfer temporal velocity fluctuations into spatial velocity fluctuations in turbulent flows. Multi probes of hot wires and multi points LDV could be used to measure velocity spatial gradients for a direct calculation of turbulent dissipation rate from its definition. Nevertheless, only PIV and PTV could provide simultaneous measurements of the distribution of turbulent dissipation rate in a turbulent field. These methods all suffer from the deficiency of spatial resolution as velocity measurements are required to resolve down to Kolmogorov scales for a strictly direct calculation of turbulent dissipation rate from fluctuating velocity gradients. To eliminate the necessity of resolving down to Kolmogorov scales, a large eddy simulation analogy and Smagorinsky model could be used for estimating the unresolved small scales, but Smagorinsky constant acts as an adjustment parameter at this stage. Different velocity processing methods are compared in the estimation of turbulent dissipation rate. The estimation of turbulent dissipation rate using structure function, energy spectrum and dimensional analysis methods could reduce the effects of low resolution, but it only provides temporal or spatial mean turbulent dissipation rate. Nevertheless, the field of turbulent dissipation rate, which is not distributed homogeneously, has intermittent spatio-temporal nature. The aim of this paper is to review the developments and limitations of the existing experimental techniques and different calculating methods and identify the future directions in successfully estimating turbulent dissipation rate in turbulent multiphase flows.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\H6VMAHND\Wang et al. - 2021 - Estimation of the dissipation rate of turbulent ki.pdf}
}

@article{warrenParallelHashedOttTree1993,
  title = {A {{Parallel Hashed Ott-Tree N-Body Algorithm}}},
  author = {Warren, S and Salmon, K},
  year = {1993},
  langid = {english},
  keywords = {BHA Barnes Hut Algorithm,FMPFastMultipole Method,HCDHas particle collison Detection,HOT Hashed Oct-Tree,MACMultipole acceptance criterion,NNS Near Neighbor Search,reviewed},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\5FBQFRP6\\A Parallel Hashed Ott-Tree N-Body Algorithm.txt;J\:\\sandboxR9\\Thesis\\zotero\\storage\\DXY5IICZ\\Warren and Salmon - A Parallel Hashed Ott-Tree N-Body Algorithm.pdf}
}

@article{washizawaParallelComputingDiscrete2013,
  title = {Parallel {{Computing}} of {{Discrete Element Method}} on {{GPU}}},
  author = {Washizawa, Teruyoshi and Nakahara, Yasuhiro},
  year = {2013},
  journal = {Applied Mathematics},
  volume = {04},
  number = {01},
  pages = {242--247},
  issn = {2152-7385, 2152-7393},
  doi = {10.4236/am.2013.41A037},
  url = {http://www.scirp.org/journal/doi.aspx?DOI=10.4236/am.2013.41A037},
  urldate = {2024-02-15},
  abstract = {General purpose computing on GPU for scientific computing has been rapidly growing in recent years. We investigate the applicability of GPU to discrete element method (DEM) often used in particle motion simulation. NVIDIA provides a sample code for this type of simulation, which obtained superior performance than CPU in computational time. A computational model of the contact force in NVIDIA's sample code is, however, too simple to use in practice. This paper modifies the NVIDIA's simple model by replacing it with the practical model. The computing speed of the practical model on GPU is compared with the simple one on GPU and with the practical one on CPU in numerical experiments. The result shows that the practical model on GPU obtains the computing speed 6 times faster than the practical one on CPU while 7 times slower than that of the simple one on GPU. The effects of the GPU architectures on the computing speed are analyzed.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\USGDB8SF\Washizawa and Nakahara - 2013 - Parallel Computing of Discrete Element Method on G.pdf}
}

@article{weinhart2020,
  title = {Fast, Flexible Particle Simulations --- {{An}} Introduction to {{MercuryDPM}}},
  author = {Weinhart, Thomas and Orefice, Luca and Post, Mitchel and Van Schrojenstein Lantman, Marnix P. and Denissen, Irana F.C. and Tunuguntla, Deepak R. and Tsang, J.M.F. and Cheng, Hongyang and Shaheen, Mohamad Yousef and Shi, Hao and Rapino, Paolo and Grannonio, Elena and Losacco, Nunzio and Barbosa, Joao and Jing, Lu and Alvarez Naranjo, Juan E. and Roy, Sudeshna and Den Otter, Wouter K. and Thornton, Anthony R.},
  year = {2020},
  month = apr,
  journal = {Computer Physics Communications},
  volume = {249},
  pages = {107129},
  issn = {00104655},
  doi = {10.1016/j.cpc.2019.107129},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465519304357},
  urldate = {2024-01-27},
  abstract = {We introduce the open-source package MercuryDPM, which we have been developing over the last few years. MercuryDPM is a code for discrete particle simulations. It simulates the motion of particles by applying forces and torques that stem either from external body forces, (gravity, magnetic fields, etc.) or particle interactions. The code has been developed extensively for granular applications, and in this case these are typically (elastic, plastic, viscous, frictional) contact forces or (adhesive) short-range forces. However, it could be adapted to include long-range (molecular, self-gravity) interactions as well. MercuryDPM is an object-oriented algorithm with an easy-to-use user interface and a flexible core, allowing developers to quickly add new features. It is parallelised using MPI and released under the BSD 3-clause licence. Its open-source developers' community has developed many features, including moving and curved walls; state-of-the-art granular contact models; specialised classes for common geometries; non-spherical particles; general interfaces; restarting; visualisation; a large self-test suite; extensive documentation; and numerous tutorials and demos. In addition, MercuryDPM has three major components that were originally invented and developed by its team: an advanced contact detection method, which allows for the first time large simulations with wide size distributions; curved (nontriangulated) walls; and multicomponent, spatial and temporal coarse-graining, a novel way to extract continuum fields from discrete particle systems. We illustrate these tools and a selection of other MercuryDPM features via various applications, including size-driven segregation down inclined planes, rotating drums, and dosing silos.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\AZ4DPBYE\Weinhart et al. - 2020 - Fast, flexible particle simulations — An introduct.pdf}
}

@article{welling2011,
  title = {Efficiency of Linked Cell Algorithms},
  author = {Welling, Ulrich and Germano, Guido},
  year = {2011},
  month = mar,
  journal = {Computer Physics Communications},
  volume = {182},
  number = {3},
  pages = {611--615},
  issn = {00104655},
  doi = {10.1016/j.cpc.2010.11.002},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465510004480},
  urldate = {2024-01-27},
  abstract = {The linked cell algorithm is an essential part of molecular simulation software, both molecular dynamics and Monte Carlo. Though it scales linearly with the number of particles, there has been a constant interest in increasing its performance, because a large part of CPU time is spent to identify the interacting particles. Several recent publications proposed improvements to the algorithm and investigated their efficiency by applying them to particular setups. Here we develop a general method to evaluate the efficiency of these algorithms which is mostly independent of the parameters of the simulation, and test it for a number of linked cell algorithms. We also propose a combination of linked cell reordering and interaction sorting that performs well for a broad range of simulation setups.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\U84JYLYN\Welling and Germano - 2011 - Efficiency of linked cell algorithms.pdf}
}

@book{wendt2008,
  title = {Computational Fluid Dynamics: An Introduction},
  shorttitle = {Computational Fluid Dynamics},
  editor = {Wendt, John F. and Anderson, John D. and {Von Karman Institute for Fluid Dynamics}},
  year = {2008},
  edition = {3rd ed},
  publisher = {Springer},
  address = {Berlin ; [London]},
  url = {https://link.springer.com/book/10.1007/978-3-540-85056-4},
  abstract = {This text provides an elementary tutorial presentation on computational fluid dynamics (CFD), emphasizing the fundamentals and surveying a variety of solution techniques whose applications range from low speed incompressible flow to hypersonic flow},
  isbn = {978-3-540-85055-7 978-3-642-09873-4},
  langid = {english},
  lccn = {TA357 .C58775 2009},
  keywords = {Analyse numerique,Fluid dynamics,Fluides Dynamique des,Mathematics,Mathematiques,Numerical analysis,Numerische Stromungssimulation},
  annotation = {OCLC: ocn288984495},
  file = {J:\sandboxR9\Thesis\zotero\storage\G7UHW4KM\Wendt et al. - 2008 - Computational fluid dynamics an introduction.pdf}
}

@misc{Wessan2024,
  title = {Advancing {{GPU-Driven Rendering}} with {{Work Graphs}} in {{Direct3D}} 12},
  year = {2024},
  month = mar,
  journal = {NVIDIA Technical Blog},
  url = {https://developer.nvidia.com/blog/advancing-gpu-driven-rendering-with-work-graphs-in-direct3d-12/},
  urldate = {2024-07-03},
  abstract = {GPU-driven rendering has long been a major goal for many game applications. It enables better scalability for handling large virtual scenes and reduces cases where the CPU could bottleneck a game's{\dots}},
  langid = {american},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\B7UNNZEK\advancing-gpu-driven-rendering-with-work-graphs-in-direct3d-12.html}
}

@article{wessels2020,
  title = {The Neural Particle Method -- {{An}} Updated {{Lagrangian}} Physics Informed Neural Network for Computational Fluid Dynamics},
  author = {Wessels, Henning and Wei{\ss}enfels, Christian and Wriggers, Peter},
  year = {2020},
  month = aug,
  journal = {Computer Methods in Applied Mechanics and Engineering},
  volume = {368},
  pages = {113127},
  issn = {00457825},
  doi = {10.1016/j.cma.2020.113127},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0045782520303121},
  urldate = {2024-01-09},
  abstract = {Today numerical simulation is indispensable in industrial design processes. It can replace cost and time intensive experiments and even reduce the need for prototypes. While products designed with the aid of numerical simulation undergo continuous improvement, this must also be true for numerical simulation techniques themselves. Up to date, no general purpose numerical method is available which can accurately resolve a variety of physics ranging from fluid to solid mechanics including large deformations and free surface flow phenomena. These complex multi-physics problems occur for example in Additive Manufacturing processes. In this sense, the recent developments in Machine Learning display promise for numerical simulation. It has recently been shown that instead of solving a system of equations as in standard numerical methods, a neural network can be trained solely based on initial and boundary conditions. Neural networks are smooth, differentiable functions that can be used as a global ansatz for Partial Differential Equations (PDEs). While this idea dates back to more than 20 years (Lagaris et al., 1998), it is only recently that an approach for the solution of time dependent problems has been developed (Raissi et al., 2019). With the latter, implicit Runge--Kutta schemes with unprecedented high order have been constructed to solve scalar-valued PDEs. We build on the aforementioned work in order to develop an Updated Lagrangian method for the solution of incompressible free surface flow subject to the inviscid Euler equations. The method is straightforward to implement and does not require any specific algorithmic treatment which is usually necessary to accurately resolve the incompressibility constraint. Due to its meshfree character, we will name it the Neural Particle Method (NPM). It will be demonstrated that the NPM remains stable and accurate even if the location of discretization points is highly irregular.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\LNLJQF8F\Wessels et al. - 2020 - The neural particle method – An updated Lagrangian.pdf}
}

@inproceedings{wieschollek2016,
  title = {Efficient {{Large-scale Approximate Nearest Neighbor Search}} on the {{GPU}}},
  booktitle = {2016 {{IEEE Conference}} on {{Computer Vision}} and {{Pattern Recognition}} ({{CVPR}})},
  author = {Wieschollek, Patrick and Wang, Oliver and {Sorkine-Hornung}, Alexander and Lensch, Hendrik P. A.},
  year = {2016},
  month = jun,
  eprint = {1702.05911},
  primaryclass = {cs},
  pages = {2027--2035},
  doi = {10.1109/CVPR.2016.223},
  url = {http://arxiv.org/abs/1702.05911},
  urldate = {2024-01-09},
  abstract = {We present a new approach for efficient approximate nearest neighbor (ANN) search in high dimensional spaces, extending the idea of Product Quantization. We propose a two level product and vector quantization tree that reduces the number of vector comparisons required during tree traversal. Our approach also includes a novel highly parallelizable re-ranking method for candidate vectors by efficiently reusing already computed intermediate values. Due to its small memory footprint during traversal the method lends itself to an efficient, parallel GPU implementation. This Product Quantization Tree (PQT) approach significantly outperforms recent state of the art methods for high dimensional nearest neighbor queries on standard reference datasets. Ours is the first work that demonstrates GPU performance superior to CPU performance on high dimensional, large scale ANN problems in time-critical real-world applications, like loop-closing in videos.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {ANN Approximate Nearest Neighbor,ED Euclidean distance (some norm),PQTProduct Quantization Tree,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\IJJ29CJR\Wieschollek et al. - 2016 - Efficient Large-scale Approximate Nearest Neighbor.pdf}
}

@article{wilson1999,
  title = {Partitioning and {{Handling Massive Models}} for {{Interactive Collision Detection}}},
  author = {Wilson, A. and Larsen, E. and Manocha, D. and Lin, M. C.},
  year = {1999},
  month = sep,
  journal = {Computer Graphics Forum},
  volume = {18},
  number = {3},
  pages = {319--330},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/1467-8659.00352},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/1467-8659.00352},
  urldate = {2024-01-27},
  abstract = {We describe an approach for interactive collision detection and proximity computations on massive models composed of millions of geometric primitives. We address issues related to interactive data access and processing in a large geometric database, which may not fit into main memory of typical desktop workstations or computers. We present a new algorithm using overlap graphs for localizing the ``regions of interest" within a massive model, thereby reducing runtime memory requirements. The overlap graph is computed off-line, pre-processed using graph partitioning algorithms, and modified on the fly as needed. At run time, we traverse localized subgraphs to check the corresponding geometry for proximity and pre-fetch geometry and auxiliary data structures. To perform interactive proximity queries, we use bounding-volume hierarchies and take advantage of spatial and temporal coherence. Based on the proposed algorithms, we have developed a system called IMMPACT and used it for interaction with a CAD model of a power plant consisting of over 15 million triangles. We are able to perform a number of proximity queries in real-time on such a model. In terms of model complexity and application to large models, we have improved the performance of interactive collision detection and proximity computation algorithms by an order of magnitude.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\X3URE46N\Wilson et al. - 1999 - Partitioning and Handling Massive Models for Inter.pdf}
}

@article{wolff2013,
  title = {Distance Fields on Unstructured Grids: {{Stable}} Interpolation, Assumed Gradients, Collision Detection and Gap Function},
  shorttitle = {Distance Fields on Unstructured Grids},
  author = {Wolff, Sebastian and Bucher, Christian},
  year = {2013},
  month = jun,
  journal = {Computer Methods in Applied Mechanics and Engineering},
  volume = {259},
  pages = {77--92},
  issn = {00457825},
  doi = {10.1016/j.cma.2013.02.015},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0045782513000479},
  urldate = {2024-02-01},
  abstract = {This article presents a novel approach to collision detection based on distance fields. A novel interpolation ensures stability of the distances in the vicinity of complex geometries. An assumed gradient formulation is introduced leading to a C1-continuous distance function. The gap function is re-expressed allowing penalty and Lagrange multiplier formulations. The article introduces a node-to-element integration for first order elements, but also discusses signed distances, partial updates, intermediate surfaces, mortar methods and higher order elements. The algorithm is fast, simple and robust for complex geometries and self contact. The computed tractions conserve linear and angular momentum even in infeasible contact. Numerical examples illustrate the new algorithm in three dimensions.},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\487ZSZ5H\Wolff and Bucher - 2013 - Distance fields on unstructured grids Stable inte.pdf}
}

@article{wong2012,
  title = {Virtual Subdivision for {{GPU}} Based Collision Detection of Deformable Objects Using a Uniform Grid},
  author = {Wong, Tsz Ho and Leach, Geoff and Zambetta, Fabio},
  year = {2012},
  month = jun,
  journal = {The Visual Computer},
  volume = {28},
  number = {6-8},
  pages = {829--838},
  issn = {0178-2789, 1432-2315},
  doi = {10.1007/s00371-012-0706-z},
  url = {http://link.springer.com/10.1007/s00371-012-0706-z},
  urldate = {2024-01-10},
  abstract = {We present an improved uniform subdivision based discrete and continuous collision detection approach for deformable objects consisting of triangle meshes without any assumption about triangle size. A previously proposed technique using control bits can effectively eliminate redundant object pairs appearing in multiple cells, but this scheme requires the grid cell size adapted to the largest object, and efficiency tends to be severely impaired when object size varies strongly. In this paper, we discuss an approach that virtually subdivides large triangles into a number of child triangles to enable the use of a smaller, better suited cell size, resulting in a considerable decrease in the number of collision tests in the broad phase, with a corresponding reduced memory requirement. The virtual subdivision is used only for the purpose of collision detection and is recomputed each frame, with the original mesh retained for collision response and physical simulation. Our method exploits the benefits of GPU architecture to accelerate the computationally intensive task for improved performance. The results show that the method provides speedups by comparing performance with existing methods.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\IQU92BSI\Wong et al. - 2012 - Virtual subdivision for GPU based collision detect.pdf}
}

@inproceedings{woulfe2007,
  title = {Hardware {{Accelerated Broad Phase Collision Detection}} for {{Realtime Simulations}}},
  booktitle = {Workshop in {{Virtual Reality Interactions}} and {{Physical Simulation}} "{{VRIPHYS}}},
  author = {Woulfe, Muiris and Dingliana, John and Manzke, Michael},
  year = {2007},
  publisher = {The Eurographics Association},
  doi = {10.2312/PE/vriphys/vriphys07/079-088},
  abstract = {Broad phase collision detection is a vital task in most interactive simulations, but it remains computationally expensive and is frequently an impediment to efficient implementation of realtime graphics applications. To overcome this hurdle, we propose a novel microarchitecture for performing broad phase collision detection using Axis-Aligned Bounding Boxes (AABBs), which exploits the parallelism available in the algorithms. We have implemented our microarchitecture on a Field-Programmable Gate Array (FPGA) and our results show that this implementation is capable of achieving an acceleration of up to 1.5{\texttimes} over the broad phase component of the SOLID collision detection library, when considering the communication overhead between the CPU and the FPGA. Our results further indicate that significantly higher accelerations are achievable using a more sophisticated FPGA or by implementing our microarchitecture on an Application-Specific Integrated Circuit (ASIC).},
  langid = {english},
  keywords = {reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\KK2PAIGT\Woulfe et al. - Hardware Accelerated Broad Phase Collision Detecti.pdf}
}

@inproceedings{woulfe2009,
  title = {A Framework for Benchmarking Interactive Collision Detection},
  booktitle = {Proceedings of the 25th {{Spring Conference}} on {{Computer Graphics}}},
  author = {Woulfe, Muiris and Manzke, Michael},
  year = {2009},
  month = apr,
  pages = {205--212},
  publisher = {ACM},
  address = {Budmerice Slovakia},
  doi = {10.1145/1980462.1980501},
  url = {https://dl.acm.org/doi/10.1145/1980462.1980501},
  urldate = {2024-02-01},
  isbn = {978-1-4503-0769-7},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\DM3Y4CKD\Woulfe and Manzke - 2009 - A framework for benchmarking interactive collision.pdf}
}

@article{woulfe2017,
  title = {A Hybrid Fixed-Function and Microprocessor Solution for High-Throughput Broad-Phase Collision Detection},
  author = {Woulfe, Muiris and Manzke, Michael},
  year = {2017},
  month = dec,
  journal = {EURASIP Journal on Embedded Systems},
  volume = {2017},
  number = {1},
  pages = {1},
  issn = {1687-3963},
  doi = {10.1186/s13639-016-0037-7},
  url = {https://jes-eurasipjournals.springeropen.com/articles/10.1186/s13639-016-0037-7},
  urldate = {2024-01-27},
  abstract = {We present a hybrid system spanning a fixed-function microarchitecture and a general-purpose microprocessor, designed to amplify the throughput and decrease the power dissipation of collision detection relative to what can be achieved using CPUs or GPUs alone. The primary component is one of the two novel microarchitectures designed to perform the principal elements of broad-phase collision detection. Both microarchitectures consist of pipelines comprising a plurality of memories, which rearrange the input into a format that maximises parallelism and bandwidth. The two microarchitectures are combined with the remainder of the system through an original method for sharing data between a ray tracer and the collision-detection microarchitectures to minimise data structure construction costs. We effectively demonstrate our system using several benchmarks of varying object counts. These benchmarks reveal that, for over one million objects, our design achieves an acceleration of 812{\texttimes} relative to a CPU and an acceleration of 161{\texttimes} relative to a GPU. We also achieve energy efficiencies that enable the mitigation of silicon power-density challenges, while making the design amenable to both mobile and wearable computing devices.},
  langid = {english},
  keywords = {HWDRHardware Specific Solution},
  file = {J:\sandboxR9\Thesis\zotero\storage\UBGM6DGM\Woulfe and Manzke - 2017 - A hybrid fixed-function and microprocessor solutio.pdf}
}

@phdthesis{wu20005,
  title = {Efficient, Tight Bounding Volumes for Subdivision Surfaces.},
  author = {Wu, Xiaobin},
  year = {20005},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\E39K92EC\Wu - EFFICIENT, TIGHT BOUNDING VOLUMES FOR SUBDIVISION .pdf}
}

@article{wu2009,
  title = {Three-Dimensional Discrete Particle Model for Gas--Solid Fluidized Beds on Unstructured Mesh},
  author = {Wu, C.L. and Berrouk, A.S. and Nandakumar, K.},
  year = {2009},
  month = oct,
  journal = {Chemical Engineering Journal},
  volume = {152},
  number = {2-3},
  pages = {514--529},
  issn = {13858947},
  doi = {10.1016/j.cej.2009.05.024},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S138589470900401X},
  urldate = {2024-01-27},
  abstract = {A robust three-dimensional discrete particle model (3D DPM) for unstructured meshes is presented to model the gas--solid flows in fluidized beds. The finite volume method is used to discretize the governing equations of the gas phase. Inter-particle interactions are taken into account through the hard-sphere approach. The numerical models for the solid phase were implemented as a separate module in FLUENT by overcoming some limitations of the user-defined function approach. A multifaceted numerical strategy was developed to enhance the computational efficiency. Simulation results demonstrate the ability of the model to capture many important characteristics such as bubbling, spouting, particle clustering and core--annulus flow structures in gas--solid systems at specified operating conditions.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\JW56Z3LJ\Wu et al. - 2009 - Three-dimensional discrete particle model for gas–.pdf}
}

@article{xiao2022,
  title = {Comparative Investigation of {{GPU-accelerated}} Triangle-Triangle Intersection Algorithms for Collision Detection},
  author = {Xiao, Lei and Mei, Gang and Cuomo, Salvatore and Xu, Nengxiong},
  year = {2022},
  month = jan,
  journal = {Multimedia Tools and Applications},
  volume = {81},
  number = {3},
  pages = {3165--3180},
  issn = {1380-7501, 1573-7721},
  doi = {10.1007/s11042-020-09066-3},
  url = {https://link.springer.com/10.1007/s11042-020-09066-3},
  urldate = {2024-01-10},
  abstract = {Efficient collision detection is critical in 3D geometric modeling. In this paper, we first implement three parallel triangle-triangle intersection algorithms on a GPU and then compare the computational efficiency of these three GPU-accelerated parallel triangle-triangle intersection algorithms in an application that detects collisions between triangulated models. The presented GPU-based parallel collision detection method for triangulated models has two stages: first, we propose a straightforward and efficient parallel approach to reduce the number of potentially intersecting triangle pairs based on AABBs, and second, we conduct intersection tests with the remaining triangle pairs in parallel based on three triangle-triangle intersection algorithms, i.e., the Mo{\textasciidieresis}ller's algorithm, Devillers' and Guigue's algorithm, and Shen's algorithm. To evaluate the performance of the presented GPU-based parallel collision detection method for triangulated models, we conduct four groups of benchmarks. The experimental results show the following: (1) the time required to detect collisions for the triangulated model consisting of approximately 1.5 billion triangle pairs is less than 0.5 s; (2) the GPU-based parallel collision detection method speedup over the corresponding serial version is 50x - 60x, and (3) Devillers' and Guigue's algorithm is comparatively and comprehensively the best of the three GPU-based parallel triangle-triangle intersection algorithms. The presented GPU-accelerated method is capable of efficiently detecting the potential collisions of triangulated models. Overall, the GPU-accelerated parallel Devillers' and Guigue's triangle-triangle intersection algorithm is recommended when performing practical collision detections between large triangulated models.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\A627XWKJ\Xiao et al. - 2022 - Comparative investigation of GPU-accelerated trian.pdf}
}

@article{xiong2013,
  title = {{{GPU-accelerated}} Adaptive Particle Splitting and Merging in {{SPH}}},
  author = {Xiong, Qingang and Li, Bo and Xu, Ji},
  year = {2013},
  month = jul,
  journal = {Computer Physics Communications},
  volume = {184},
  number = {7},
  pages = {1701--1707},
  issn = {00104655},
  doi = {10.1016/j.cpc.2013.02.021},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0010465513000787},
  urldate = {2024-01-16},
  abstract = {Graphical processing unit (GPU) implementation of adaptive particle splitting and merging (APS) in the framework of smoothed particle hydrodynamics (SPH) is presented. Particle splitting and merging process are carried out based on a prescribed criterion. Multiple time stepping technology is used to reduce computational cost further. Detailed implementations on both single- and multi-GPU are discussed. A benchmark test that is a flow past fixed periodic circles is simulated to investigate the accuracy and speed of the algorithm. Comparable precision with uniformly fine simulation is achieved by APS, whereas computational demand is reduced considerably. Satisfactory speedup and acceptable scalability are obtained, demonstrating that GPU-accelerated APS is a promising tool to speed up large-scale particlebased simulations.},
  langid = {english},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\LQBSZ5QT\Xiong et al. - 2013 - GPU-accelerated adaptive particle splitting and me.pdf}
}

@article{xu2011,
  title = {Quasi-Real-Time Simulation of Rotating Drum Using Discrete Element Method with Parallel {{GPU}} Computing},
  author = {Xu, Ji and Qi, Huabiao and Fang, Xiaojian and Lu, Liqiang and Ge, Wei and Wang, Xiaowei and Xu, Ming and Chen, Feiguo and He, Xianfeng and Li, Jinghai},
  year = {2011},
  month = aug,
  journal = {Particuology},
  volume = {9},
  number = {4},
  pages = {446--450},
  issn = {16742001},
  doi = {10.1016/j.partic.2011.01.003},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S1674200111000654},
  urldate = {2024-01-16},
  langid = {english},
  keywords = {AIDAtomic Indexing,HCDHas particle collison Detection,MPIMessage Passing Interface,reviewed,SSM Soft Sphere Model},
  file = {J:\sandboxR9\Thesis\zotero\storage\KQ3GBYYA\Xu et al. - 2011 - Quasi-real-time simulation of rotating drum using .pdf}
}

@inproceedings{xu2012,
  title = {A {{G-Octree Based Fast Collision Detection}} for {{Large-Scale Particle Systems}}},
  booktitle = {2012 {{International Conference}} on {{Computer Science}} and {{Electronics Engineering}}},
  author = {Xu, Runtao and Kang, Lin and Tian, Hongcheng},
  year = {2012},
  month = mar,
  pages = {269--273},
  publisher = {IEEE},
  address = {Hangzhou, Zhejiang, China},
  doi = {10.1109/ICCSEE.2012.98},
  url = {http://ieeexplore.ieee.org/document/6188285/},
  urldate = {2024-01-27},
  abstract = {Particle system has long been a topic of research and has many applications. However, due to its complexity, the fast collision detection between particles and scene geometry is still a bottleneck for real-time or interactive applications. As a fuzzy system, visually correct is more important than physical accuracy at most time for particle system. In this paper, considering its simplicity, we propose to use a simplified version, which can be generated by any simplification method, to approximate the boundary of original scene mesh. We proposed a G-Octree acceleration structure to subdivide the scene space, combining the advantages of both the uniform grid and octree. The resultant G-Octree based agent is uploaded onto GPU to implement a parallel particle system. An encoding scheme is introduced to pack the hierarchical G-Octree structure into a flat 2D texture to exploit the optimized performance of texture memory system on GPU context. Compared with existing methods, the proposed method has potential to handle complex scene in practical applications. The experiments verify its effectiveness.},
  isbn = {978-0-7695-4647-6 978-1-4673-0689-8},
  langid = {english},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\SVGVEFCD\Xu et al. - 2012 - A G-Octree Based Fast Collision Detection for Larg.pdf}
}

@article{yang2010,
  title = {Real-{{Time Concurrent Linked List Construction}} on the {{GPU}}},
  author = {Yang, Jason C. and Hensley, Justin and Gr{\"u}n, Holger and Thibieroz, Nicolas},
  year = {2010},
  month = jun,
  journal = {Computer Graphics Forum},
  volume = {29},
  number = {4},
  pages = {1297--1304},
  issn = {0167-7055, 1467-8659},
  doi = {10.1111/j.1467-8659.2010.01725.x},
  url = {https://onlinelibrary.wiley.com/doi/10.1111/j.1467-8659.2010.01725.x},
  urldate = {2024-01-09},
  abstract = {We introduce a method to dynamically construct highly concurrent linked lists on modern graphics processors. Once constructed, these data structures can be used to implement a host of algorithms useful in creating complex rendering effects in real time. We present a straightforward way to create these linked lists using generic atomic operations available in APIs such as OpenGL 4.0 and DirectX 11. We also describe several possible applications of our algorithm. One example uses per-pixel linked lists for order-independent transparency; as a consequence, we are able to directly implement fully programmable blending, which frees developers from the restrictions imposed by current graphics APIs. The second uses linked lists to implement real-time indirect shadows.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\JXVDDM3T\Yang et al. - 2010 - Real‐Time Concurrent Linked List Construction on t.pdf}
}

@article{yang2023,
  title = {A {{GPU-accelerated}} Adaptive Particle Refinement for Multi-Phase Flow and Fluid-Structure Coupling {{SPH}}},
  author = {Yang, Qiuzu and Xu, Fei and Yang, Yang and Dai, Zhen and Wang, Jiayi},
  year = {2023},
  month = jul,
  journal = {Ocean Engineering},
  volume = {279},
  pages = {114514},
  issn = {00298018},
  doi = {10.1016/j.oceaneng.2023.114514},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0029801823008983},
  urldate = {2024-02-22},
  abstract = {In this paper, a graphical processing unit (GPU) implementation of adaptive particle refinement (APR) in the Smoothed Particle Hydrodynamics (SPH) framework is used to simulate the multi-phase flow and fluid-structure coupling problems. The multi-phase flow and fluid-structure coupling SPH models based on the Riemann solver are presented and the local particle refinement technique based on the axis-aligned square refinement pattern is adopted to split particles. A particle shifting technique constructing virtual fine particles (VFP-PST) is proposed to regularize the particle distribution for numrical accuracy and stability. To facilitate the device memory throughput efficiently, a dynamic resource management algorithm is used to implement GPU-accelerated adaptive particle refinement. Precision analysis shows the effect of the smooth length ratio of fine and coarse particles on numerical accuracy. Different tests have demonstrated that the proposed GPU-accelerated IAPR is accurate and stable and provides a promising approach to simulate the multi-phase flow and fluid-structure problems with low computational cost and comparable precision when compared with uniform particles.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\ZKVUT2JZ\Yang et al. - 2023 - A GPU-accelerated adaptive particle refinement for.pdf}
}

@inproceedings{yasuda2009,
  title = {Fast {{Rendering}} of {{Particle-Based Fluid}} by {{Utilizing Simulation Data}}},
  booktitle = {Eurographics 2009 - {{Short Papers}}},
  author = {Yasuda, Ren and Harada, Takahiro and Kawaguchi, Yoichiro},
  year = {2009},
  doi = {dx.doi.org/10.2312/egs.20091049},
  abstract = {This paper presents a novel algorithm for efficiently visualizing of particle-based fluid simulation with multiple refractions, especially smoothed particle hydrodynamics(SPH), using data and result of simulation itself. In general, particle-based fluid simulation and visualization are processed completely separated. The novelty of our method lives in combination of these two processes to avoid extra processes in visualization, and to mitigate computing cost of visualization.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\WSKBMUB6\Yasuda et al. - Fast Rendering of Particle-Based Fluid by Utilizin.pdf}
}

@article{yong2017,
  title = {Parallel {{GPU-based}} Collision Detection of Irregular Vessel Wall for Massive Particles},
  author = {Yong, Binbin and Shen, Jun and Sun, Hongyu and Chen, Huaming and Zhou, Qingguo},
  year = {2017},
  journal = {Cluster Computing},
  volume = {20},
  number = {3},
  pages = {2591--2603},
  issn = {1386-7857, 1573-7543},
  doi = {10.1007/s10586-017-0741-7},
  url = {http://link.springer.com/10.1007/s10586-017-0741-7},
  urldate = {2024-01-11},
  abstract = {In this paper, we present a novel GPU-based limit space decomposition collision detection algorithm (LSDCD) for performing collision detection between a massive number of particles and irregular objects, which is used in the design of the Accelerator Driven Sub-Critical (ADS) system. Test results indicate that, the collisions between ten million particles and the vessel can be detected on a general personal computer in only 0.5 s per frame. With this algorithm, the collision detection of maximum sixty million particles are calculated in 3.488030 s. Experiment results show that our algorithm is promising for fast collision detection.},
  langid = {english},
  keywords = {DEM Discrete Element method,done,GREGSpatial Partitiong Regular Grid,LSDCDlimit space decomposition collision detection algorithm,MATRIX,PSWMParticle Swarm,REFSRefs reviewd,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\Y5VJT4NC\Yong et al. - 2017 - Parallel GPU-based collision detection of irregula.pdf}
}

@article{yuan2022,
  title = {Massively-{{Parallel Lagrangian Particle Code}} and {{Applications}}},
  author = {Yuan, Shaohua and Aguilar, Mario Zepeda and Naitlho, Nizar and Samulyak, Roman},
  year = {2022},
  month = jun,
  eprint = {2206.11998},
  primaryclass = {physics},
  url = {http://arxiv.org/abs/2206.11998},
  urldate = {2024-01-11},
  abstract = {Massively-parallel, distributed-memory algorithms for the Lagrangian particle hydrodynamic method [R. Samulyak, X. Wang, H.-C. Chen, Lagrangian particle method for compressible fluid dynamics, J. Comput. Phys., 362 (2018), 1-19] have been developed, verified, and implemented. The key component of parallel algorithms is a particle management module that includes a parallel construction of octree databases, dynamic adaptation and refinement of octrees, and particle migration between parallel subdomains. The particle management module is based on the p4est (parallel forest of k-trees) library. The massively-parallel Lagrangian particle code has been applied to a variety of fundamental science and applied problems. A summary of Lagrangian particle code applications to the injection of impurities into thermonuclear fusion devices and to the simulation of supersonic hydrogen jets in support of laser-plasma wakefield acceleration projects has also been presented.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {APAutonomous Particle Definiton,CP Computational Physics,OCT Oct Tree,reviewed,SPTR Spectral Methods},
  file = {J:\sandboxR9\Thesis\zotero\storage\89AKFSRV\Yuan et al. - 2022 - Massively-Parallel Lagrangian Particle Code and Ap.pdf}
}

@book{yuen2013,
  title = {{{GPU Solutions}} to {{Multi-scale Problems}} in {{Science}} and {{Engineering}}},
  editor = {Yuen, David A. and Wang, Long and Chi, Xuebin and Johnsson, Lennart and Ge, Wei and Shi, Yaolin},
  year = {2013},
  series = {Lecture {{Notes}} in {{Earth System Sciences}}},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-16405-7},
  url = {https://link.springer.com/10.1007/978-3-642-16405-7},
  urldate = {2024-01-11},
  isbn = {978-3-642-16404-0 978-3-642-16405-7},
  langid = {english},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\7I74VXT2\Yuen et al. - 2013 - GPU Solutions to Multi-scale Problems in Science a.pdf}
}

@inproceedings{zanata2015,
  title = {Particle {{System}}},
  booktitle = {2015 {{International Conference}} on {{Cyberworlds}} ({{CW}})},
  author = {Zanata, Roberto},
  year = {2015},
  month = oct,
  pages = {384--386},
  publisher = {IEEE},
  address = {Visby, Sweden},
  doi = {10.1109/CW.2015.17},
  url = {https://ieeexplore.ieee.org/document/7398449},
  urldate = {2024-01-27},
  abstract = {In this paper we examine the project of a PARTICLE SYSTEM and the approaches to the NUI (Natural User Interface) applied to a multimedia interactive installation done with Processing1 and Supercollider2. Supercollider is a programming language for real time audio synthesis and algorithmic composition. Processing is an open source programming language and environment for people who want to create images, animations, and interactions''. It is designed to be used by artists, therefore does not require deep programming knowledge and it makes the task of practical implementation of ideas rather simple and immediate. It is very close to Java language but the possibility to implement interaction and 2D/3D graphics or animation of a particle system is much more easy. A particle system is a collection of many minute particles that together represent a fuzzy object. Over a period of time, particles are generated into a system, move and change from within the system, and die from the system.},
  isbn = {978-1-4673-9403-1},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\BCTFPLB5\Zanata - 2015 - Particle System.pdf}
}

@article{zhang-2002,
  title = {A Coherence-based Collision Detection Method for Dressed Human Simulation},
  author = {Zhang, Dongliang and Yuen, M.M.F.},
  year = {2002},
  month = mar,
  journal = {Computer Graphics Forum},
  volume = {21},
  number = {1},
  pages = {33--42},
  doi = {10.1111/1467-8659.00564},
  url = {https://doi.org/10.1111/1467-8659.00564},
  keywords = {tbd},
  file = {J:\sandboxR9\Thesis\zotero\storage\H6NQ3VUY\A Coherence‐based Collision Detection Method for Dressed Human Simulation.pdf}
}

@inproceedings{zhang2008,
  title = {Adaptive Sampling and Rendering of Fluids on the {{GPU}}},
  booktitle = {Proceedings of the {{Fifth Eurographics}} / {{IEEE VGTC}} Conference on {{Point-Based Graphics}}},
  author = {Zhang, Yanci and Solenthaler, Barbara and Pajarola, Renato},
  year = {2008},
  month = aug,
  series = {{{SPBG}}'08},
  pages = {137--146},
  publisher = {Eurographics Association},
  address = {Goslar, DEU},
  url = {https://dl.acm.org/doi/10.5555/2386410.2386433},
  urldate = {2024-02-08},
  abstract = {In this paper, we propose a novel GPU-friendly algorithm for the Smoothed Particle Hydrodynamics (SPH) simulation for weakly compressible fluids. The major goal of our algorithm is to implement a GPU-based SPH simulation that can simulate and render a large number of particles at interactive speed. Additionally, our algorithm exhibits the following three features. Firstly, our algorithm supports adaptive sampling of the fluids. Particles can be split into several sub-particles in geometrically complex regions to provide a more accurate simulation. At the same time, nearby particles deep inside the fluids are merged to a single particle to reduce the number of particles. Secondly, the fluids are visualized by directly computing the intersection between ray and an isosurface defined by the surface particles. A dynamic particle grouping algorithm and equation solver are employed to quickly find the ray-isosurface intersection. Thirdly, based on the observation that the SPH simulation is a naturally parallel algorithm, the whole SPH simulation, including the adaptive sampling of the fluids as well as surface particle rendering, is executed on the GPU to fully utilize the computational power and parallelism of modern graphics hardware. Our experimental data shows that we can simulate about 50K adaptively sampled particles, or up to 120K particles in the fixed sampling case at a rate of approximately 20 time steps per second.},
  isbn = {978-3-905674-12-5},
  keywords = {MATRIX,REFSRefs reviewd},
  file = {J:\sandboxR9\Thesis\zotero\storage\VE6ER7I3\Adaptive sampling and rendering of ﬂuids.pdf}
}

@article{zhang2015,
  title = {Simulating Particle Collision Process Based on {{Monte Carlo}} Method},
  author = {Zhang, Huang and Liu, Qianfeng and Qin, Benke and Bo, Hanliang},
  year = {2015},
  month = nov,
  journal = {Journal of Nuclear Science and Technology},
  volume = {52},
  number = {11},
  pages = {1393--1401},
  issn = {0022-3131, 1881-1248},
  doi = {10.1080/00223131.2014.1003152},
  url = {http://www.tandfonline.com/doi/full/10.1080/00223131.2014.1003152},
  urldate = {2024-01-27},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\VIAQSDYL\Zhang et al. - 2015 - Simulating particle collision process based on Mon.pdf}
}

@article{zhao2023,
  title = {Recent {{Advances}} and {{Perspectives}} of {{CFD}}--{{DEM Simulation}} in {{Fluidized Bed}}},
  author = {Zhao, Zhenjiang and Zhou, Ling and Bai, Ling and Wang, Bo and Agarwal, Ramesh},
  year = {2023},
  month = sep,
  journal = {Archives of Computational Methods in Engineering},
  issn = {1134-3060, 1886-1784},
  doi = {10.1007/s11831-023-10001-6},
  url = {https://link.springer.com/10.1007/s11831-023-10001-6},
  urldate = {2024-01-27},
  abstract = {The coupling of computational fluid dynamics (CFD) and discrete element method (DEM) has become an important method for studying dense fluidized beds. Since DEM can track the motion behavior of each particle individually and CFD can qualitatively and quantitatively describe the fluid evolution process, the discussion of fluidized beds using CFD--DEM method has been realized from small scale to laboratory scale and even extended to large engineering scale. This work presents a comprehensive review of the application of coupled CFD--DEM methods in fluidized beds and identifies the issues that need to be addressed. The detailed analysis is summarized mainly from the definition of particle flow system, DEM modeling theory (particle--fluid interaction and integration scheme of particle motion information, etc.), CFD modeling theory (discussion of turbulence model) and CFD--DEM coupled mapping methods (including Unresolved CFD--DEM and Resolved CFD--DEM). Existing studies have verified from multi-scales that the coupled CFD--DEM approach is reliable for predicting particle motion in fluidized beds. The findings are summarized and discussed, and future developments and challenges are highlighted. This work will provide theoretical guidance for subsequent researchers using the coupled CFD--DEM method.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\36V483ZV\Zhao et al. - 2023 - Recent Advances and Perspectives of CFD–DEM Simula.pdf}
}

@article{zheng2012,
  title = {{{GPU-based}} Parallel Algorithm for Particle Contact Detection and Its Application in Self-Compacting Concrete Flow Simulations},
  author = {Zheng, Jingwei and An, Xuehui and Huang, Miansong},
  year = {2012},
  month = dec,
  journal = {Computers \& Structures},
  volume = {112--113},
  pages = {193--204},
  issn = {00457949},
  doi = {10.1016/j.compstruc.2012.08.003},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0045794912001915},
  urldate = {2024-01-16},
  abstract = {In the present paper, we propose a novel parallel graphic processing unit (GPU)-friendly algorithm for contact detection. We develop a GPU-discrete element method (GPU--DEM) platform for self-compacting concrete (SCC) flow simulations. The algorithm takes full advantage of the parallel architecture of the GPU and can rapidly perform contact detection than that using CPU algorithm. Its scalability and robustness make it suitable for particle contact detection for different particle size distributions. The proposed GPU--DEM platform implements all the steps of DEM on GPU, which prevents the transfer of data between GPU and CPU. The proposed methodology is expected to be relevant in computational mechanics with applications to SCC flow simulations, where the number of particles ranges from millions to billions.},
  langid = {english},
  keywords = {CUDA CUDA,done,HCDHas particle collison Detection,MATRIX,REFSRefs reviewd,reviewed},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\FEB68ZSW\Zheng et al. - 2012 - GPU-based parallel algorithm for particle contact .pdf}
}

@article{zhou2010,
  title = {Real-{{Time KD-Tree Construction}} on {{Graphics Hardware}}},
  author = {Zhou, Kun and Hou, Qiming and Wang, Rui and Guo, Baining},
  year = {2010},
  abstract = {We present an algorithm for constructing kd-trees on GPUs. This algorithm achieves real-time performance by exploiting the GPU's streaming architecture at all stages of kd-tree construction. Unlike previous parallel kd-tree algorithms, our method builds tree nodes completely in BFS (breadth-first search) order. We also develop a special strategy for large nodes at upper tree levels so as to further exploit the fine-grained parallelism of GPUs. For these nodes, we parallelize the computation over all geometric primitives instead of nodes at each level. Finally, in order to maintain kd-tree quality, we introduce novel schemes for fast evaluation of node split costs.},
  langid = {english},
  keywords = {KDTKD Tree,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\N5XSVD5U\Zhou et al. - Real-Time KD-Tree Construction on Graphics Hardwar.pdf}
}

@article{zhou2011,
  title = {Discrete Particle Simulation of Gas Fluidization of Ellipsoidal Particles},
  author = {Zhou, Z.Y. and Pinson, D. and Zou, R.P. and Yu, A.B.},
  year = {2011},
  month = dec,
  journal = {Chemical Engineering Science},
  volume = {66},
  number = {23},
  pages = {6128--6145},
  issn = {00092509},
  doi = {10.1016/j.ces.2011.08.041},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0009250911006105},
  urldate = {2024-01-25},
  abstract = {Fluidization is widely used in industries and has been extensively studied, either experimentally or theoretically, in the past decades. In recent years, a coupled simulation approach of discrete element method (DEM) and computational fluid dynamics (CFD) has been successfully developed to study the gas--solid flow and heat transfer in fluidization at a particle scale. However, to date, such studies mainly deal with spherical particles. The effect of particle shape on fluidization is recognized but not properly quantified. In this paper, the CFD--DEM approach is extended to consider the fluidization of ellipsoidal particles. In the simulation, particles used are either oblate or prolate, with aspect ratios varying from very flat (aspect ratio {$\frac{1}{4}$}0.25) to elongated (aspect ratio {$\frac{1}{4}$} 3.5), representing cylinder-type and disk-type shaped particles, respectively. The commonly used correlations to determine the fluid drag force acting on a non-spherical particle are compared first. Then the model is verified in terms of solid flow patterns. The effect of aspect ratio on the flow pattern, the relationship between pressure drop and gas superficial velocity, and microscopic parameters such as coordination number, particle orientation and force structure are investigated. It is shown that particle shape affects bed permeability and the minimum fluidization velocity significantly. The coordination number generally increases with aspect ratio deviating from 1.0. The analysis of particle orientations shows that the bed structures for ellipsoids are not random as that for spheres. Oblate particles prefer facing upward or downward while prolate particles prefer horizontal orientation. Spheres have the largest particle--particle contact force and fluid drag force under the comparable conditions. With aspect ratio deviating from 1.0, particle--particle interaction and fluid drag become relatively weak. The proposed model shows a promising method in examining the effect of particle shape on different flow behaviour in gas fluidization.},
  langid = {english},
  keywords = {CNCoordnation number,ELLPellipsoidal particles,GPUMGPU memory,LCM Linked Cell Method,reviewed},
  file = {J:\sandboxR9\Thesis\zotero\storage\G6TMFVMQ\Zhou et al. - 2011 - Discrete particle simulation of gas fluidization o.pdf}
}

@article{zhu2007,
  title = {Discrete Particle Simulation of Particulate Systems: {{Theoretical}} Developments},
  shorttitle = {Discrete Particle Simulation of Particulate Systems},
  author = {Zhu, H.P. and Zhou, Z.Y. and Yang, R.Y. and Yu, A.B.},
  year = {2007},
  month = jul,
  journal = {Chemical Engineering Science},
  volume = {62},
  number = {13},
  pages = {3378--3396},
  issn = {00092509},
  doi = {10.1016/j.ces.2006.12.089},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S000925090700262X},
  urldate = {2024-01-16},
  abstract = {Particle science and technology is a rapidly developing interdisciplinary research area with its core being the understanding of the relationships between micro- and macroscopic properties of particulate/granular matter---a state of matter that is widely encountered but poorly understood. The macroscopic behaviour of particulate matter is controlled by the interactions between individual particles as well as interactions with surrounding fluids. Understanding the microscopic mechanisms in terms of these interaction forces is therefore key to leading to truly interdisciplinary research into particulate matter and producing results that can be generally used. This aim can be effectively achieved via particle scale research based on detailed microdynamic information such as the forces acting on and trajectories of individual particles in a considered system. In recent years, such research has been rapidly developed worldwide, mainly as a result of the rapid development of discrete particle simulation technique and computer technology. This paper reviews the work in this area with special reference to the discrete element method and associated theoretical developments. It covers three important aspects: models for the calculation of the particle--particle and particle--fluid interaction forces, coupling of discrete element method with computational fluid dynamics to describe particle--fluid flow, and the theories for linking discrete to continuum modelling. Needs for future development are also discussed.},
  langid = {english},
  keywords = {reviewed},
  file = {J:\RCCDLibrary\ThesisLibrary\zotero\storage\BICGNUJY\Zhu et al. - 2007 - Discrete particle simulation of particulate system.pdf}
}

@incollection{zonnchen2020,
  title = {{{GPGPU Computing}} for {{Microscopic Pedestrian Simulation}}},
  booktitle = {Advances in {{Parallel Computing}}},
  author = {Z{\"o}nnchen, Benedikt and K{\"o}ster, Gerta},
  editor = {Foster, Ian and Joubert, Gerhard R. and Ku{\v c}era, Lud{\v e}k and Nagel, Wolfgang E. and Peters, Frans},
  year = {2020},
  month = mar,
  publisher = {IOS Press},
  doi = {10.3233/APC200029},
  url = {https://ebooks.iospress.nl/doi/10.3233/APC200029},
  urldate = {2024-02-07},
  abstract = {GPGPU computation of microscopic pedestrian simulations has been largely restricted to Cellular Automata and differential equations models, leaving out most agent-based models that rely on sequential updates. We combine a linkedcell data structure to reduce neighborhood complexity with a massive parallel filtering technique to identify agents that can be updated in parallel, thus extending GPGPU computation to one such model, the Optimal Steps Model. We compare two different OpenCL implementations: a parallel event-driven update scheme and a parallel update scheme that violates the event order for the sake of parallelism. We achieve significant speed ups for both in two benchmark scenarios making faster than real-time simulations possible even for large-scale scenarios.},
  isbn = {978-1-64368-070-5 978-1-64368-071-2},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\EDJ7P7QW\Zönnchen and Köster - 2020 - GPGPU Computing for Microscopic Pedestrian Simulat.pdf}
}

@misc{zotero-1030,
  title = {Game {{Engineering}} - {{Newcastle University}}},
  publisher = {Newcastle University},
  url = {https://research.ncl.ac.uk/game/mastersdegree/gametechnologies/physicstutorials/6accelerationstructures/},
  urldate = {2024-02-06},
  langid = {english},
  file = {J\:\\sandboxR9\\Thesis\\zotero\\storage\\KGB29XL7\\Physics - Spatial Acceleration Structures.pdf;J\:\\sandboxR9\\Thesis\\zotero\\storage\\NHVQ3XQE\\6accelerationstructures.html}
}

@misc{zotero-1263,
  title = {0001\_{{Directions For Use}}}
}

@misc{zotero-361,
  title = {Parallel {{Computing}} {\textbar} {{Methods}}, {{Algorithms}} and {{Applications}} {\textbar} {{D}}.{{J Evans}},},
  url = {https://www-taylorfrancis-com.lp.hscl.ufl.edu/pdfviewer/},
  urldate = {2024-01-11},
  file = {J:\sandboxR9\Thesis\zotero\storage\WQ3NE75V\pdfviewer.html}
}

@misc{zotero-582,
  title = {Fluidized {{Bed Reactor Simulation}} {\textbar} {{Barracuda Virtual Reactor}}},
  journal = {Default},
  url = {https://altair.com/barracuda-virtual-reactor},
  urldate = {2024-01-25},
  abstract = {Barracuda Virtual Reactor is a physics-based engineering software package that simulates the three-dimensional, transient, fluid-particle hydrodynamics, heat balance, and chemical reactions in industrial fluidized bed reactors and other fluid-particle systems.},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\5535BGDQ\barracuda-virtual-reactor.html}
}

@inproceedings{zou2009,
  title = {A {{GPGPU-Based Collision Detection Algorithm}}},
  booktitle = {2009 {{Fifth International Conference}} on {{Image}} and {{Graphics}}},
  author = {Zou, Yisheng and Zhou, Xiaoli and Ding, Guofu and He, Yong and Jia, Meiwei},
  year = {2009},
  month = sep,
  pages = {938--942},
  publisher = {IEEE},
  address = {Xi'an, China},
  doi = {10.1109/ICIG.2009.127},
  url = {https://ieeexplore.ieee.org/document/5437852/},
  urldate = {2024-01-10},
  abstract = {A GPGPU-based collision detection algorithm is proposed. Firstly, the information of OBB hierarchy tree and triangles of tested objects are mapped into some data textures designed for GPGPU-based calculation, such as triangle vertex textures, bounding box size texture, tree node relationship texture，etc., then these textures are downloaded to GPU to complete the data preparation. Secondly, the whole collision detection is executed on GPU, in which three key contents are fulfilled: reading necessary data from related textures correctly by order coordinate method and index coordinate method, detecting the intersection between triangle and OBB, triangle and triangle through a collision detection index array. Lastly, collision detection results are outputted to a texture by FBO technology and read back to CPU for post-processing. The data transmission between CPU and GPU is only twice, which reduce the time to read data. Testing results show that the detecting speed of the algorithm proposed in this paper is faster than the similar CPU-based algorithm obviously with the increasing complexity of tested objects, while keeps the same precision.},
  isbn = {978-1-4244-5237-8},
  langid = {english},
  file = {J:\sandboxR9\Thesis\zotero\storage\U2GEDA55\Zou et al. - 2009 - A GPGPU-Based Collision Detection Algorithm.pdf}
}

@article{zou2017,
  title = {Collision Detection for Virtual Environment Using Particle Swarm Optimization with Adaptive Cauchy Mutation},
  author = {Zou, Yanni and Liu, Peter X. and Yang, Chunsheng and Li, Chunquan and Cheng, Qiangqiang},
  year = {2017},
  month = jun,
  journal = {Cluster Computing},
  volume = {20},
  number = {2},
  pages = {1765--1774},
  issn = {1386-7857, 1573-7543},
  doi = {10.1007/s10586-017-0815-6},
  url = {http://link.springer.com/10.1007/s10586-017-0815-6},
  urldate = {2024-01-11},
  abstract = {Rapid and accurate detection of collision between virtual objects is crucial for many virtual reality based applications. In order to ensure a high-level of accuracy and to meet the real-time requirement, a fast collision detection algorithm between soft bodies is proposed. The developed algorithm is a combination of stochastic methods and particle swarm optimization with adaptive Cauchy mutation. The hierarchical bounding box method is used for a rough detection in order to filter out obvious disjoint space, and the problem is converted to a nonlinear optimization problem based on the distance of points. Then particle swarm optimization with adaptive Cauchy mutation is used to find the optimal solution. When it is updated iteratively, keeping some particles experience value and variation of other particles avoids particles trapped in local optimum, which further accelerates the speed of collision detection. The algorithm is implemented and evaluated through experiments and the results confirm the advantages of the developed algorithm.},
  langid = {english},
  keywords = {HCDHas particle collison Detection,PSWMParticle Swarm,reviewed,STOStochastic},
  file = {J:\sandboxR9\Thesis\zotero\storage\E25H2RJV\Zou et al. - 2017 - Collision detection for virtual environment using .pdf}
}
